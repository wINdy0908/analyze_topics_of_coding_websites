-- MySQL dump 10.13  Distrib 8.0.24, for Win64 (x86_64)
--
-- Host: 127.0.0.1    Database: problem_db
-- ------------------------------------------------------
-- Server version	8.0.24

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `leetcode_topic`
--

DROP TABLE IF EXISTS `leetcode_topic`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `leetcode_topic` (
  `id` int NOT NULL,
  `title_slug` varchar(255) NOT NULL,
  `topic_name` varchar(255) NOT NULL,
  `topic_slug` varchar(255) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `leetcode_topic`
--

LOCK TABLES `leetcode_topic` WRITE;
/*!40000 ALTER TABLE `leetcode_topic` DISABLE KEYS */;
INSERT INTO `leetcode_topic` VALUES (1,'two-sum','Array','array'),(1,'two-sum','Hash Table','hash-table'),(2,'add-two-numbers','Linked List','linked-list'),(2,'add-two-numbers','Math','math'),(2,'add-two-numbers','Recursion','recursion'),(3,'longest-substring-without-repeating-characters','Hash Table','hash-table'),(3,'longest-substring-without-repeating-characters','String','string'),(3,'longest-substring-without-repeating-characters','Sliding Window','sliding-window'),(4,'median-of-two-sorted-arrays','Array','array'),(4,'median-of-two-sorted-arrays','Binary Search','binary-search'),(4,'median-of-two-sorted-arrays','Divide and Conquer','divide-and-conquer'),(5,'longest-palindromic-substring','String','string'),(5,'longest-palindromic-substring','Dynamic Programming','dynamic-programming'),(6,'zigzag-conversion','String','string'),(7,'reverse-integer','Math','math'),(8,'string-to-integer-atoi','String','string'),(9,'palindrome-number','Math','math'),(10,'regular-expression-matching','String','string'),(10,'regular-expression-matching','Dynamic Programming','dynamic-programming'),(10,'regular-expression-matching','Recursion','recursion'),(11,'container-with-most-water','Array','array'),(11,'container-with-most-water','Two Pointers','two-pointers'),(11,'container-with-most-water','Greedy','greedy'),(12,'integer-to-roman','Hash Table','hash-table'),(12,'integer-to-roman','Math','math'),(12,'integer-to-roman','String','string'),(13,'roman-to-integer','Hash Table','hash-table'),(13,'roman-to-integer','Math','math'),(13,'roman-to-integer','String','string'),(14,'longest-common-prefix','String','string'),(14,'longest-common-prefix','Trie','trie'),(15,'3sum','Array','array'),(15,'3sum','Two Pointers','two-pointers'),(15,'3sum','Sorting','sorting'),(16,'3sum-closest','Array','array'),(16,'3sum-closest','Two Pointers','two-pointers'),(16,'3sum-closest','Sorting','sorting'),(17,'letter-combinations-of-a-phone-number','Hash Table','hash-table'),(17,'letter-combinations-of-a-phone-number','String','string'),(17,'letter-combinations-of-a-phone-number','Backtracking','backtracking'),(18,'4sum','Array','array'),(18,'4sum','Two Pointers','two-pointers'),(18,'4sum','Sorting','sorting'),(19,'remove-nth-node-from-end-of-list','Linked List','linked-list'),(19,'remove-nth-node-from-end-of-list','Two Pointers','two-pointers'),(20,'valid-parentheses','String','string'),(20,'valid-parentheses','Stack','stack'),(21,'merge-two-sorted-lists','Linked List','linked-list'),(21,'merge-two-sorted-lists','Recursion','recursion'),(22,'generate-parentheses','String','string'),(22,'generate-parentheses','Dynamic Programming','dynamic-programming'),(22,'generate-parentheses','Backtracking','backtracking'),(23,'merge-k-sorted-lists','Linked List','linked-list'),(23,'merge-k-sorted-lists','Divide and Conquer','divide-and-conquer'),(23,'merge-k-sorted-lists','Heap (Priority Queue)','heap-priority-queue'),(23,'merge-k-sorted-lists','Merge Sort','merge-sort'),(24,'swap-nodes-in-pairs','Linked List','linked-list'),(24,'swap-nodes-in-pairs','Recursion','recursion'),(25,'reverse-nodes-in-k-group','Linked List','linked-list'),(25,'reverse-nodes-in-k-group','Recursion','recursion'),(26,'remove-duplicates-from-sorted-array','Array','array'),(26,'remove-duplicates-from-sorted-array','Two Pointers','two-pointers'),(27,'remove-element','Array','array'),(27,'remove-element','Two Pointers','two-pointers'),(28,'find-the-index-of-the-first-occurrence-in-a-string','Two Pointers','two-pointers'),(28,'find-the-index-of-the-first-occurrence-in-a-string','String','string'),(28,'find-the-index-of-the-first-occurrence-in-a-string','String Matching','string-matching'),(29,'divide-two-integers','Math','math'),(29,'divide-two-integers','Bit Manipulation','bit-manipulation'),(30,'substring-with-concatenation-of-all-words','Hash Table','hash-table'),(30,'substring-with-concatenation-of-all-words','String','string'),(30,'substring-with-concatenation-of-all-words','Sliding Window','sliding-window'),(31,'next-permutation','Array','array'),(31,'next-permutation','Two Pointers','two-pointers'),(32,'longest-valid-parentheses','String','string'),(32,'longest-valid-parentheses','Dynamic Programming','dynamic-programming'),(32,'longest-valid-parentheses','Stack','stack'),(33,'search-in-rotated-sorted-array','Array','array'),(33,'search-in-rotated-sorted-array','Binary Search','binary-search'),(34,'find-first-and-last-position-of-element-in-sorted-array','Array','array'),(34,'find-first-and-last-position-of-element-in-sorted-array','Binary Search','binary-search'),(35,'search-insert-position','Array','array'),(35,'search-insert-position','Binary Search','binary-search'),(36,'valid-sudoku','Array','array'),(36,'valid-sudoku','Hash Table','hash-table'),(36,'valid-sudoku','Matrix','matrix'),(37,'sudoku-solver','Array','array'),(37,'sudoku-solver','Hash Table','hash-table'),(37,'sudoku-solver','Backtracking','backtracking'),(37,'sudoku-solver','Matrix','matrix'),(38,'count-and-say','String','string'),(39,'combination-sum','Array','array'),(39,'combination-sum','Backtracking','backtracking'),(40,'combination-sum-ii','Array','array'),(40,'combination-sum-ii','Backtracking','backtracking'),(41,'first-missing-positive','Array','array'),(41,'first-missing-positive','Hash Table','hash-table'),(42,'trapping-rain-water','Array','array'),(42,'trapping-rain-water','Two Pointers','two-pointers'),(42,'trapping-rain-water','Dynamic Programming','dynamic-programming'),(42,'trapping-rain-water','Stack','stack'),(42,'trapping-rain-water','Monotonic Stack','monotonic-stack'),(43,'multiply-strings','Math','math'),(43,'multiply-strings','String','string'),(43,'multiply-strings','Simulation','simulation'),(44,'wildcard-matching','String','string'),(44,'wildcard-matching','Dynamic Programming','dynamic-programming'),(44,'wildcard-matching','Greedy','greedy'),(44,'wildcard-matching','Recursion','recursion'),(45,'jump-game-ii','Array','array'),(45,'jump-game-ii','Dynamic Programming','dynamic-programming'),(45,'jump-game-ii','Greedy','greedy'),(46,'permutations','Array','array'),(46,'permutations','Backtracking','backtracking'),(47,'permutations-ii','Array','array'),(47,'permutations-ii','Backtracking','backtracking'),(48,'rotate-image','Array','array'),(48,'rotate-image','Math','math'),(48,'rotate-image','Matrix','matrix'),(49,'group-anagrams','Array','array'),(49,'group-anagrams','Hash Table','hash-table'),(49,'group-anagrams','String','string'),(49,'group-anagrams','Sorting','sorting'),(50,'powx-n','Math','math'),(50,'powx-n','Recursion','recursion'),(51,'n-queens','Array','array'),(51,'n-queens','Backtracking','backtracking'),(52,'n-queens-ii','Backtracking','backtracking'),(53,'maximum-subarray','Array','array'),(53,'maximum-subarray','Divide and Conquer','divide-and-conquer'),(53,'maximum-subarray','Dynamic Programming','dynamic-programming'),(54,'spiral-matrix','Array','array'),(54,'spiral-matrix','Matrix','matrix'),(54,'spiral-matrix','Simulation','simulation'),(55,'jump-game','Array','array'),(55,'jump-game','Dynamic Programming','dynamic-programming'),(55,'jump-game','Greedy','greedy'),(56,'merge-intervals','Array','array'),(56,'merge-intervals','Sorting','sorting'),(57,'insert-interval','Array','array'),(58,'length-of-last-word','String','string'),(59,'spiral-matrix-ii','Array','array'),(59,'spiral-matrix-ii','Matrix','matrix'),(59,'spiral-matrix-ii','Simulation','simulation'),(60,'permutation-sequence','Math','math'),(60,'permutation-sequence','Recursion','recursion'),(61,'rotate-list','Linked List','linked-list'),(61,'rotate-list','Two Pointers','two-pointers'),(62,'unique-paths','Math','math'),(62,'unique-paths','Dynamic Programming','dynamic-programming'),(62,'unique-paths','Combinatorics','combinatorics'),(63,'unique-paths-ii','Array','array'),(63,'unique-paths-ii','Dynamic Programming','dynamic-programming'),(63,'unique-paths-ii','Matrix','matrix'),(64,'minimum-path-sum','Array','array'),(64,'minimum-path-sum','Dynamic Programming','dynamic-programming'),(64,'minimum-path-sum','Matrix','matrix'),(65,'valid-number','String','string'),(66,'plus-one','Array','array'),(66,'plus-one','Math','math'),(67,'add-binary','Math','math'),(67,'add-binary','String','string'),(67,'add-binary','Bit Manipulation','bit-manipulation'),(67,'add-binary','Simulation','simulation'),(68,'text-justification','Array','array'),(68,'text-justification','String','string'),(68,'text-justification','Simulation','simulation'),(69,'sqrtx','Math','math'),(69,'sqrtx','Binary Search','binary-search'),(70,'climbing-stairs','Math','math'),(70,'climbing-stairs','Dynamic Programming','dynamic-programming'),(70,'climbing-stairs','Memoization','memoization'),(71,'simplify-path','String','string'),(71,'simplify-path','Stack','stack'),(72,'edit-distance','String','string'),(72,'edit-distance','Dynamic Programming','dynamic-programming'),(73,'set-matrix-zeroes','Array','array'),(73,'set-matrix-zeroes','Hash Table','hash-table'),(73,'set-matrix-zeroes','Matrix','matrix'),(74,'search-a-2d-matrix','Array','array'),(74,'search-a-2d-matrix','Binary Search','binary-search'),(74,'search-a-2d-matrix','Matrix','matrix'),(75,'sort-colors','Array','array'),(75,'sort-colors','Two Pointers','two-pointers'),(75,'sort-colors','Sorting','sorting'),(76,'minimum-window-substring','Hash Table','hash-table'),(76,'minimum-window-substring','String','string'),(76,'minimum-window-substring','Sliding Window','sliding-window'),(77,'combinations','Backtracking','backtracking'),(78,'subsets','Array','array'),(78,'subsets','Backtracking','backtracking'),(78,'subsets','Bit Manipulation','bit-manipulation'),(79,'word-search','Array','array'),(79,'word-search','Backtracking','backtracking'),(79,'word-search','Matrix','matrix'),(80,'remove-duplicates-from-sorted-array-ii','Array','array'),(80,'remove-duplicates-from-sorted-array-ii','Two Pointers','two-pointers'),(81,'search-in-rotated-sorted-array-ii','Array','array'),(81,'search-in-rotated-sorted-array-ii','Binary Search','binary-search'),(82,'remove-duplicates-from-sorted-list-ii','Linked List','linked-list'),(82,'remove-duplicates-from-sorted-list-ii','Two Pointers','two-pointers'),(83,'remove-duplicates-from-sorted-list','Linked List','linked-list'),(84,'largest-rectangle-in-histogram','Array','array'),(84,'largest-rectangle-in-histogram','Stack','stack'),(84,'largest-rectangle-in-histogram','Monotonic Stack','monotonic-stack'),(85,'maximal-rectangle','Array','array'),(85,'maximal-rectangle','Dynamic Programming','dynamic-programming'),(85,'maximal-rectangle','Stack','stack'),(85,'maximal-rectangle','Matrix','matrix'),(85,'maximal-rectangle','Monotonic Stack','monotonic-stack'),(86,'partition-list','Linked List','linked-list'),(86,'partition-list','Two Pointers','two-pointers'),(87,'scramble-string','String','string'),(87,'scramble-string','Dynamic Programming','dynamic-programming'),(88,'merge-sorted-array','Array','array'),(88,'merge-sorted-array','Two Pointers','two-pointers'),(88,'merge-sorted-array','Sorting','sorting'),(89,'gray-code','Math','math'),(89,'gray-code','Backtracking','backtracking'),(89,'gray-code','Bit Manipulation','bit-manipulation'),(90,'subsets-ii','Array','array'),(90,'subsets-ii','Backtracking','backtracking'),(90,'subsets-ii','Bit Manipulation','bit-manipulation'),(91,'decode-ways','String','string'),(91,'decode-ways','Dynamic Programming','dynamic-programming'),(92,'reverse-linked-list-ii','Linked List','linked-list'),(93,'restore-ip-addresses','String','string'),(93,'restore-ip-addresses','Backtracking','backtracking'),(94,'binary-tree-inorder-traversal','Stack','stack'),(94,'binary-tree-inorder-traversal','Tree','tree'),(94,'binary-tree-inorder-traversal','Depth-First Search','depth-first-search'),(94,'binary-tree-inorder-traversal','Binary Tree','binary-tree'),(95,'unique-binary-search-trees-ii','Dynamic Programming','dynamic-programming'),(95,'unique-binary-search-trees-ii','Backtracking','backtracking'),(95,'unique-binary-search-trees-ii','Tree','tree'),(95,'unique-binary-search-trees-ii','Binary Search Tree','binary-search-tree'),(95,'unique-binary-search-trees-ii','Binary Tree','binary-tree'),(96,'unique-binary-search-trees','Math','math'),(96,'unique-binary-search-trees','Dynamic Programming','dynamic-programming'),(96,'unique-binary-search-trees','Tree','tree'),(96,'unique-binary-search-trees','Binary Search Tree','binary-search-tree'),(96,'unique-binary-search-trees','Binary Tree','binary-tree'),(97,'interleaving-string','String','string'),(97,'interleaving-string','Dynamic Programming','dynamic-programming'),(98,'validate-binary-search-tree','Tree','tree'),(98,'validate-binary-search-tree','Depth-First Search','depth-first-search'),(98,'validate-binary-search-tree','Binary Search Tree','binary-search-tree'),(98,'validate-binary-search-tree','Binary Tree','binary-tree'),(99,'recover-binary-search-tree','Tree','tree'),(99,'recover-binary-search-tree','Depth-First Search','depth-first-search'),(99,'recover-binary-search-tree','Binary Search Tree','binary-search-tree'),(99,'recover-binary-search-tree','Binary Tree','binary-tree'),(100,'same-tree','Tree','tree'),(100,'same-tree','Depth-First Search','depth-first-search'),(100,'same-tree','Breadth-First Search','breadth-first-search'),(100,'same-tree','Binary Tree','binary-tree'),(101,'symmetric-tree','Tree','tree'),(101,'symmetric-tree','Depth-First Search','depth-first-search'),(101,'symmetric-tree','Breadth-First Search','breadth-first-search'),(101,'symmetric-tree','Binary Tree','binary-tree'),(102,'binary-tree-level-order-traversal','Tree','tree'),(102,'binary-tree-level-order-traversal','Breadth-First Search','breadth-first-search'),(102,'binary-tree-level-order-traversal','Binary Tree','binary-tree'),(103,'binary-tree-zigzag-level-order-traversal','Tree','tree'),(103,'binary-tree-zigzag-level-order-traversal','Breadth-First Search','breadth-first-search'),(103,'binary-tree-zigzag-level-order-traversal','Binary Tree','binary-tree'),(104,'maximum-depth-of-binary-tree','Tree','tree'),(104,'maximum-depth-of-binary-tree','Depth-First Search','depth-first-search'),(104,'maximum-depth-of-binary-tree','Breadth-First Search','breadth-first-search'),(104,'maximum-depth-of-binary-tree','Binary Tree','binary-tree'),(105,'construct-binary-tree-from-preorder-and-inorder-traversal','Array','array'),(105,'construct-binary-tree-from-preorder-and-inorder-traversal','Hash Table','hash-table'),(105,'construct-binary-tree-from-preorder-and-inorder-traversal','Divide and Conquer','divide-and-conquer'),(105,'construct-binary-tree-from-preorder-and-inorder-traversal','Tree','tree'),(105,'construct-binary-tree-from-preorder-and-inorder-traversal','Binary Tree','binary-tree'),(106,'construct-binary-tree-from-inorder-and-postorder-traversal','Array','array'),(106,'construct-binary-tree-from-inorder-and-postorder-traversal','Hash Table','hash-table'),(106,'construct-binary-tree-from-inorder-and-postorder-traversal','Divide and Conquer','divide-and-conquer'),(106,'construct-binary-tree-from-inorder-and-postorder-traversal','Tree','tree'),(106,'construct-binary-tree-from-inorder-and-postorder-traversal','Binary Tree','binary-tree'),(107,'binary-tree-level-order-traversal-ii','Tree','tree'),(107,'binary-tree-level-order-traversal-ii','Breadth-First Search','breadth-first-search'),(107,'binary-tree-level-order-traversal-ii','Binary Tree','binary-tree'),(108,'convert-sorted-array-to-binary-search-tree','Array','array'),(108,'convert-sorted-array-to-binary-search-tree','Divide and Conquer','divide-and-conquer'),(108,'convert-sorted-array-to-binary-search-tree','Tree','tree'),(108,'convert-sorted-array-to-binary-search-tree','Binary Search Tree','binary-search-tree'),(108,'convert-sorted-array-to-binary-search-tree','Binary Tree','binary-tree'),(109,'convert-sorted-list-to-binary-search-tree','Linked List','linked-list'),(109,'convert-sorted-list-to-binary-search-tree','Divide and Conquer','divide-and-conquer'),(109,'convert-sorted-list-to-binary-search-tree','Tree','tree'),(109,'convert-sorted-list-to-binary-search-tree','Binary Search Tree','binary-search-tree'),(109,'convert-sorted-list-to-binary-search-tree','Binary Tree','binary-tree'),(110,'balanced-binary-tree','Tree','tree'),(110,'balanced-binary-tree','Depth-First Search','depth-first-search'),(110,'balanced-binary-tree','Binary Tree','binary-tree'),(111,'minimum-depth-of-binary-tree','Tree','tree'),(111,'minimum-depth-of-binary-tree','Depth-First Search','depth-first-search'),(111,'minimum-depth-of-binary-tree','Breadth-First Search','breadth-first-search'),(111,'minimum-depth-of-binary-tree','Binary Tree','binary-tree'),(112,'path-sum','Tree','tree'),(112,'path-sum','Depth-First Search','depth-first-search'),(112,'path-sum','Breadth-First Search','breadth-first-search'),(112,'path-sum','Binary Tree','binary-tree'),(113,'path-sum-ii','Backtracking','backtracking'),(113,'path-sum-ii','Tree','tree'),(113,'path-sum-ii','Depth-First Search','depth-first-search'),(113,'path-sum-ii','Binary Tree','binary-tree'),(114,'flatten-binary-tree-to-linked-list','Linked List','linked-list'),(114,'flatten-binary-tree-to-linked-list','Stack','stack'),(114,'flatten-binary-tree-to-linked-list','Tree','tree'),(114,'flatten-binary-tree-to-linked-list','Depth-First Search','depth-first-search'),(114,'flatten-binary-tree-to-linked-list','Binary Tree','binary-tree'),(115,'distinct-subsequences','String','string'),(115,'distinct-subsequences','Dynamic Programming','dynamic-programming'),(116,'populating-next-right-pointers-in-each-node','Linked List','linked-list'),(116,'populating-next-right-pointers-in-each-node','Tree','tree'),(116,'populating-next-right-pointers-in-each-node','Depth-First Search','depth-first-search'),(116,'populating-next-right-pointers-in-each-node','Breadth-First Search','breadth-first-search'),(116,'populating-next-right-pointers-in-each-node','Binary Tree','binary-tree'),(117,'populating-next-right-pointers-in-each-node-ii','Linked List','linked-list'),(117,'populating-next-right-pointers-in-each-node-ii','Tree','tree'),(117,'populating-next-right-pointers-in-each-node-ii','Depth-First Search','depth-first-search'),(117,'populating-next-right-pointers-in-each-node-ii','Breadth-First Search','breadth-first-search'),(117,'populating-next-right-pointers-in-each-node-ii','Binary Tree','binary-tree'),(118,'pascals-triangle','Array','array'),(118,'pascals-triangle','Dynamic Programming','dynamic-programming'),(119,'pascals-triangle-ii','Array','array'),(119,'pascals-triangle-ii','Dynamic Programming','dynamic-programming'),(120,'triangle','Array','array'),(120,'triangle','Dynamic Programming','dynamic-programming'),(121,'best-time-to-buy-and-sell-stock','Array','array'),(121,'best-time-to-buy-and-sell-stock','Dynamic Programming','dynamic-programming'),(122,'best-time-to-buy-and-sell-stock-ii','Array','array'),(122,'best-time-to-buy-and-sell-stock-ii','Dynamic Programming','dynamic-programming'),(122,'best-time-to-buy-and-sell-stock-ii','Greedy','greedy'),(123,'best-time-to-buy-and-sell-stock-iii','Array','array'),(123,'best-time-to-buy-and-sell-stock-iii','Dynamic Programming','dynamic-programming'),(124,'binary-tree-maximum-path-sum','Dynamic Programming','dynamic-programming'),(124,'binary-tree-maximum-path-sum','Tree','tree'),(124,'binary-tree-maximum-path-sum','Depth-First Search','depth-first-search'),(124,'binary-tree-maximum-path-sum','Binary Tree','binary-tree'),(125,'valid-palindrome','Two Pointers','two-pointers'),(125,'valid-palindrome','String','string'),(126,'word-ladder-ii','Hash Table','hash-table'),(126,'word-ladder-ii','String','string'),(126,'word-ladder-ii','Backtracking','backtracking'),(126,'word-ladder-ii','Breadth-First Search','breadth-first-search'),(127,'word-ladder','Hash Table','hash-table'),(127,'word-ladder','String','string'),(127,'word-ladder','Breadth-First Search','breadth-first-search'),(128,'longest-consecutive-sequence','Array','array'),(128,'longest-consecutive-sequence','Hash Table','hash-table'),(128,'longest-consecutive-sequence','Union Find','union-find'),(129,'sum-root-to-leaf-numbers','Tree','tree'),(129,'sum-root-to-leaf-numbers','Depth-First Search','depth-first-search'),(129,'sum-root-to-leaf-numbers','Binary Tree','binary-tree'),(130,'surrounded-regions','Array','array'),(130,'surrounded-regions','Depth-First Search','depth-first-search'),(130,'surrounded-regions','Breadth-First Search','breadth-first-search'),(130,'surrounded-regions','Union Find','union-find'),(130,'surrounded-regions','Matrix','matrix'),(131,'palindrome-partitioning','String','string'),(131,'palindrome-partitioning','Dynamic Programming','dynamic-programming'),(131,'palindrome-partitioning','Backtracking','backtracking'),(132,'palindrome-partitioning-ii','String','string'),(132,'palindrome-partitioning-ii','Dynamic Programming','dynamic-programming'),(133,'clone-graph','Hash Table','hash-table'),(133,'clone-graph','Depth-First Search','depth-first-search'),(133,'clone-graph','Breadth-First Search','breadth-first-search'),(133,'clone-graph','Graph','graph'),(134,'gas-station','Array','array'),(134,'gas-station','Greedy','greedy'),(135,'candy','Array','array'),(135,'candy','Greedy','greedy'),(136,'single-number','Array','array'),(136,'single-number','Bit Manipulation','bit-manipulation'),(137,'single-number-ii','Array','array'),(137,'single-number-ii','Bit Manipulation','bit-manipulation'),(138,'copy-list-with-random-pointer','Hash Table','hash-table'),(138,'copy-list-with-random-pointer','Linked List','linked-list'),(139,'word-break','Array','array'),(139,'word-break','Hash Table','hash-table'),(139,'word-break','String','string'),(139,'word-break','Dynamic Programming','dynamic-programming'),(139,'word-break','Trie','trie'),(139,'word-break','Memoization','memoization'),(140,'word-break-ii','Array','array'),(140,'word-break-ii','Hash Table','hash-table'),(140,'word-break-ii','String','string'),(140,'word-break-ii','Dynamic Programming','dynamic-programming'),(140,'word-break-ii','Backtracking','backtracking'),(140,'word-break-ii','Trie','trie'),(140,'word-break-ii','Memoization','memoization'),(141,'linked-list-cycle','Hash Table','hash-table'),(141,'linked-list-cycle','Linked List','linked-list'),(141,'linked-list-cycle','Two Pointers','two-pointers'),(142,'linked-list-cycle-ii','Hash Table','hash-table'),(142,'linked-list-cycle-ii','Linked List','linked-list'),(142,'linked-list-cycle-ii','Two Pointers','two-pointers'),(143,'reorder-list','Linked List','linked-list'),(143,'reorder-list','Two Pointers','two-pointers'),(143,'reorder-list','Stack','stack'),(143,'reorder-list','Recursion','recursion'),(144,'binary-tree-preorder-traversal','Stack','stack'),(144,'binary-tree-preorder-traversal','Tree','tree'),(144,'binary-tree-preorder-traversal','Depth-First Search','depth-first-search'),(144,'binary-tree-preorder-traversal','Binary Tree','binary-tree'),(145,'binary-tree-postorder-traversal','Stack','stack'),(145,'binary-tree-postorder-traversal','Tree','tree'),(145,'binary-tree-postorder-traversal','Depth-First Search','depth-first-search'),(145,'binary-tree-postorder-traversal','Binary Tree','binary-tree'),(146,'lru-cache','Hash Table','hash-table'),(146,'lru-cache','Linked List','linked-list'),(146,'lru-cache','Design','design'),(146,'lru-cache','Doubly-Linked List','doubly-linked-list'),(147,'insertion-sort-list','Linked List','linked-list'),(147,'insertion-sort-list','Sorting','sorting'),(148,'sort-list','Linked List','linked-list'),(148,'sort-list','Two Pointers','two-pointers'),(148,'sort-list','Divide and Conquer','divide-and-conquer'),(148,'sort-list','Sorting','sorting'),(148,'sort-list','Merge Sort','merge-sort'),(149,'max-points-on-a-line','Array','array'),(149,'max-points-on-a-line','Hash Table','hash-table'),(149,'max-points-on-a-line','Math','math'),(149,'max-points-on-a-line','Geometry','geometry'),(150,'evaluate-reverse-polish-notation','Array','array'),(150,'evaluate-reverse-polish-notation','Math','math'),(150,'evaluate-reverse-polish-notation','Stack','stack'),(151,'reverse-words-in-a-string','Two Pointers','two-pointers'),(151,'reverse-words-in-a-string','String','string'),(152,'maximum-product-subarray','Array','array'),(152,'maximum-product-subarray','Dynamic Programming','dynamic-programming'),(153,'find-minimum-in-rotated-sorted-array','Array','array'),(153,'find-minimum-in-rotated-sorted-array','Binary Search','binary-search'),(154,'find-minimum-in-rotated-sorted-array-ii','Array','array'),(154,'find-minimum-in-rotated-sorted-array-ii','Binary Search','binary-search'),(155,'min-stack','Stack','stack'),(155,'min-stack','Design','design'),(156,'binary-tree-upside-down','Tree','tree'),(156,'binary-tree-upside-down','Depth-First Search','depth-first-search'),(156,'binary-tree-upside-down','Binary Tree','binary-tree'),(157,'read-n-characters-given-read4','String','string'),(157,'read-n-characters-given-read4','Simulation','simulation'),(157,'read-n-characters-given-read4','Interactive','interactive'),(158,'read-n-characters-given-read4-ii-call-multiple-times','String','string'),(158,'read-n-characters-given-read4-ii-call-multiple-times','Simulation','simulation'),(158,'read-n-characters-given-read4-ii-call-multiple-times','Interactive','interactive'),(159,'longest-substring-with-at-most-two-distinct-characters','Hash Table','hash-table'),(159,'longest-substring-with-at-most-two-distinct-characters','String','string'),(159,'longest-substring-with-at-most-two-distinct-characters','Sliding Window','sliding-window'),(160,'intersection-of-two-linked-lists','Hash Table','hash-table'),(160,'intersection-of-two-linked-lists','Linked List','linked-list'),(160,'intersection-of-two-linked-lists','Two Pointers','two-pointers'),(161,'one-edit-distance','Two Pointers','two-pointers'),(161,'one-edit-distance','String','string'),(162,'find-peak-element','Array','array'),(162,'find-peak-element','Binary Search','binary-search'),(163,'missing-ranges','Array','array'),(164,'maximum-gap','Array','array'),(164,'maximum-gap','Sorting','sorting'),(164,'maximum-gap','Bucket Sort','bucket-sort'),(164,'maximum-gap','Radix Sort','radix-sort'),(165,'compare-version-numbers','Two Pointers','two-pointers'),(165,'compare-version-numbers','String','string'),(166,'fraction-to-recurring-decimal','Hash Table','hash-table'),(166,'fraction-to-recurring-decimal','Math','math'),(166,'fraction-to-recurring-decimal','String','string'),(167,'two-sum-ii-input-array-is-sorted','Array','array'),(167,'two-sum-ii-input-array-is-sorted','Two Pointers','two-pointers'),(167,'two-sum-ii-input-array-is-sorted','Binary Search','binary-search'),(168,'excel-sheet-column-title','Math','math'),(168,'excel-sheet-column-title','String','string'),(169,'majority-element','Array','array'),(169,'majority-element','Hash Table','hash-table'),(169,'majority-element','Divide and Conquer','divide-and-conquer'),(169,'majority-element','Sorting','sorting'),(169,'majority-element','Counting','counting'),(170,'two-sum-iii-data-structure-design','Array','array'),(170,'two-sum-iii-data-structure-design','Hash Table','hash-table'),(170,'two-sum-iii-data-structure-design','Two Pointers','two-pointers'),(170,'two-sum-iii-data-structure-design','Design','design'),(170,'two-sum-iii-data-structure-design','Data Stream','data-stream'),(171,'excel-sheet-column-number','Math','math'),(171,'excel-sheet-column-number','String','string'),(172,'factorial-trailing-zeroes','Math','math'),(173,'binary-search-tree-iterator','Stack','stack'),(173,'binary-search-tree-iterator','Tree','tree'),(173,'binary-search-tree-iterator','Design','design'),(173,'binary-search-tree-iterator','Binary Search Tree','binary-search-tree'),(173,'binary-search-tree-iterator','Binary Tree','binary-tree'),(173,'binary-search-tree-iterator','Iterator','iterator'),(174,'dungeon-game','Array','array'),(174,'dungeon-game','Dynamic Programming','dynamic-programming'),(174,'dungeon-game','Matrix','matrix'),(175,'combine-two-tables','Database','database'),(176,'second-highest-salary','Database','database'),(177,'nth-highest-salary','Database','database'),(178,'rank-scores','Database','database'),(179,'largest-number','Array','array'),(179,'largest-number','String','string'),(179,'largest-number','Greedy','greedy'),(179,'largest-number','Sorting','sorting'),(180,'consecutive-numbers','Database','database'),(181,'employees-earning-more-than-their-managers','Database','database'),(182,'duplicate-emails','Database','database'),(183,'customers-who-never-order','Database','database'),(184,'department-highest-salary','Database','database'),(185,'department-top-three-salaries','Database','database'),(186,'reverse-words-in-a-string-ii','Two Pointers','two-pointers'),(186,'reverse-words-in-a-string-ii','String','string'),(187,'repeated-dna-sequences','Hash Table','hash-table'),(187,'repeated-dna-sequences','String','string'),(187,'repeated-dna-sequences','Bit Manipulation','bit-manipulation'),(187,'repeated-dna-sequences','Sliding Window','sliding-window'),(187,'repeated-dna-sequences','Rolling Hash','rolling-hash'),(187,'repeated-dna-sequences','Hash Function','hash-function'),(188,'best-time-to-buy-and-sell-stock-iv','Array','array'),(188,'best-time-to-buy-and-sell-stock-iv','Dynamic Programming','dynamic-programming'),(189,'rotate-array','Array','array'),(189,'rotate-array','Math','math'),(189,'rotate-array','Two Pointers','two-pointers'),(190,'reverse-bits','Divide and Conquer','divide-and-conquer'),(190,'reverse-bits','Bit Manipulation','bit-manipulation'),(191,'number-of-1-bits','Divide and Conquer','divide-and-conquer'),(191,'number-of-1-bits','Bit Manipulation','bit-manipulation'),(192,'word-frequency','Shell','shell'),(193,'valid-phone-numbers','Shell','shell'),(194,'transpose-file','Shell','shell'),(195,'tenth-line','Shell','shell'),(196,'delete-duplicate-emails','Database','database'),(197,'rising-temperature','Database','database'),(198,'house-robber','Array','array'),(198,'house-robber','Dynamic Programming','dynamic-programming'),(199,'binary-tree-right-side-view','Tree','tree'),(199,'binary-tree-right-side-view','Depth-First Search','depth-first-search'),(199,'binary-tree-right-side-view','Breadth-First Search','breadth-first-search'),(199,'binary-tree-right-side-view','Binary Tree','binary-tree'),(200,'number-of-islands','Array','array'),(200,'number-of-islands','Depth-First Search','depth-first-search'),(200,'number-of-islands','Breadth-First Search','breadth-first-search'),(200,'number-of-islands','Union Find','union-find'),(200,'number-of-islands','Matrix','matrix'),(201,'bitwise-and-of-numbers-range','Bit Manipulation','bit-manipulation'),(202,'happy-number','Hash Table','hash-table'),(202,'happy-number','Math','math'),(202,'happy-number','Two Pointers','two-pointers'),(203,'remove-linked-list-elements','Linked List','linked-list'),(203,'remove-linked-list-elements','Recursion','recursion'),(204,'count-primes','Array','array'),(204,'count-primes','Math','math'),(204,'count-primes','Enumeration','enumeration'),(204,'count-primes','Number Theory','number-theory'),(205,'isomorphic-strings','Hash Table','hash-table'),(205,'isomorphic-strings','String','string'),(206,'reverse-linked-list','Linked List','linked-list'),(206,'reverse-linked-list','Recursion','recursion'),(207,'course-schedule','Depth-First Search','depth-first-search'),(207,'course-schedule','Breadth-First Search','breadth-first-search'),(207,'course-schedule','Graph','graph'),(207,'course-schedule','Topological Sort','topological-sort'),(208,'implement-trie-prefix-tree','Hash Table','hash-table'),(208,'implement-trie-prefix-tree','String','string'),(208,'implement-trie-prefix-tree','Design','design'),(208,'implement-trie-prefix-tree','Trie','trie'),(209,'minimum-size-subarray-sum','Array','array'),(209,'minimum-size-subarray-sum','Binary Search','binary-search'),(209,'minimum-size-subarray-sum','Sliding Window','sliding-window'),(209,'minimum-size-subarray-sum','Prefix Sum','prefix-sum'),(210,'course-schedule-ii','Depth-First Search','depth-first-search'),(210,'course-schedule-ii','Breadth-First Search','breadth-first-search'),(210,'course-schedule-ii','Graph','graph'),(210,'course-schedule-ii','Topological Sort','topological-sort'),(211,'design-add-and-search-words-data-structure','String','string'),(211,'design-add-and-search-words-data-structure','Depth-First Search','depth-first-search'),(211,'design-add-and-search-words-data-structure','Design','design'),(211,'design-add-and-search-words-data-structure','Trie','trie'),(212,'word-search-ii','Array','array'),(212,'word-search-ii','String','string'),(212,'word-search-ii','Backtracking','backtracking'),(212,'word-search-ii','Trie','trie'),(212,'word-search-ii','Matrix','matrix'),(213,'house-robber-ii','Array','array'),(213,'house-robber-ii','Dynamic Programming','dynamic-programming'),(214,'shortest-palindrome','String','string'),(214,'shortest-palindrome','Rolling Hash','rolling-hash'),(214,'shortest-palindrome','String Matching','string-matching'),(214,'shortest-palindrome','Hash Function','hash-function'),(215,'kth-largest-element-in-an-array','Array','array'),(215,'kth-largest-element-in-an-array','Divide and Conquer','divide-and-conquer'),(215,'kth-largest-element-in-an-array','Sorting','sorting'),(215,'kth-largest-element-in-an-array','Heap (Priority Queue)','heap-priority-queue'),(215,'kth-largest-element-in-an-array','Quickselect','quickselect'),(216,'combination-sum-iii','Array','array'),(216,'combination-sum-iii','Backtracking','backtracking'),(217,'contains-duplicate','Array','array'),(217,'contains-duplicate','Hash Table','hash-table'),(217,'contains-duplicate','Sorting','sorting'),(218,'the-skyline-problem','Array','array'),(218,'the-skyline-problem','Divide and Conquer','divide-and-conquer'),(218,'the-skyline-problem','Binary Indexed Tree','binary-indexed-tree'),(218,'the-skyline-problem','Segment Tree','segment-tree'),(218,'the-skyline-problem','Line Sweep','line-sweep'),(218,'the-skyline-problem','Heap (Priority Queue)','heap-priority-queue'),(218,'the-skyline-problem','Ordered Set','ordered-set'),(219,'contains-duplicate-ii','Array','array'),(219,'contains-duplicate-ii','Hash Table','hash-table'),(219,'contains-duplicate-ii','Sliding Window','sliding-window'),(220,'contains-duplicate-iii','Array','array'),(220,'contains-duplicate-iii','Sliding Window','sliding-window'),(220,'contains-duplicate-iii','Sorting','sorting'),(220,'contains-duplicate-iii','Bucket Sort','bucket-sort'),(220,'contains-duplicate-iii','Ordered Set','ordered-set'),(221,'maximal-square','Array','array'),(221,'maximal-square','Dynamic Programming','dynamic-programming'),(221,'maximal-square','Matrix','matrix'),(222,'count-complete-tree-nodes','Binary Search','binary-search'),(222,'count-complete-tree-nodes','Tree','tree'),(222,'count-complete-tree-nodes','Depth-First Search','depth-first-search'),(222,'count-complete-tree-nodes','Binary Tree','binary-tree'),(223,'rectangle-area','Math','math'),(223,'rectangle-area','Geometry','geometry'),(224,'basic-calculator','Math','math'),(224,'basic-calculator','String','string'),(224,'basic-calculator','Stack','stack'),(224,'basic-calculator','Recursion','recursion'),(225,'implement-stack-using-queues','Stack','stack'),(225,'implement-stack-using-queues','Design','design'),(225,'implement-stack-using-queues','Queue','queue'),(226,'invert-binary-tree','Tree','tree'),(226,'invert-binary-tree','Depth-First Search','depth-first-search'),(226,'invert-binary-tree','Breadth-First Search','breadth-first-search'),(226,'invert-binary-tree','Binary Tree','binary-tree'),(227,'basic-calculator-ii','Math','math'),(227,'basic-calculator-ii','String','string'),(227,'basic-calculator-ii','Stack','stack'),(228,'summary-ranges','Array','array'),(229,'majority-element-ii','Array','array'),(229,'majority-element-ii','Hash Table','hash-table'),(229,'majority-element-ii','Sorting','sorting'),(229,'majority-element-ii','Counting','counting'),(230,'kth-smallest-element-in-a-bst','Tree','tree'),(230,'kth-smallest-element-in-a-bst','Depth-First Search','depth-first-search'),(230,'kth-smallest-element-in-a-bst','Binary Search Tree','binary-search-tree'),(230,'kth-smallest-element-in-a-bst','Binary Tree','binary-tree'),(231,'power-of-two','Math','math'),(231,'power-of-two','Bit Manipulation','bit-manipulation'),(231,'power-of-two','Recursion','recursion'),(232,'implement-queue-using-stacks','Stack','stack'),(232,'implement-queue-using-stacks','Design','design'),(232,'implement-queue-using-stacks','Queue','queue'),(233,'number-of-digit-one','Math','math'),(233,'number-of-digit-one','Dynamic Programming','dynamic-programming'),(233,'number-of-digit-one','Recursion','recursion'),(234,'palindrome-linked-list','Linked List','linked-list'),(234,'palindrome-linked-list','Two Pointers','two-pointers'),(234,'palindrome-linked-list','Stack','stack'),(234,'palindrome-linked-list','Recursion','recursion'),(235,'lowest-common-ancestor-of-a-binary-search-tree','Tree','tree'),(235,'lowest-common-ancestor-of-a-binary-search-tree','Depth-First Search','depth-first-search'),(235,'lowest-common-ancestor-of-a-binary-search-tree','Binary Search Tree','binary-search-tree'),(235,'lowest-common-ancestor-of-a-binary-search-tree','Binary Tree','binary-tree'),(236,'lowest-common-ancestor-of-a-binary-tree','Tree','tree'),(236,'lowest-common-ancestor-of-a-binary-tree','Depth-First Search','depth-first-search'),(236,'lowest-common-ancestor-of-a-binary-tree','Binary Tree','binary-tree'),(237,'delete-node-in-a-linked-list','Linked List','linked-list'),(238,'product-of-array-except-self','Array','array'),(238,'product-of-array-except-self','Prefix Sum','prefix-sum'),(239,'sliding-window-maximum','Array','array'),(239,'sliding-window-maximum','Queue','queue'),(239,'sliding-window-maximum','Sliding Window','sliding-window'),(239,'sliding-window-maximum','Heap (Priority Queue)','heap-priority-queue'),(239,'sliding-window-maximum','Monotonic Queue','monotonic-queue'),(240,'search-a-2d-matrix-ii','Array','array'),(240,'search-a-2d-matrix-ii','Binary Search','binary-search'),(240,'search-a-2d-matrix-ii','Divide and Conquer','divide-and-conquer'),(240,'search-a-2d-matrix-ii','Matrix','matrix'),(241,'different-ways-to-add-parentheses','Math','math'),(241,'different-ways-to-add-parentheses','String','string'),(241,'different-ways-to-add-parentheses','Dynamic Programming','dynamic-programming'),(241,'different-ways-to-add-parentheses','Recursion','recursion'),(241,'different-ways-to-add-parentheses','Memoization','memoization'),(242,'valid-anagram','Hash Table','hash-table'),(242,'valid-anagram','String','string'),(242,'valid-anagram','Sorting','sorting'),(243,'shortest-word-distance','Array','array'),(243,'shortest-word-distance','String','string'),(244,'shortest-word-distance-ii','Array','array'),(244,'shortest-word-distance-ii','Hash Table','hash-table'),(244,'shortest-word-distance-ii','Two Pointers','two-pointers'),(244,'shortest-word-distance-ii','String','string'),(244,'shortest-word-distance-ii','Design','design'),(245,'shortest-word-distance-iii','Array','array'),(245,'shortest-word-distance-iii','String','string'),(246,'strobogrammatic-number','Hash Table','hash-table'),(246,'strobogrammatic-number','Two Pointers','two-pointers'),(246,'strobogrammatic-number','String','string'),(247,'strobogrammatic-number-ii','Array','array'),(247,'strobogrammatic-number-ii','String','string'),(247,'strobogrammatic-number-ii','Recursion','recursion'),(248,'strobogrammatic-number-iii','Array','array'),(248,'strobogrammatic-number-iii','String','string'),(248,'strobogrammatic-number-iii','Recursion','recursion'),(249,'group-shifted-strings','Array','array'),(249,'group-shifted-strings','Hash Table','hash-table'),(249,'group-shifted-strings','String','string'),(250,'count-univalue-subtrees','Tree','tree'),(250,'count-univalue-subtrees','Depth-First Search','depth-first-search'),(250,'count-univalue-subtrees','Binary Tree','binary-tree'),(251,'flatten-2d-vector','Array','array'),(251,'flatten-2d-vector','Two Pointers','two-pointers'),(251,'flatten-2d-vector','Design','design'),(251,'flatten-2d-vector','Iterator','iterator'),(252,'meeting-rooms','Array','array'),(252,'meeting-rooms','Sorting','sorting'),(253,'meeting-rooms-ii','Array','array'),(253,'meeting-rooms-ii','Two Pointers','two-pointers'),(253,'meeting-rooms-ii','Greedy','greedy'),(253,'meeting-rooms-ii','Sorting','sorting'),(253,'meeting-rooms-ii','Heap (Priority Queue)','heap-priority-queue'),(253,'meeting-rooms-ii','Prefix Sum','prefix-sum'),(254,'factor-combinations','Array','array'),(254,'factor-combinations','Backtracking','backtracking'),(255,'verify-preorder-sequence-in-binary-search-tree','Stack','stack'),(255,'verify-preorder-sequence-in-binary-search-tree','Tree','tree'),(255,'verify-preorder-sequence-in-binary-search-tree','Binary Search Tree','binary-search-tree'),(255,'verify-preorder-sequence-in-binary-search-tree','Recursion','recursion'),(255,'verify-preorder-sequence-in-binary-search-tree','Monotonic Stack','monotonic-stack'),(255,'verify-preorder-sequence-in-binary-search-tree','Binary Tree','binary-tree'),(256,'paint-house','Array','array'),(256,'paint-house','Dynamic Programming','dynamic-programming'),(257,'binary-tree-paths','String','string'),(257,'binary-tree-paths','Backtracking','backtracking'),(257,'binary-tree-paths','Tree','tree'),(257,'binary-tree-paths','Depth-First Search','depth-first-search'),(257,'binary-tree-paths','Binary Tree','binary-tree'),(258,'add-digits','Math','math'),(258,'add-digits','Simulation','simulation'),(258,'add-digits','Number Theory','number-theory'),(259,'3sum-smaller','Array','array'),(259,'3sum-smaller','Two Pointers','two-pointers'),(259,'3sum-smaller','Binary Search','binary-search'),(259,'3sum-smaller','Sorting','sorting'),(260,'single-number-iii','Array','array'),(260,'single-number-iii','Bit Manipulation','bit-manipulation'),(261,'graph-valid-tree','Depth-First Search','depth-first-search'),(261,'graph-valid-tree','Breadth-First Search','breadth-first-search'),(261,'graph-valid-tree','Union Find','union-find'),(261,'graph-valid-tree','Graph','graph'),(262,'trips-and-users','Database','database'),(263,'ugly-number','Math','math'),(264,'ugly-number-ii','Hash Table','hash-table'),(264,'ugly-number-ii','Math','math'),(264,'ugly-number-ii','Dynamic Programming','dynamic-programming'),(264,'ugly-number-ii','Heap (Priority Queue)','heap-priority-queue'),(265,'paint-house-ii','Array','array'),(265,'paint-house-ii','Dynamic Programming','dynamic-programming'),(266,'palindrome-permutation','Hash Table','hash-table'),(266,'palindrome-permutation','String','string'),(266,'palindrome-permutation','Bit Manipulation','bit-manipulation'),(267,'palindrome-permutation-ii','Hash Table','hash-table'),(267,'palindrome-permutation-ii','String','string'),(267,'palindrome-permutation-ii','Backtracking','backtracking'),(268,'missing-number','Array','array'),(268,'missing-number','Hash Table','hash-table'),(268,'missing-number','Math','math'),(268,'missing-number','Binary Search','binary-search'),(268,'missing-number','Bit Manipulation','bit-manipulation'),(268,'missing-number','Sorting','sorting'),(269,'alien-dictionary','Array','array'),(269,'alien-dictionary','String','string'),(269,'alien-dictionary','Depth-First Search','depth-first-search'),(269,'alien-dictionary','Breadth-First Search','breadth-first-search'),(269,'alien-dictionary','Graph','graph'),(269,'alien-dictionary','Topological Sort','topological-sort'),(270,'closest-binary-search-tree-value','Binary Search','binary-search'),(270,'closest-binary-search-tree-value','Tree','tree'),(270,'closest-binary-search-tree-value','Depth-First Search','depth-first-search'),(270,'closest-binary-search-tree-value','Binary Search Tree','binary-search-tree'),(270,'closest-binary-search-tree-value','Binary Tree','binary-tree'),(271,'encode-and-decode-strings','Array','array'),(271,'encode-and-decode-strings','String','string'),(271,'encode-and-decode-strings','Design','design'),(272,'closest-binary-search-tree-value-ii','Two Pointers','two-pointers'),(272,'closest-binary-search-tree-value-ii','Stack','stack'),(272,'closest-binary-search-tree-value-ii','Tree','tree'),(272,'closest-binary-search-tree-value-ii','Depth-First Search','depth-first-search'),(272,'closest-binary-search-tree-value-ii','Binary Search Tree','binary-search-tree'),(272,'closest-binary-search-tree-value-ii','Heap (Priority Queue)','heap-priority-queue'),(272,'closest-binary-search-tree-value-ii','Binary Tree','binary-tree'),(273,'integer-to-english-words','Math','math'),(273,'integer-to-english-words','String','string'),(273,'integer-to-english-words','Recursion','recursion'),(274,'h-index','Array','array'),(274,'h-index','Sorting','sorting'),(274,'h-index','Counting Sort','counting-sort'),(275,'h-index-ii','Array','array'),(275,'h-index-ii','Binary Search','binary-search'),(276,'paint-fence','Dynamic Programming','dynamic-programming'),(277,'find-the-celebrity','Two Pointers','two-pointers'),(277,'find-the-celebrity','Greedy','greedy'),(277,'find-the-celebrity','Graph','graph'),(277,'find-the-celebrity','Interactive','interactive'),(278,'first-bad-version','Binary Search','binary-search'),(278,'first-bad-version','Interactive','interactive'),(279,'perfect-squares','Math','math'),(279,'perfect-squares','Dynamic Programming','dynamic-programming'),(279,'perfect-squares','Breadth-First Search','breadth-first-search'),(280,'wiggle-sort','Array','array'),(280,'wiggle-sort','Greedy','greedy'),(280,'wiggle-sort','Sorting','sorting'),(281,'zigzag-iterator','Array','array'),(281,'zigzag-iterator','Design','design'),(281,'zigzag-iterator','Queue','queue'),(281,'zigzag-iterator','Iterator','iterator'),(282,'expression-add-operators','Math','math'),(282,'expression-add-operators','String','string'),(282,'expression-add-operators','Backtracking','backtracking'),(283,'move-zeroes','Array','array'),(283,'move-zeroes','Two Pointers','two-pointers'),(284,'peeking-iterator','Array','array'),(284,'peeking-iterator','Design','design'),(284,'peeking-iterator','Iterator','iterator'),(285,'inorder-successor-in-bst','Tree','tree'),(285,'inorder-successor-in-bst','Depth-First Search','depth-first-search'),(285,'inorder-successor-in-bst','Binary Search Tree','binary-search-tree'),(285,'inorder-successor-in-bst','Binary Tree','binary-tree'),(286,'walls-and-gates','Array','array'),(286,'walls-and-gates','Breadth-First Search','breadth-first-search'),(286,'walls-and-gates','Matrix','matrix'),(287,'find-the-duplicate-number','Array','array'),(287,'find-the-duplicate-number','Two Pointers','two-pointers'),(287,'find-the-duplicate-number','Binary Search','binary-search'),(287,'find-the-duplicate-number','Bit Manipulation','bit-manipulation'),(288,'unique-word-abbreviation','Array','array'),(288,'unique-word-abbreviation','Hash Table','hash-table'),(288,'unique-word-abbreviation','String','string'),(288,'unique-word-abbreviation','Design','design'),(289,'game-of-life','Array','array'),(289,'game-of-life','Matrix','matrix'),(289,'game-of-life','Simulation','simulation'),(290,'word-pattern','Hash Table','hash-table'),(290,'word-pattern','String','string'),(291,'word-pattern-ii','Hash Table','hash-table'),(291,'word-pattern-ii','String','string'),(291,'word-pattern-ii','Backtracking','backtracking'),(292,'nim-game','Math','math'),(292,'nim-game','Brainteaser','brainteaser'),(292,'nim-game','Game Theory','game-theory'),(293,'flip-game','String','string'),(294,'flip-game-ii','Math','math'),(294,'flip-game-ii','Dynamic Programming','dynamic-programming'),(294,'flip-game-ii','Backtracking','backtracking'),(294,'flip-game-ii','Memoization','memoization'),(294,'flip-game-ii','Game Theory','game-theory'),(295,'find-median-from-data-stream','Two Pointers','two-pointers'),(295,'find-median-from-data-stream','Design','design'),(295,'find-median-from-data-stream','Sorting','sorting'),(295,'find-median-from-data-stream','Heap (Priority Queue)','heap-priority-queue'),(295,'find-median-from-data-stream','Data Stream','data-stream'),(296,'best-meeting-point','Array','array'),(296,'best-meeting-point','Math','math'),(296,'best-meeting-point','Sorting','sorting'),(296,'best-meeting-point','Matrix','matrix'),(297,'serialize-and-deserialize-binary-tree','String','string'),(297,'serialize-and-deserialize-binary-tree','Tree','tree'),(297,'serialize-and-deserialize-binary-tree','Depth-First Search','depth-first-search'),(297,'serialize-and-deserialize-binary-tree','Breadth-First Search','breadth-first-search'),(297,'serialize-and-deserialize-binary-tree','Design','design'),(297,'serialize-and-deserialize-binary-tree','Binary Tree','binary-tree'),(298,'binary-tree-longest-consecutive-sequence','Tree','tree'),(298,'binary-tree-longest-consecutive-sequence','Depth-First Search','depth-first-search'),(298,'binary-tree-longest-consecutive-sequence','Binary Tree','binary-tree'),(299,'bulls-and-cows','Hash Table','hash-table'),(299,'bulls-and-cows','String','string'),(299,'bulls-and-cows','Counting','counting'),(300,'longest-increasing-subsequence','Array','array'),(300,'longest-increasing-subsequence','Binary Search','binary-search'),(300,'longest-increasing-subsequence','Dynamic Programming','dynamic-programming'),(301,'remove-invalid-parentheses','String','string'),(301,'remove-invalid-parentheses','Backtracking','backtracking'),(301,'remove-invalid-parentheses','Breadth-First Search','breadth-first-search'),(302,'smallest-rectangle-enclosing-black-pixels','Array','array'),(302,'smallest-rectangle-enclosing-black-pixels','Binary Search','binary-search'),(302,'smallest-rectangle-enclosing-black-pixels','Depth-First Search','depth-first-search'),(302,'smallest-rectangle-enclosing-black-pixels','Breadth-First Search','breadth-first-search'),(302,'smallest-rectangle-enclosing-black-pixels','Matrix','matrix'),(303,'range-sum-query-immutable','Array','array'),(303,'range-sum-query-immutable','Design','design'),(303,'range-sum-query-immutable','Prefix Sum','prefix-sum'),(304,'range-sum-query-2d-immutable','Array','array'),(304,'range-sum-query-2d-immutable','Design','design'),(304,'range-sum-query-2d-immutable','Matrix','matrix'),(304,'range-sum-query-2d-immutable','Prefix Sum','prefix-sum'),(305,'number-of-islands-ii','Array','array'),(305,'number-of-islands-ii','Union Find','union-find'),(306,'additive-number','String','string'),(306,'additive-number','Backtracking','backtracking'),(307,'range-sum-query-mutable','Array','array'),(307,'range-sum-query-mutable','Design','design'),(307,'range-sum-query-mutable','Binary Indexed Tree','binary-indexed-tree'),(307,'range-sum-query-mutable','Segment Tree','segment-tree'),(308,'range-sum-query-2d-mutable','Array','array'),(308,'range-sum-query-2d-mutable','Design','design'),(308,'range-sum-query-2d-mutable','Binary Indexed Tree','binary-indexed-tree'),(308,'range-sum-query-2d-mutable','Segment Tree','segment-tree'),(308,'range-sum-query-2d-mutable','Matrix','matrix'),(309,'best-time-to-buy-and-sell-stock-with-cooldown','Array','array'),(309,'best-time-to-buy-and-sell-stock-with-cooldown','Dynamic Programming','dynamic-programming'),(310,'minimum-height-trees','Depth-First Search','depth-first-search'),(310,'minimum-height-trees','Breadth-First Search','breadth-first-search'),(310,'minimum-height-trees','Graph','graph'),(310,'minimum-height-trees','Topological Sort','topological-sort'),(311,'sparse-matrix-multiplication','Array','array'),(311,'sparse-matrix-multiplication','Hash Table','hash-table'),(311,'sparse-matrix-multiplication','Matrix','matrix'),(312,'burst-balloons','Array','array'),(312,'burst-balloons','Dynamic Programming','dynamic-programming'),(313,'super-ugly-number','Array','array'),(313,'super-ugly-number','Math','math'),(313,'super-ugly-number','Dynamic Programming','dynamic-programming'),(314,'binary-tree-vertical-order-traversal','Hash Table','hash-table'),(314,'binary-tree-vertical-order-traversal','Tree','tree'),(314,'binary-tree-vertical-order-traversal','Depth-First Search','depth-first-search'),(314,'binary-tree-vertical-order-traversal','Breadth-First Search','breadth-first-search'),(314,'binary-tree-vertical-order-traversal','Binary Tree','binary-tree'),(315,'count-of-smaller-numbers-after-self','Array','array'),(315,'count-of-smaller-numbers-after-self','Binary Search','binary-search'),(315,'count-of-smaller-numbers-after-self','Divide and Conquer','divide-and-conquer'),(315,'count-of-smaller-numbers-after-self','Binary Indexed Tree','binary-indexed-tree'),(315,'count-of-smaller-numbers-after-self','Segment Tree','segment-tree'),(315,'count-of-smaller-numbers-after-self','Merge Sort','merge-sort'),(315,'count-of-smaller-numbers-after-self','Ordered Set','ordered-set'),(316,'remove-duplicate-letters','String','string'),(316,'remove-duplicate-letters','Stack','stack'),(316,'remove-duplicate-letters','Greedy','greedy'),(316,'remove-duplicate-letters','Monotonic Stack','monotonic-stack'),(317,'shortest-distance-from-all-buildings','Array','array'),(317,'shortest-distance-from-all-buildings','Breadth-First Search','breadth-first-search'),(317,'shortest-distance-from-all-buildings','Matrix','matrix'),(318,'maximum-product-of-word-lengths','Array','array'),(318,'maximum-product-of-word-lengths','String','string'),(318,'maximum-product-of-word-lengths','Bit Manipulation','bit-manipulation'),(319,'bulb-switcher','Math','math'),(319,'bulb-switcher','Brainteaser','brainteaser'),(320,'generalized-abbreviation','String','string'),(320,'generalized-abbreviation','Backtracking','backtracking'),(320,'generalized-abbreviation','Bit Manipulation','bit-manipulation'),(321,'create-maximum-number','Stack','stack'),(321,'create-maximum-number','Greedy','greedy'),(321,'create-maximum-number','Monotonic Stack','monotonic-stack'),(322,'coin-change','Array','array'),(322,'coin-change','Dynamic Programming','dynamic-programming'),(322,'coin-change','Breadth-First Search','breadth-first-search'),(323,'number-of-connected-components-in-an-undirected-graph','Depth-First Search','depth-first-search'),(323,'number-of-connected-components-in-an-undirected-graph','Breadth-First Search','breadth-first-search'),(323,'number-of-connected-components-in-an-undirected-graph','Union Find','union-find'),(323,'number-of-connected-components-in-an-undirected-graph','Graph','graph'),(324,'wiggle-sort-ii','Array','array'),(324,'wiggle-sort-ii','Divide and Conquer','divide-and-conquer'),(324,'wiggle-sort-ii','Sorting','sorting'),(324,'wiggle-sort-ii','Quickselect','quickselect'),(325,'maximum-size-subarray-sum-equals-k','Array','array'),(325,'maximum-size-subarray-sum-equals-k','Hash Table','hash-table'),(325,'maximum-size-subarray-sum-equals-k','Prefix Sum','prefix-sum'),(326,'power-of-three','Math','math'),(326,'power-of-three','Recursion','recursion'),(327,'count-of-range-sum','Array','array'),(327,'count-of-range-sum','Binary Search','binary-search'),(327,'count-of-range-sum','Divide and Conquer','divide-and-conquer'),(327,'count-of-range-sum','Binary Indexed Tree','binary-indexed-tree'),(327,'count-of-range-sum','Segment Tree','segment-tree'),(327,'count-of-range-sum','Merge Sort','merge-sort'),(327,'count-of-range-sum','Ordered Set','ordered-set'),(328,'odd-even-linked-list','Linked List','linked-list'),(329,'longest-increasing-path-in-a-matrix','Array','array'),(329,'longest-increasing-path-in-a-matrix','Dynamic Programming','dynamic-programming'),(329,'longest-increasing-path-in-a-matrix','Depth-First Search','depth-first-search'),(329,'longest-increasing-path-in-a-matrix','Breadth-First Search','breadth-first-search'),(329,'longest-increasing-path-in-a-matrix','Graph','graph'),(329,'longest-increasing-path-in-a-matrix','Topological Sort','topological-sort'),(329,'longest-increasing-path-in-a-matrix','Memoization','memoization'),(329,'longest-increasing-path-in-a-matrix','Matrix','matrix'),(330,'patching-array','Array','array'),(330,'patching-array','Greedy','greedy'),(331,'verify-preorder-serialization-of-a-binary-tree','String','string'),(331,'verify-preorder-serialization-of-a-binary-tree','Stack','stack'),(331,'verify-preorder-serialization-of-a-binary-tree','Tree','tree'),(331,'verify-preorder-serialization-of-a-binary-tree','Binary Tree','binary-tree'),(332,'reconstruct-itinerary','Depth-First Search','depth-first-search'),(332,'reconstruct-itinerary','Graph','graph'),(332,'reconstruct-itinerary','Eulerian Circuit','eulerian-circuit'),(333,'largest-bst-subtree','Dynamic Programming','dynamic-programming'),(333,'largest-bst-subtree','Tree','tree'),(333,'largest-bst-subtree','Depth-First Search','depth-first-search'),(333,'largest-bst-subtree','Binary Search Tree','binary-search-tree'),(333,'largest-bst-subtree','Binary Tree','binary-tree'),(334,'increasing-triplet-subsequence','Array','array'),(334,'increasing-triplet-subsequence','Greedy','greedy'),(335,'self-crossing','Array','array'),(335,'self-crossing','Math','math'),(335,'self-crossing','Geometry','geometry'),(336,'palindrome-pairs','Array','array'),(336,'palindrome-pairs','Hash Table','hash-table'),(336,'palindrome-pairs','String','string'),(336,'palindrome-pairs','Trie','trie'),(337,'house-robber-iii','Dynamic Programming','dynamic-programming'),(337,'house-robber-iii','Tree','tree'),(337,'house-robber-iii','Depth-First Search','depth-first-search'),(337,'house-robber-iii','Binary Tree','binary-tree'),(338,'counting-bits','Dynamic Programming','dynamic-programming'),(338,'counting-bits','Bit Manipulation','bit-manipulation'),(339,'nested-list-weight-sum','Depth-First Search','depth-first-search'),(339,'nested-list-weight-sum','Breadth-First Search','breadth-first-search'),(340,'longest-substring-with-at-most-k-distinct-characters','Hash Table','hash-table'),(340,'longest-substring-with-at-most-k-distinct-characters','String','string'),(340,'longest-substring-with-at-most-k-distinct-characters','Sliding Window','sliding-window'),(341,'flatten-nested-list-iterator','Stack','stack'),(341,'flatten-nested-list-iterator','Tree','tree'),(341,'flatten-nested-list-iterator','Depth-First Search','depth-first-search'),(341,'flatten-nested-list-iterator','Design','design'),(341,'flatten-nested-list-iterator','Queue','queue'),(341,'flatten-nested-list-iterator','Iterator','iterator'),(342,'power-of-four','Math','math'),(342,'power-of-four','Bit Manipulation','bit-manipulation'),(342,'power-of-four','Recursion','recursion'),(343,'integer-break','Math','math'),(343,'integer-break','Dynamic Programming','dynamic-programming'),(344,'reverse-string','Two Pointers','two-pointers'),(344,'reverse-string','String','string'),(345,'reverse-vowels-of-a-string','Two Pointers','two-pointers'),(345,'reverse-vowels-of-a-string','String','string'),(346,'moving-average-from-data-stream','Array','array'),(346,'moving-average-from-data-stream','Design','design'),(346,'moving-average-from-data-stream','Queue','queue'),(346,'moving-average-from-data-stream','Data Stream','data-stream'),(347,'top-k-frequent-elements','Array','array'),(347,'top-k-frequent-elements','Hash Table','hash-table'),(347,'top-k-frequent-elements','Divide and Conquer','divide-and-conquer'),(347,'top-k-frequent-elements','Sorting','sorting'),(347,'top-k-frequent-elements','Heap (Priority Queue)','heap-priority-queue'),(347,'top-k-frequent-elements','Bucket Sort','bucket-sort'),(347,'top-k-frequent-elements','Counting','counting'),(347,'top-k-frequent-elements','Quickselect','quickselect'),(348,'design-tic-tac-toe','Array','array'),(348,'design-tic-tac-toe','Hash Table','hash-table'),(348,'design-tic-tac-toe','Design','design'),(348,'design-tic-tac-toe','Matrix','matrix'),(349,'intersection-of-two-arrays','Array','array'),(349,'intersection-of-two-arrays','Hash Table','hash-table'),(349,'intersection-of-two-arrays','Two Pointers','two-pointers'),(349,'intersection-of-two-arrays','Binary Search','binary-search'),(349,'intersection-of-two-arrays','Sorting','sorting'),(350,'intersection-of-two-arrays-ii','Array','array'),(350,'intersection-of-two-arrays-ii','Hash Table','hash-table'),(350,'intersection-of-two-arrays-ii','Two Pointers','two-pointers'),(350,'intersection-of-two-arrays-ii','Binary Search','binary-search'),(350,'intersection-of-two-arrays-ii','Sorting','sorting'),(351,'android-unlock-patterns','Dynamic Programming','dynamic-programming'),(351,'android-unlock-patterns','Backtracking','backtracking'),(352,'data-stream-as-disjoint-intervals','Binary Search','binary-search'),(352,'data-stream-as-disjoint-intervals','Design','design'),(352,'data-stream-as-disjoint-intervals','Ordered Set','ordered-set'),(353,'design-snake-game','Array','array'),(353,'design-snake-game','Design','design'),(353,'design-snake-game','Queue','queue'),(353,'design-snake-game','Matrix','matrix'),(354,'russian-doll-envelopes','Array','array'),(354,'russian-doll-envelopes','Binary Search','binary-search'),(354,'russian-doll-envelopes','Dynamic Programming','dynamic-programming'),(354,'russian-doll-envelopes','Sorting','sorting'),(355,'design-twitter','Hash Table','hash-table'),(355,'design-twitter','Linked List','linked-list'),(355,'design-twitter','Design','design'),(355,'design-twitter','Heap (Priority Queue)','heap-priority-queue'),(356,'line-reflection','Array','array'),(356,'line-reflection','Hash Table','hash-table'),(356,'line-reflection','Math','math'),(357,'count-numbers-with-unique-digits','Math','math'),(357,'count-numbers-with-unique-digits','Dynamic Programming','dynamic-programming'),(357,'count-numbers-with-unique-digits','Backtracking','backtracking'),(358,'rearrange-string-k-distance-apart','Hash Table','hash-table'),(358,'rearrange-string-k-distance-apart','String','string'),(358,'rearrange-string-k-distance-apart','Greedy','greedy'),(358,'rearrange-string-k-distance-apart','Sorting','sorting'),(358,'rearrange-string-k-distance-apart','Heap (Priority Queue)','heap-priority-queue'),(358,'rearrange-string-k-distance-apart','Counting','counting'),(359,'logger-rate-limiter','Hash Table','hash-table'),(359,'logger-rate-limiter','Design','design'),(360,'sort-transformed-array','Array','array'),(360,'sort-transformed-array','Math','math'),(360,'sort-transformed-array','Two Pointers','two-pointers'),(360,'sort-transformed-array','Sorting','sorting'),(361,'bomb-enemy','Array','array'),(361,'bomb-enemy','Dynamic Programming','dynamic-programming'),(361,'bomb-enemy','Matrix','matrix'),(362,'design-hit-counter','Array','array'),(362,'design-hit-counter','Hash Table','hash-table'),(362,'design-hit-counter','Binary Search','binary-search'),(362,'design-hit-counter','Design','design'),(362,'design-hit-counter','Queue','queue'),(363,'max-sum-of-rectangle-no-larger-than-k','Array','array'),(363,'max-sum-of-rectangle-no-larger-than-k','Binary Search','binary-search'),(363,'max-sum-of-rectangle-no-larger-than-k','Matrix','matrix'),(363,'max-sum-of-rectangle-no-larger-than-k','Prefix Sum','prefix-sum'),(363,'max-sum-of-rectangle-no-larger-than-k','Ordered Set','ordered-set'),(364,'nested-list-weight-sum-ii','Stack','stack'),(364,'nested-list-weight-sum-ii','Depth-First Search','depth-first-search'),(364,'nested-list-weight-sum-ii','Breadth-First Search','breadth-first-search'),(365,'water-and-jug-problem','Math','math'),(365,'water-and-jug-problem','Depth-First Search','depth-first-search'),(365,'water-and-jug-problem','Breadth-First Search','breadth-first-search'),(366,'find-leaves-of-binary-tree','Tree','tree'),(366,'find-leaves-of-binary-tree','Depth-First Search','depth-first-search'),(366,'find-leaves-of-binary-tree','Binary Tree','binary-tree'),(367,'valid-perfect-square','Math','math'),(367,'valid-perfect-square','Binary Search','binary-search'),(368,'largest-divisible-subset','Array','array'),(368,'largest-divisible-subset','Math','math'),(368,'largest-divisible-subset','Dynamic Programming','dynamic-programming'),(368,'largest-divisible-subset','Sorting','sorting'),(369,'plus-one-linked-list','Linked List','linked-list'),(369,'plus-one-linked-list','Math','math'),(370,'range-addition','Array','array'),(370,'range-addition','Prefix Sum','prefix-sum'),(371,'sum-of-two-integers','Math','math'),(371,'sum-of-two-integers','Bit Manipulation','bit-manipulation'),(372,'super-pow','Math','math'),(372,'super-pow','Divide and Conquer','divide-and-conquer'),(373,'find-k-pairs-with-smallest-sums','Array','array'),(373,'find-k-pairs-with-smallest-sums','Heap (Priority Queue)','heap-priority-queue'),(374,'guess-number-higher-or-lower','Binary Search','binary-search'),(374,'guess-number-higher-or-lower','Interactive','interactive'),(375,'guess-number-higher-or-lower-ii','Math','math'),(375,'guess-number-higher-or-lower-ii','Dynamic Programming','dynamic-programming'),(375,'guess-number-higher-or-lower-ii','Game Theory','game-theory'),(376,'wiggle-subsequence','Array','array'),(376,'wiggle-subsequence','Dynamic Programming','dynamic-programming'),(376,'wiggle-subsequence','Greedy','greedy'),(377,'combination-sum-iv','Array','array'),(377,'combination-sum-iv','Dynamic Programming','dynamic-programming'),(378,'kth-smallest-element-in-a-sorted-matrix','Array','array'),(378,'kth-smallest-element-in-a-sorted-matrix','Binary Search','binary-search'),(378,'kth-smallest-element-in-a-sorted-matrix','Sorting','sorting'),(378,'kth-smallest-element-in-a-sorted-matrix','Heap (Priority Queue)','heap-priority-queue'),(378,'kth-smallest-element-in-a-sorted-matrix','Matrix','matrix'),(379,'design-phone-directory','Array','array'),(379,'design-phone-directory','Hash Table','hash-table'),(379,'design-phone-directory','Linked List','linked-list'),(379,'design-phone-directory','Design','design'),(379,'design-phone-directory','Queue','queue'),(380,'insert-delete-getrandom-o1','Array','array'),(380,'insert-delete-getrandom-o1','Hash Table','hash-table'),(380,'insert-delete-getrandom-o1','Math','math'),(380,'insert-delete-getrandom-o1','Design','design'),(380,'insert-delete-getrandom-o1','Randomized','randomized'),(381,'insert-delete-getrandom-o1-duplicates-allowed','Array','array'),(381,'insert-delete-getrandom-o1-duplicates-allowed','Hash Table','hash-table'),(381,'insert-delete-getrandom-o1-duplicates-allowed','Math','math'),(381,'insert-delete-getrandom-o1-duplicates-allowed','Design','design'),(381,'insert-delete-getrandom-o1-duplicates-allowed','Randomized','randomized'),(382,'linked-list-random-node','Linked List','linked-list'),(382,'linked-list-random-node','Math','math'),(382,'linked-list-random-node','Reservoir Sampling','reservoir-sampling'),(382,'linked-list-random-node','Randomized','randomized'),(383,'ransom-note','Hash Table','hash-table'),(383,'ransom-note','String','string'),(383,'ransom-note','Counting','counting'),(384,'shuffle-an-array','Array','array'),(384,'shuffle-an-array','Math','math'),(384,'shuffle-an-array','Randomized','randomized'),(385,'mini-parser','String','string'),(385,'mini-parser','Stack','stack'),(385,'mini-parser','Depth-First Search','depth-first-search'),(386,'lexicographical-numbers','Depth-First Search','depth-first-search'),(386,'lexicographical-numbers','Trie','trie'),(387,'first-unique-character-in-a-string','Hash Table','hash-table'),(387,'first-unique-character-in-a-string','String','string'),(387,'first-unique-character-in-a-string','Queue','queue'),(387,'first-unique-character-in-a-string','Counting','counting'),(388,'longest-absolute-file-path','String','string'),(388,'longest-absolute-file-path','Stack','stack'),(388,'longest-absolute-file-path','Depth-First Search','depth-first-search'),(389,'find-the-difference','Hash Table','hash-table'),(389,'find-the-difference','String','string'),(389,'find-the-difference','Bit Manipulation','bit-manipulation'),(389,'find-the-difference','Sorting','sorting'),(390,'elimination-game','Math','math'),(390,'elimination-game','Recursion','recursion'),(391,'perfect-rectangle','Array','array'),(391,'perfect-rectangle','Line Sweep','line-sweep'),(392,'is-subsequence','Two Pointers','two-pointers'),(392,'is-subsequence','String','string'),(392,'is-subsequence','Dynamic Programming','dynamic-programming'),(393,'utf-8-validation','Array','array'),(393,'utf-8-validation','Bit Manipulation','bit-manipulation'),(394,'decode-string','String','string'),(394,'decode-string','Stack','stack'),(394,'decode-string','Recursion','recursion'),(395,'longest-substring-with-at-least-k-repeating-characters','Hash Table','hash-table'),(395,'longest-substring-with-at-least-k-repeating-characters','String','string'),(395,'longest-substring-with-at-least-k-repeating-characters','Divide and Conquer','divide-and-conquer'),(395,'longest-substring-with-at-least-k-repeating-characters','Sliding Window','sliding-window'),(396,'rotate-function','Array','array'),(396,'rotate-function','Math','math'),(396,'rotate-function','Dynamic Programming','dynamic-programming'),(397,'integer-replacement','Dynamic Programming','dynamic-programming'),(397,'integer-replacement','Greedy','greedy'),(397,'integer-replacement','Bit Manipulation','bit-manipulation'),(397,'integer-replacement','Memoization','memoization'),(398,'random-pick-index','Hash Table','hash-table'),(398,'random-pick-index','Math','math'),(398,'random-pick-index','Reservoir Sampling','reservoir-sampling'),(398,'random-pick-index','Randomized','randomized'),(399,'evaluate-division','Array','array'),(399,'evaluate-division','Depth-First Search','depth-first-search'),(399,'evaluate-division','Breadth-First Search','breadth-first-search'),(399,'evaluate-division','Union Find','union-find'),(399,'evaluate-division','Graph','graph'),(399,'evaluate-division','Shortest Path','shortest-path'),(400,'nth-digit','Math','math'),(400,'nth-digit','Binary Search','binary-search'),(401,'binary-watch','Backtracking','backtracking'),(401,'binary-watch','Bit Manipulation','bit-manipulation'),(402,'remove-k-digits','String','string'),(402,'remove-k-digits','Stack','stack'),(402,'remove-k-digits','Greedy','greedy'),(402,'remove-k-digits','Monotonic Stack','monotonic-stack'),(403,'frog-jump','Array','array'),(403,'frog-jump','Dynamic Programming','dynamic-programming'),(404,'sum-of-left-leaves','Tree','tree'),(404,'sum-of-left-leaves','Depth-First Search','depth-first-search'),(404,'sum-of-left-leaves','Breadth-First Search','breadth-first-search'),(404,'sum-of-left-leaves','Binary Tree','binary-tree'),(405,'convert-a-number-to-hexadecimal','Math','math'),(405,'convert-a-number-to-hexadecimal','Bit Manipulation','bit-manipulation'),(406,'queue-reconstruction-by-height','Array','array'),(406,'queue-reconstruction-by-height','Greedy','greedy'),(406,'queue-reconstruction-by-height','Binary Indexed Tree','binary-indexed-tree'),(406,'queue-reconstruction-by-height','Segment Tree','segment-tree'),(406,'queue-reconstruction-by-height','Sorting','sorting'),(407,'trapping-rain-water-ii','Array','array'),(407,'trapping-rain-water-ii','Breadth-First Search','breadth-first-search'),(407,'trapping-rain-water-ii','Heap (Priority Queue)','heap-priority-queue'),(407,'trapping-rain-water-ii','Matrix','matrix'),(408,'valid-word-abbreviation','Two Pointers','two-pointers'),(408,'valid-word-abbreviation','String','string'),(409,'longest-palindrome','Hash Table','hash-table'),(409,'longest-palindrome','String','string'),(409,'longest-palindrome','Greedy','greedy'),(410,'split-array-largest-sum','Array','array'),(410,'split-array-largest-sum','Binary Search','binary-search'),(410,'split-array-largest-sum','Dynamic Programming','dynamic-programming'),(410,'split-array-largest-sum','Greedy','greedy'),(411,'minimum-unique-word-abbreviation','String','string'),(411,'minimum-unique-word-abbreviation','Backtracking','backtracking'),(411,'minimum-unique-word-abbreviation','Bit Manipulation','bit-manipulation'),(412,'fizz-buzz','Math','math'),(412,'fizz-buzz','String','string'),(412,'fizz-buzz','Simulation','simulation'),(413,'arithmetic-slices','Array','array'),(413,'arithmetic-slices','Dynamic Programming','dynamic-programming'),(414,'third-maximum-number','Array','array'),(414,'third-maximum-number','Sorting','sorting'),(415,'add-strings','Math','math'),(415,'add-strings','String','string'),(415,'add-strings','Simulation','simulation'),(416,'partition-equal-subset-sum','Array','array'),(416,'partition-equal-subset-sum','Dynamic Programming','dynamic-programming'),(417,'pacific-atlantic-water-flow','Array','array'),(417,'pacific-atlantic-water-flow','Depth-First Search','depth-first-search'),(417,'pacific-atlantic-water-flow','Breadth-First Search','breadth-first-search'),(417,'pacific-atlantic-water-flow','Matrix','matrix'),(418,'sentence-screen-fitting','String','string'),(418,'sentence-screen-fitting','Dynamic Programming','dynamic-programming'),(418,'sentence-screen-fitting','Simulation','simulation'),(419,'battleships-in-a-board','Array','array'),(419,'battleships-in-a-board','Depth-First Search','depth-first-search'),(419,'battleships-in-a-board','Matrix','matrix'),(420,'strong-password-checker','String','string'),(420,'strong-password-checker','Greedy','greedy'),(420,'strong-password-checker','Heap (Priority Queue)','heap-priority-queue'),(421,'maximum-xor-of-two-numbers-in-an-array','Array','array'),(421,'maximum-xor-of-two-numbers-in-an-array','Hash Table','hash-table'),(421,'maximum-xor-of-two-numbers-in-an-array','Bit Manipulation','bit-manipulation'),(421,'maximum-xor-of-two-numbers-in-an-array','Trie','trie'),(422,'valid-word-square','Array','array'),(422,'valid-word-square','Matrix','matrix'),(423,'reconstruct-original-digits-from-english','Hash Table','hash-table'),(423,'reconstruct-original-digits-from-english','Math','math'),(423,'reconstruct-original-digits-from-english','String','string'),(424,'longest-repeating-character-replacement','Hash Table','hash-table'),(424,'longest-repeating-character-replacement','String','string'),(424,'longest-repeating-character-replacement','Sliding Window','sliding-window'),(425,'word-squares','Array','array'),(425,'word-squares','String','string'),(425,'word-squares','Backtracking','backtracking'),(425,'word-squares','Trie','trie'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Linked List','linked-list'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Stack','stack'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Tree','tree'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Depth-First Search','depth-first-search'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Binary Search Tree','binary-search-tree'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Binary Tree','binary-tree'),(426,'convert-binary-search-tree-to-sorted-doubly-linked-list','Doubly-Linked List','doubly-linked-list'),(427,'construct-quad-tree','Array','array'),(427,'construct-quad-tree','Divide and Conquer','divide-and-conquer'),(427,'construct-quad-tree','Tree','tree'),(427,'construct-quad-tree','Matrix','matrix'),(428,'serialize-and-deserialize-n-ary-tree','String','string'),(428,'serialize-and-deserialize-n-ary-tree','Tree','tree'),(428,'serialize-and-deserialize-n-ary-tree','Depth-First Search','depth-first-search'),(428,'serialize-and-deserialize-n-ary-tree','Breadth-First Search','breadth-first-search'),(429,'n-ary-tree-level-order-traversal','Tree','tree'),(429,'n-ary-tree-level-order-traversal','Breadth-First Search','breadth-first-search'),(430,'flatten-a-multilevel-doubly-linked-list','Linked List','linked-list'),(430,'flatten-a-multilevel-doubly-linked-list','Depth-First Search','depth-first-search'),(430,'flatten-a-multilevel-doubly-linked-list','Doubly-Linked List','doubly-linked-list'),(431,'encode-n-ary-tree-to-binary-tree','Tree','tree'),(431,'encode-n-ary-tree-to-binary-tree','Depth-First Search','depth-first-search'),(431,'encode-n-ary-tree-to-binary-tree','Breadth-First Search','breadth-first-search'),(431,'encode-n-ary-tree-to-binary-tree','Design','design'),(431,'encode-n-ary-tree-to-binary-tree','Binary Tree','binary-tree'),(432,'all-oone-data-structure','Hash Table','hash-table'),(432,'all-oone-data-structure','Linked List','linked-list'),(432,'all-oone-data-structure','Design','design'),(432,'all-oone-data-structure','Doubly-Linked List','doubly-linked-list'),(433,'minimum-genetic-mutation','Hash Table','hash-table'),(433,'minimum-genetic-mutation','String','string'),(433,'minimum-genetic-mutation','Breadth-First Search','breadth-first-search'),(434,'number-of-segments-in-a-string','String','string'),(435,'non-overlapping-intervals','Array','array'),(435,'non-overlapping-intervals','Dynamic Programming','dynamic-programming'),(435,'non-overlapping-intervals','Greedy','greedy'),(435,'non-overlapping-intervals','Sorting','sorting'),(436,'find-right-interval','Array','array'),(436,'find-right-interval','Binary Search','binary-search'),(436,'find-right-interval','Sorting','sorting'),(437,'path-sum-iii','Tree','tree'),(437,'path-sum-iii','Depth-First Search','depth-first-search'),(437,'path-sum-iii','Binary Tree','binary-tree'),(438,'find-all-anagrams-in-a-string','Hash Table','hash-table'),(438,'find-all-anagrams-in-a-string','String','string'),(438,'find-all-anagrams-in-a-string','Sliding Window','sliding-window'),(439,'ternary-expression-parser','String','string'),(439,'ternary-expression-parser','Stack','stack'),(439,'ternary-expression-parser','Recursion','recursion'),(440,'k-th-smallest-in-lexicographical-order','Trie','trie'),(441,'arranging-coins','Math','math'),(441,'arranging-coins','Binary Search','binary-search'),(442,'find-all-duplicates-in-an-array','Array','array'),(442,'find-all-duplicates-in-an-array','Hash Table','hash-table'),(443,'string-compression','Two Pointers','two-pointers'),(443,'string-compression','String','string'),(444,'sequence-reconstruction','Array','array'),(444,'sequence-reconstruction','Graph','graph'),(444,'sequence-reconstruction','Topological Sort','topological-sort'),(445,'add-two-numbers-ii','Linked List','linked-list'),(445,'add-two-numbers-ii','Math','math'),(445,'add-two-numbers-ii','Stack','stack'),(446,'arithmetic-slices-ii-subsequence','Array','array'),(446,'arithmetic-slices-ii-subsequence','Dynamic Programming','dynamic-programming'),(447,'number-of-boomerangs','Array','array'),(447,'number-of-boomerangs','Hash Table','hash-table'),(447,'number-of-boomerangs','Math','math'),(448,'find-all-numbers-disappeared-in-an-array','Array','array'),(448,'find-all-numbers-disappeared-in-an-array','Hash Table','hash-table'),(449,'serialize-and-deserialize-bst','String','string'),(449,'serialize-and-deserialize-bst','Tree','tree'),(449,'serialize-and-deserialize-bst','Depth-First Search','depth-first-search'),(449,'serialize-and-deserialize-bst','Breadth-First Search','breadth-first-search'),(449,'serialize-and-deserialize-bst','Design','design'),(449,'serialize-and-deserialize-bst','Binary Search Tree','binary-search-tree'),(449,'serialize-and-deserialize-bst','Binary Tree','binary-tree'),(450,'delete-node-in-a-bst','Tree','tree'),(450,'delete-node-in-a-bst','Binary Search Tree','binary-search-tree'),(450,'delete-node-in-a-bst','Binary Tree','binary-tree'),(451,'sort-characters-by-frequency','Hash Table','hash-table'),(451,'sort-characters-by-frequency','String','string'),(451,'sort-characters-by-frequency','Sorting','sorting'),(451,'sort-characters-by-frequency','Heap (Priority Queue)','heap-priority-queue'),(451,'sort-characters-by-frequency','Bucket Sort','bucket-sort'),(451,'sort-characters-by-frequency','Counting','counting'),(452,'minimum-number-of-arrows-to-burst-balloons','Array','array'),(452,'minimum-number-of-arrows-to-burst-balloons','Greedy','greedy'),(452,'minimum-number-of-arrows-to-burst-balloons','Sorting','sorting'),(453,'minimum-moves-to-equal-array-elements','Array','array'),(453,'minimum-moves-to-equal-array-elements','Math','math'),(454,'4sum-ii','Array','array'),(454,'4sum-ii','Hash Table','hash-table'),(455,'assign-cookies','Array','array'),(455,'assign-cookies','Two Pointers','two-pointers'),(455,'assign-cookies','Greedy','greedy'),(455,'assign-cookies','Sorting','sorting'),(456,'132-pattern','Array','array'),(456,'132-pattern','Binary Search','binary-search'),(456,'132-pattern','Stack','stack'),(456,'132-pattern','Monotonic Stack','monotonic-stack'),(456,'132-pattern','Ordered Set','ordered-set'),(457,'circular-array-loop','Array','array'),(457,'circular-array-loop','Hash Table','hash-table'),(457,'circular-array-loop','Two Pointers','two-pointers'),(458,'poor-pigs','Math','math'),(458,'poor-pigs','Dynamic Programming','dynamic-programming'),(458,'poor-pigs','Combinatorics','combinatorics'),(459,'repeated-substring-pattern','String','string'),(459,'repeated-substring-pattern','String Matching','string-matching'),(460,'lfu-cache','Hash Table','hash-table'),(460,'lfu-cache','Linked List','linked-list'),(460,'lfu-cache','Design','design'),(460,'lfu-cache','Doubly-Linked List','doubly-linked-list'),(461,'hamming-distance','Bit Manipulation','bit-manipulation'),(462,'minimum-moves-to-equal-array-elements-ii','Array','array'),(462,'minimum-moves-to-equal-array-elements-ii','Math','math'),(462,'minimum-moves-to-equal-array-elements-ii','Sorting','sorting'),(463,'island-perimeter','Array','array'),(463,'island-perimeter','Depth-First Search','depth-first-search'),(463,'island-perimeter','Breadth-First Search','breadth-first-search'),(463,'island-perimeter','Matrix','matrix'),(464,'can-i-win','Math','math'),(464,'can-i-win','Dynamic Programming','dynamic-programming'),(464,'can-i-win','Bit Manipulation','bit-manipulation'),(464,'can-i-win','Memoization','memoization'),(464,'can-i-win','Game Theory','game-theory'),(464,'can-i-win','Bitmask','bitmask'),(465,'optimal-account-balancing','Array','array'),(465,'optimal-account-balancing','Dynamic Programming','dynamic-programming'),(465,'optimal-account-balancing','Backtracking','backtracking'),(465,'optimal-account-balancing','Bit Manipulation','bit-manipulation'),(465,'optimal-account-balancing','Bitmask','bitmask'),(466,'count-the-repetitions','String','string'),(466,'count-the-repetitions','Dynamic Programming','dynamic-programming'),(467,'unique-substrings-in-wraparound-string','String','string'),(467,'unique-substrings-in-wraparound-string','Dynamic Programming','dynamic-programming'),(468,'validate-ip-address','String','string'),(469,'convex-polygon','Math','math'),(469,'convex-polygon','Geometry','geometry'),(470,'implement-rand10-using-rand7','Math','math'),(470,'implement-rand10-using-rand7','Rejection Sampling','rejection-sampling'),(470,'implement-rand10-using-rand7','Randomized','randomized'),(470,'implement-rand10-using-rand7','Probability and Statistics','probability-and-statistics'),(471,'encode-string-with-shortest-length','String','string'),(471,'encode-string-with-shortest-length','Dynamic Programming','dynamic-programming'),(472,'concatenated-words','Array','array'),(472,'concatenated-words','String','string'),(472,'concatenated-words','Dynamic Programming','dynamic-programming'),(472,'concatenated-words','Depth-First Search','depth-first-search'),(472,'concatenated-words','Trie','trie'),(473,'matchsticks-to-square','Array','array'),(473,'matchsticks-to-square','Dynamic Programming','dynamic-programming'),(473,'matchsticks-to-square','Backtracking','backtracking'),(473,'matchsticks-to-square','Bit Manipulation','bit-manipulation'),(473,'matchsticks-to-square','Bitmask','bitmask'),(474,'ones-and-zeroes','Array','array'),(474,'ones-and-zeroes','String','string'),(474,'ones-and-zeroes','Dynamic Programming','dynamic-programming'),(475,'heaters','Array','array'),(475,'heaters','Two Pointers','two-pointers'),(475,'heaters','Binary Search','binary-search'),(475,'heaters','Sorting','sorting'),(476,'number-complement','Bit Manipulation','bit-manipulation'),(477,'total-hamming-distance','Array','array'),(477,'total-hamming-distance','Math','math'),(477,'total-hamming-distance','Bit Manipulation','bit-manipulation'),(478,'generate-random-point-in-a-circle','Math','math'),(478,'generate-random-point-in-a-circle','Geometry','geometry'),(478,'generate-random-point-in-a-circle','Rejection Sampling','rejection-sampling'),(478,'generate-random-point-in-a-circle','Randomized','randomized'),(479,'largest-palindrome-product','Math','math'),(480,'sliding-window-median','Array','array'),(480,'sliding-window-median','Hash Table','hash-table'),(480,'sliding-window-median','Sliding Window','sliding-window'),(480,'sliding-window-median','Heap (Priority Queue)','heap-priority-queue'),(481,'magical-string','Two Pointers','two-pointers'),(481,'magical-string','String','string'),(482,'license-key-formatting','String','string'),(483,'smallest-good-base','Math','math'),(483,'smallest-good-base','Binary Search','binary-search'),(484,'find-permutation','Array','array'),(484,'find-permutation','String','string'),(484,'find-permutation','Stack','stack'),(484,'find-permutation','Greedy','greedy'),(485,'max-consecutive-ones','Array','array'),(486,'predict-the-winner','Array','array'),(486,'predict-the-winner','Math','math'),(486,'predict-the-winner','Dynamic Programming','dynamic-programming'),(486,'predict-the-winner','Recursion','recursion'),(486,'predict-the-winner','Game Theory','game-theory'),(487,'max-consecutive-ones-ii','Array','array'),(487,'max-consecutive-ones-ii','Dynamic Programming','dynamic-programming'),(487,'max-consecutive-ones-ii','Sliding Window','sliding-window'),(488,'zuma-game','String','string'),(488,'zuma-game','Dynamic Programming','dynamic-programming'),(488,'zuma-game','Breadth-First Search','breadth-first-search'),(488,'zuma-game','Memoization','memoization'),(489,'robot-room-cleaner','Backtracking','backtracking'),(489,'robot-room-cleaner','Interactive','interactive'),(490,'the-maze','Depth-First Search','depth-first-search'),(490,'the-maze','Breadth-First Search','breadth-first-search'),(490,'the-maze','Graph','graph'),(491,'non-decreasing-subsequences','Array','array'),(491,'non-decreasing-subsequences','Hash Table','hash-table'),(491,'non-decreasing-subsequences','Backtracking','backtracking'),(491,'non-decreasing-subsequences','Bit Manipulation','bit-manipulation'),(492,'construct-the-rectangle','Math','math'),(493,'reverse-pairs','Array','array'),(493,'reverse-pairs','Binary Search','binary-search'),(493,'reverse-pairs','Divide and Conquer','divide-and-conquer'),(493,'reverse-pairs','Binary Indexed Tree','binary-indexed-tree'),(493,'reverse-pairs','Segment Tree','segment-tree'),(493,'reverse-pairs','Merge Sort','merge-sort'),(493,'reverse-pairs','Ordered Set','ordered-set'),(494,'target-sum','Array','array'),(494,'target-sum','Dynamic Programming','dynamic-programming'),(494,'target-sum','Backtracking','backtracking'),(495,'teemo-attacking','Array','array'),(495,'teemo-attacking','Simulation','simulation'),(496,'next-greater-element-i','Array','array'),(496,'next-greater-element-i','Hash Table','hash-table'),(496,'next-greater-element-i','Stack','stack'),(496,'next-greater-element-i','Monotonic Stack','monotonic-stack'),(497,'random-point-in-non-overlapping-rectangles','Array','array'),(497,'random-point-in-non-overlapping-rectangles','Math','math'),(497,'random-point-in-non-overlapping-rectangles','Binary Search','binary-search'),(497,'random-point-in-non-overlapping-rectangles','Reservoir Sampling','reservoir-sampling'),(497,'random-point-in-non-overlapping-rectangles','Prefix Sum','prefix-sum'),(497,'random-point-in-non-overlapping-rectangles','Ordered Set','ordered-set'),(497,'random-point-in-non-overlapping-rectangles','Randomized','randomized'),(498,'diagonal-traverse','Array','array'),(498,'diagonal-traverse','Matrix','matrix'),(498,'diagonal-traverse','Simulation','simulation'),(499,'the-maze-iii','Depth-First Search','depth-first-search'),(499,'the-maze-iii','Breadth-First Search','breadth-first-search'),(499,'the-maze-iii','Graph','graph'),(499,'the-maze-iii','Heap (Priority Queue)','heap-priority-queue'),(499,'the-maze-iii','Shortest Path','shortest-path'),(500,'keyboard-row','Array','array'),(500,'keyboard-row','Hash Table','hash-table'),(500,'keyboard-row','String','string'),(501,'find-mode-in-binary-search-tree','Tree','tree'),(501,'find-mode-in-binary-search-tree','Depth-First Search','depth-first-search'),(501,'find-mode-in-binary-search-tree','Binary Search Tree','binary-search-tree'),(501,'find-mode-in-binary-search-tree','Binary Tree','binary-tree'),(502,'ipo','Array','array'),(502,'ipo','Greedy','greedy'),(502,'ipo','Sorting','sorting'),(502,'ipo','Heap (Priority Queue)','heap-priority-queue'),(503,'next-greater-element-ii','Array','array'),(503,'next-greater-element-ii','Stack','stack'),(503,'next-greater-element-ii','Monotonic Stack','monotonic-stack'),(504,'base-7','Math','math'),(505,'the-maze-ii','Depth-First Search','depth-first-search'),(505,'the-maze-ii','Breadth-First Search','breadth-first-search'),(505,'the-maze-ii','Graph','graph'),(505,'the-maze-ii','Heap (Priority Queue)','heap-priority-queue'),(505,'the-maze-ii','Shortest Path','shortest-path'),(506,'relative-ranks','Array','array'),(506,'relative-ranks','Sorting','sorting'),(506,'relative-ranks','Heap (Priority Queue)','heap-priority-queue'),(507,'perfect-number','Math','math'),(508,'most-frequent-subtree-sum','Hash Table','hash-table'),(508,'most-frequent-subtree-sum','Tree','tree'),(508,'most-frequent-subtree-sum','Depth-First Search','depth-first-search'),(508,'most-frequent-subtree-sum','Binary Tree','binary-tree'),(509,'fibonacci-number','Math','math'),(509,'fibonacci-number','Dynamic Programming','dynamic-programming'),(509,'fibonacci-number','Recursion','recursion'),(509,'fibonacci-number','Memoization','memoization'),(510,'inorder-successor-in-bst-ii','Tree','tree'),(510,'inorder-successor-in-bst-ii','Binary Search Tree','binary-search-tree'),(510,'inorder-successor-in-bst-ii','Binary Tree','binary-tree'),(511,'game-play-analysis-i','Database','database'),(512,'game-play-analysis-ii','Database','database'),(513,'find-bottom-left-tree-value','Tree','tree'),(513,'find-bottom-left-tree-value','Depth-First Search','depth-first-search'),(513,'find-bottom-left-tree-value','Breadth-First Search','breadth-first-search'),(513,'find-bottom-left-tree-value','Binary Tree','binary-tree'),(514,'freedom-trail','String','string'),(514,'freedom-trail','Dynamic Programming','dynamic-programming'),(514,'freedom-trail','Depth-First Search','depth-first-search'),(514,'freedom-trail','Breadth-First Search','breadth-first-search'),(515,'find-largest-value-in-each-tree-row','Tree','tree'),(515,'find-largest-value-in-each-tree-row','Depth-First Search','depth-first-search'),(515,'find-largest-value-in-each-tree-row','Breadth-First Search','breadth-first-search'),(515,'find-largest-value-in-each-tree-row','Binary Tree','binary-tree'),(516,'longest-palindromic-subsequence','String','string'),(516,'longest-palindromic-subsequence','Dynamic Programming','dynamic-programming'),(517,'super-washing-machines','Array','array'),(517,'super-washing-machines','Greedy','greedy'),(518,'coin-change-ii','Array','array'),(518,'coin-change-ii','Dynamic Programming','dynamic-programming'),(519,'random-flip-matrix','Hash Table','hash-table'),(519,'random-flip-matrix','Math','math'),(519,'random-flip-matrix','Reservoir Sampling','reservoir-sampling'),(519,'random-flip-matrix','Randomized','randomized'),(520,'detect-capital','String','string'),(521,'longest-uncommon-subsequence-i','String','string'),(522,'longest-uncommon-subsequence-ii','Array','array'),(522,'longest-uncommon-subsequence-ii','Hash Table','hash-table'),(522,'longest-uncommon-subsequence-ii','Two Pointers','two-pointers'),(522,'longest-uncommon-subsequence-ii','String','string'),(522,'longest-uncommon-subsequence-ii','Sorting','sorting'),(523,'continuous-subarray-sum','Array','array'),(523,'continuous-subarray-sum','Hash Table','hash-table'),(523,'continuous-subarray-sum','Math','math'),(523,'continuous-subarray-sum','Prefix Sum','prefix-sum'),(524,'longest-word-in-dictionary-through-deleting','Array','array'),(524,'longest-word-in-dictionary-through-deleting','Two Pointers','two-pointers'),(524,'longest-word-in-dictionary-through-deleting','String','string'),(524,'longest-word-in-dictionary-through-deleting','Sorting','sorting'),(525,'contiguous-array','Array','array'),(525,'contiguous-array','Hash Table','hash-table'),(525,'contiguous-array','Prefix Sum','prefix-sum'),(526,'beautiful-arrangement','Array','array'),(526,'beautiful-arrangement','Dynamic Programming','dynamic-programming'),(526,'beautiful-arrangement','Backtracking','backtracking'),(526,'beautiful-arrangement','Bit Manipulation','bit-manipulation'),(526,'beautiful-arrangement','Bitmask','bitmask'),(527,'word-abbreviation','Array','array'),(527,'word-abbreviation','String','string'),(527,'word-abbreviation','Greedy','greedy'),(527,'word-abbreviation','Trie','trie'),(527,'word-abbreviation','Sorting','sorting'),(528,'random-pick-with-weight','Array','array'),(528,'random-pick-with-weight','Math','math'),(528,'random-pick-with-weight','Binary Search','binary-search'),(528,'random-pick-with-weight','Prefix Sum','prefix-sum'),(528,'random-pick-with-weight','Randomized','randomized'),(529,'minesweeper','Array','array'),(529,'minesweeper','Depth-First Search','depth-first-search'),(529,'minesweeper','Breadth-First Search','breadth-first-search'),(529,'minesweeper','Matrix','matrix'),(530,'minimum-absolute-difference-in-bst','Tree','tree'),(530,'minimum-absolute-difference-in-bst','Depth-First Search','depth-first-search'),(530,'minimum-absolute-difference-in-bst','Breadth-First Search','breadth-first-search'),(530,'minimum-absolute-difference-in-bst','Binary Search Tree','binary-search-tree'),(530,'minimum-absolute-difference-in-bst','Binary Tree','binary-tree'),(531,'lonely-pixel-i','Array','array'),(531,'lonely-pixel-i','Hash Table','hash-table'),(531,'lonely-pixel-i','Matrix','matrix'),(532,'k-diff-pairs-in-an-array','Array','array'),(532,'k-diff-pairs-in-an-array','Hash Table','hash-table'),(532,'k-diff-pairs-in-an-array','Two Pointers','two-pointers'),(532,'k-diff-pairs-in-an-array','Binary Search','binary-search'),(532,'k-diff-pairs-in-an-array','Sorting','sorting'),(533,'lonely-pixel-ii','Array','array'),(533,'lonely-pixel-ii','Hash Table','hash-table'),(533,'lonely-pixel-ii','Matrix','matrix'),(534,'game-play-analysis-iii','Database','database'),(535,'encode-and-decode-tinyurl','Hash Table','hash-table'),(535,'encode-and-decode-tinyurl','String','string'),(535,'encode-and-decode-tinyurl','Design','design'),(535,'encode-and-decode-tinyurl','Hash Function','hash-function'),(536,'construct-binary-tree-from-string','String','string'),(536,'construct-binary-tree-from-string','Tree','tree'),(536,'construct-binary-tree-from-string','Depth-First Search','depth-first-search'),(536,'construct-binary-tree-from-string','Binary Tree','binary-tree'),(537,'complex-number-multiplication','Math','math'),(537,'complex-number-multiplication','String','string'),(537,'complex-number-multiplication','Simulation','simulation'),(538,'convert-bst-to-greater-tree','Tree','tree'),(538,'convert-bst-to-greater-tree','Depth-First Search','depth-first-search'),(538,'convert-bst-to-greater-tree','Binary Search Tree','binary-search-tree'),(538,'convert-bst-to-greater-tree','Binary Tree','binary-tree'),(539,'minimum-time-difference','Array','array'),(539,'minimum-time-difference','Math','math'),(539,'minimum-time-difference','String','string'),(539,'minimum-time-difference','Sorting','sorting'),(540,'single-element-in-a-sorted-array','Array','array'),(540,'single-element-in-a-sorted-array','Binary Search','binary-search'),(541,'reverse-string-ii','Two Pointers','two-pointers'),(541,'reverse-string-ii','String','string'),(542,'01-matrix','Array','array'),(542,'01-matrix','Dynamic Programming','dynamic-programming'),(542,'01-matrix','Breadth-First Search','breadth-first-search'),(542,'01-matrix','Matrix','matrix'),(543,'diameter-of-binary-tree','Tree','tree'),(543,'diameter-of-binary-tree','Depth-First Search','depth-first-search'),(543,'diameter-of-binary-tree','Binary Tree','binary-tree'),(544,'output-contest-matches','String','string'),(544,'output-contest-matches','Recursion','recursion'),(544,'output-contest-matches','Simulation','simulation'),(545,'boundary-of-binary-tree','Tree','tree'),(545,'boundary-of-binary-tree','Depth-First Search','depth-first-search'),(545,'boundary-of-binary-tree','Binary Tree','binary-tree'),(546,'remove-boxes','Array','array'),(546,'remove-boxes','Dynamic Programming','dynamic-programming'),(546,'remove-boxes','Memoization','memoization'),(547,'number-of-provinces','Depth-First Search','depth-first-search'),(547,'number-of-provinces','Breadth-First Search','breadth-first-search'),(547,'number-of-provinces','Union Find','union-find'),(547,'number-of-provinces','Graph','graph'),(548,'split-array-with-equal-sum','Array','array'),(548,'split-array-with-equal-sum','Prefix Sum','prefix-sum'),(549,'binary-tree-longest-consecutive-sequence-ii','Tree','tree'),(549,'binary-tree-longest-consecutive-sequence-ii','Depth-First Search','depth-first-search'),(549,'binary-tree-longest-consecutive-sequence-ii','Binary Tree','binary-tree'),(550,'game-play-analysis-iv','Database','database'),(551,'student-attendance-record-i','String','string'),(552,'student-attendance-record-ii','Dynamic Programming','dynamic-programming'),(553,'optimal-division','Array','array'),(553,'optimal-division','Math','math'),(553,'optimal-division','Dynamic Programming','dynamic-programming'),(554,'brick-wall','Array','array'),(554,'brick-wall','Hash Table','hash-table'),(555,'split-concatenated-strings','Array','array'),(555,'split-concatenated-strings','String','string'),(555,'split-concatenated-strings','Greedy','greedy'),(556,'next-greater-element-iii','Math','math'),(556,'next-greater-element-iii','Two Pointers','two-pointers'),(556,'next-greater-element-iii','String','string'),(557,'reverse-words-in-a-string-iii','Two Pointers','two-pointers'),(557,'reverse-words-in-a-string-iii','String','string'),(558,'logical-or-of-two-binary-grids-represented-as-quad-trees','Divide and Conquer','divide-and-conquer'),(558,'logical-or-of-two-binary-grids-represented-as-quad-trees','Tree','tree'),(559,'maximum-depth-of-n-ary-tree','Tree','tree'),(559,'maximum-depth-of-n-ary-tree','Depth-First Search','depth-first-search'),(559,'maximum-depth-of-n-ary-tree','Breadth-First Search','breadth-first-search'),(560,'subarray-sum-equals-k','Array','array'),(560,'subarray-sum-equals-k','Hash Table','hash-table'),(560,'subarray-sum-equals-k','Prefix Sum','prefix-sum'),(561,'array-partition','Array','array'),(561,'array-partition','Greedy','greedy'),(561,'array-partition','Sorting','sorting'),(561,'array-partition','Counting Sort','counting-sort'),(562,'longest-line-of-consecutive-one-in-matrix','Array','array'),(562,'longest-line-of-consecutive-one-in-matrix','Dynamic Programming','dynamic-programming'),(562,'longest-line-of-consecutive-one-in-matrix','Matrix','matrix'),(563,'binary-tree-tilt','Tree','tree'),(563,'binary-tree-tilt','Depth-First Search','depth-first-search'),(563,'binary-tree-tilt','Binary Tree','binary-tree'),(564,'find-the-closest-palindrome','Math','math'),(564,'find-the-closest-palindrome','String','string'),(565,'array-nesting','Array','array'),(565,'array-nesting','Depth-First Search','depth-first-search'),(566,'reshape-the-matrix','Array','array'),(566,'reshape-the-matrix','Matrix','matrix'),(566,'reshape-the-matrix','Simulation','simulation'),(567,'permutation-in-string','Hash Table','hash-table'),(567,'permutation-in-string','Two Pointers','two-pointers'),(567,'permutation-in-string','String','string'),(567,'permutation-in-string','Sliding Window','sliding-window'),(568,'maximum-vacation-days','Array','array'),(568,'maximum-vacation-days','Dynamic Programming','dynamic-programming'),(568,'maximum-vacation-days','Matrix','matrix'),(569,'median-employee-salary','Database','database'),(570,'managers-with-at-least-5-direct-reports','Database','database'),(571,'find-median-given-frequency-of-numbers','Database','database'),(572,'subtree-of-another-tree','Tree','tree'),(572,'subtree-of-another-tree','Depth-First Search','depth-first-search'),(572,'subtree-of-another-tree','String Matching','string-matching'),(572,'subtree-of-another-tree','Binary Tree','binary-tree'),(572,'subtree-of-another-tree','Hash Function','hash-function'),(573,'squirrel-simulation','Array','array'),(573,'squirrel-simulation','Math','math'),(574,'winning-candidate','Database','database'),(575,'distribute-candies','Array','array'),(575,'distribute-candies','Hash Table','hash-table'),(576,'out-of-boundary-paths','Dynamic Programming','dynamic-programming'),(577,'employee-bonus','Database','database'),(578,'get-highest-answer-rate-question','Database','database'),(579,'find-cumulative-salary-of-an-employee','Database','database'),(580,'count-student-number-in-departments','Database','database'),(581,'shortest-unsorted-continuous-subarray','Array','array'),(581,'shortest-unsorted-continuous-subarray','Two Pointers','two-pointers'),(581,'shortest-unsorted-continuous-subarray','Stack','stack'),(581,'shortest-unsorted-continuous-subarray','Greedy','greedy'),(581,'shortest-unsorted-continuous-subarray','Sorting','sorting'),(581,'shortest-unsorted-continuous-subarray','Monotonic Stack','monotonic-stack'),(582,'kill-process','Array','array'),(582,'kill-process','Hash Table','hash-table'),(582,'kill-process','Tree','tree'),(582,'kill-process','Depth-First Search','depth-first-search'),(582,'kill-process','Breadth-First Search','breadth-first-search'),(583,'delete-operation-for-two-strings','String','string'),(583,'delete-operation-for-two-strings','Dynamic Programming','dynamic-programming'),(584,'find-customer-referee','Database','database'),(585,'investments-in-2016','Database','database'),(586,'customer-placing-the-largest-number-of-orders','Database','database'),(587,'erect-the-fence','Array','array'),(587,'erect-the-fence','Math','math'),(587,'erect-the-fence','Geometry','geometry'),(588,'design-in-memory-file-system','Hash Table','hash-table'),(588,'design-in-memory-file-system','String','string'),(588,'design-in-memory-file-system','Design','design'),(588,'design-in-memory-file-system','Trie','trie'),(589,'n-ary-tree-preorder-traversal','Stack','stack'),(589,'n-ary-tree-preorder-traversal','Tree','tree'),(589,'n-ary-tree-preorder-traversal','Depth-First Search','depth-first-search'),(590,'n-ary-tree-postorder-traversal','Stack','stack'),(590,'n-ary-tree-postorder-traversal','Tree','tree'),(590,'n-ary-tree-postorder-traversal','Depth-First Search','depth-first-search'),(591,'tag-validator','String','string'),(591,'tag-validator','Stack','stack'),(592,'fraction-addition-and-subtraction','Math','math'),(592,'fraction-addition-and-subtraction','String','string'),(592,'fraction-addition-and-subtraction','Simulation','simulation'),(593,'valid-square','Math','math'),(593,'valid-square','Geometry','geometry'),(594,'longest-harmonious-subsequence','Array','array'),(594,'longest-harmonious-subsequence','Hash Table','hash-table'),(594,'longest-harmonious-subsequence','Sorting','sorting'),(595,'big-countries','Database','database'),(596,'classes-more-than-5-students','Database','database'),(597,'friend-requests-i-overall-acceptance-rate','Database','database'),(598,'range-addition-ii','Array','array'),(598,'range-addition-ii','Math','math'),(599,'minimum-index-sum-of-two-lists','Array','array'),(599,'minimum-index-sum-of-two-lists','Hash Table','hash-table'),(599,'minimum-index-sum-of-two-lists','String','string'),(600,'non-negative-integers-without-consecutive-ones','Dynamic Programming','dynamic-programming'),(601,'human-traffic-of-stadium','Database','database'),(602,'friend-requests-ii-who-has-the-most-friends','Database','database'),(603,'consecutive-available-seats','Database','database'),(604,'design-compressed-string-iterator','Array','array'),(604,'design-compressed-string-iterator','Hash Table','hash-table'),(604,'design-compressed-string-iterator','String','string'),(604,'design-compressed-string-iterator','Design','design'),(604,'design-compressed-string-iterator','Iterator','iterator'),(605,'can-place-flowers','Array','array'),(605,'can-place-flowers','Greedy','greedy'),(606,'construct-string-from-binary-tree','String','string'),(606,'construct-string-from-binary-tree','Tree','tree'),(606,'construct-string-from-binary-tree','Depth-First Search','depth-first-search'),(606,'construct-string-from-binary-tree','Binary Tree','binary-tree'),(607,'sales-person','Database','database'),(608,'tree-node','Database','database'),(609,'find-duplicate-file-in-system','Array','array'),(609,'find-duplicate-file-in-system','Hash Table','hash-table'),(609,'find-duplicate-file-in-system','String','string'),(610,'triangle-judgement','Database','database'),(611,'valid-triangle-number','Array','array'),(611,'valid-triangle-number','Two Pointers','two-pointers'),(611,'valid-triangle-number','Binary Search','binary-search'),(611,'valid-triangle-number','Greedy','greedy'),(611,'valid-triangle-number','Sorting','sorting'),(612,'shortest-distance-in-a-plane','Database','database'),(613,'shortest-distance-in-a-line','Database','database'),(614,'second-degree-follower','Database','database'),(615,'average-salary-departments-vs-company','Database','database'),(616,'add-bold-tag-in-string','Array','array'),(616,'add-bold-tag-in-string','Hash Table','hash-table'),(616,'add-bold-tag-in-string','String','string'),(616,'add-bold-tag-in-string','Trie','trie'),(616,'add-bold-tag-in-string','String Matching','string-matching'),(617,'merge-two-binary-trees','Tree','tree'),(617,'merge-two-binary-trees','Depth-First Search','depth-first-search'),(617,'merge-two-binary-trees','Breadth-First Search','breadth-first-search'),(617,'merge-two-binary-trees','Binary Tree','binary-tree'),(618,'students-report-by-geography','Database','database'),(619,'biggest-single-number','Database','database'),(620,'not-boring-movies','Database','database'),(621,'task-scheduler','Array','array'),(621,'task-scheduler','Hash Table','hash-table'),(621,'task-scheduler','Greedy','greedy'),(621,'task-scheduler','Sorting','sorting'),(621,'task-scheduler','Heap (Priority Queue)','heap-priority-queue'),(621,'task-scheduler','Counting','counting'),(622,'design-circular-queue','Array','array'),(622,'design-circular-queue','Linked List','linked-list'),(622,'design-circular-queue','Design','design'),(622,'design-circular-queue','Queue','queue'),(623,'add-one-row-to-tree','Tree','tree'),(623,'add-one-row-to-tree','Depth-First Search','depth-first-search'),(623,'add-one-row-to-tree','Breadth-First Search','breadth-first-search'),(623,'add-one-row-to-tree','Binary Tree','binary-tree'),(624,'maximum-distance-in-arrays','Array','array'),(624,'maximum-distance-in-arrays','Greedy','greedy'),(625,'minimum-factorization','Math','math'),(625,'minimum-factorization','Greedy','greedy'),(626,'exchange-seats','Database','database'),(627,'swap-salary','Database','database'),(628,'maximum-product-of-three-numbers','Array','array'),(628,'maximum-product-of-three-numbers','Math','math'),(628,'maximum-product-of-three-numbers','Sorting','sorting'),(629,'k-inverse-pairs-array','Dynamic Programming','dynamic-programming'),(630,'course-schedule-iii','Array','array'),(630,'course-schedule-iii','Greedy','greedy'),(630,'course-schedule-iii','Heap (Priority Queue)','heap-priority-queue'),(631,'design-excel-sum-formula','Graph','graph'),(631,'design-excel-sum-formula','Design','design'),(631,'design-excel-sum-formula','Topological Sort','topological-sort'),(632,'smallest-range-covering-elements-from-k-lists','Array','array'),(632,'smallest-range-covering-elements-from-k-lists','Hash Table','hash-table'),(632,'smallest-range-covering-elements-from-k-lists','Greedy','greedy'),(632,'smallest-range-covering-elements-from-k-lists','Sliding Window','sliding-window'),(632,'smallest-range-covering-elements-from-k-lists','Sorting','sorting'),(632,'smallest-range-covering-elements-from-k-lists','Heap (Priority Queue)','heap-priority-queue'),(633,'sum-of-square-numbers','Math','math'),(633,'sum-of-square-numbers','Two Pointers','two-pointers'),(633,'sum-of-square-numbers','Binary Search','binary-search'),(634,'find-the-derangement-of-an-array','Math','math'),(634,'find-the-derangement-of-an-array','Dynamic Programming','dynamic-programming'),(635,'design-log-storage-system','Hash Table','hash-table'),(635,'design-log-storage-system','String','string'),(635,'design-log-storage-system','Design','design'),(635,'design-log-storage-system','Ordered Set','ordered-set'),(636,'exclusive-time-of-functions','Array','array'),(636,'exclusive-time-of-functions','Stack','stack'),(637,'average-of-levels-in-binary-tree','Tree','tree'),(637,'average-of-levels-in-binary-tree','Depth-First Search','depth-first-search'),(637,'average-of-levels-in-binary-tree','Breadth-First Search','breadth-first-search'),(637,'average-of-levels-in-binary-tree','Binary Tree','binary-tree'),(638,'shopping-offers','Array','array'),(638,'shopping-offers','Dynamic Programming','dynamic-programming'),(638,'shopping-offers','Backtracking','backtracking'),(638,'shopping-offers','Bit Manipulation','bit-manipulation'),(638,'shopping-offers','Memoization','memoization'),(638,'shopping-offers','Bitmask','bitmask'),(639,'decode-ways-ii','String','string'),(639,'decode-ways-ii','Dynamic Programming','dynamic-programming'),(640,'solve-the-equation','Math','math'),(640,'solve-the-equation','String','string'),(640,'solve-the-equation','Simulation','simulation'),(641,'design-circular-deque','Array','array'),(641,'design-circular-deque','Linked List','linked-list'),(641,'design-circular-deque','Design','design'),(641,'design-circular-deque','Queue','queue'),(642,'design-search-autocomplete-system','String','string'),(642,'design-search-autocomplete-system','Design','design'),(642,'design-search-autocomplete-system','Trie','trie'),(642,'design-search-autocomplete-system','Data Stream','data-stream'),(643,'maximum-average-subarray-i','Array','array'),(643,'maximum-average-subarray-i','Sliding Window','sliding-window'),(644,'maximum-average-subarray-ii','Array','array'),(644,'maximum-average-subarray-ii','Binary Search','binary-search'),(644,'maximum-average-subarray-ii','Prefix Sum','prefix-sum'),(645,'set-mismatch','Array','array'),(645,'set-mismatch','Hash Table','hash-table'),(645,'set-mismatch','Bit Manipulation','bit-manipulation'),(645,'set-mismatch','Sorting','sorting'),(646,'maximum-length-of-pair-chain','Array','array'),(646,'maximum-length-of-pair-chain','Dynamic Programming','dynamic-programming'),(646,'maximum-length-of-pair-chain','Greedy','greedy'),(646,'maximum-length-of-pair-chain','Sorting','sorting'),(647,'palindromic-substrings','String','string'),(647,'palindromic-substrings','Dynamic Programming','dynamic-programming'),(648,'replace-words','Array','array'),(648,'replace-words','Hash Table','hash-table'),(648,'replace-words','String','string'),(648,'replace-words','Trie','trie'),(649,'dota2-senate','String','string'),(649,'dota2-senate','Greedy','greedy'),(649,'dota2-senate','Queue','queue'),(650,'2-keys-keyboard','Math','math'),(650,'2-keys-keyboard','Dynamic Programming','dynamic-programming'),(651,'4-keys-keyboard','Math','math'),(651,'4-keys-keyboard','Dynamic Programming','dynamic-programming'),(652,'find-duplicate-subtrees','Hash Table','hash-table'),(652,'find-duplicate-subtrees','Tree','tree'),(652,'find-duplicate-subtrees','Depth-First Search','depth-first-search'),(652,'find-duplicate-subtrees','Binary Tree','binary-tree'),(653,'two-sum-iv-input-is-a-bst','Hash Table','hash-table'),(653,'two-sum-iv-input-is-a-bst','Two Pointers','two-pointers'),(653,'two-sum-iv-input-is-a-bst','Tree','tree'),(653,'two-sum-iv-input-is-a-bst','Depth-First Search','depth-first-search'),(653,'two-sum-iv-input-is-a-bst','Breadth-First Search','breadth-first-search'),(653,'two-sum-iv-input-is-a-bst','Binary Search Tree','binary-search-tree'),(653,'two-sum-iv-input-is-a-bst','Binary Tree','binary-tree'),(654,'maximum-binary-tree','Array','array'),(654,'maximum-binary-tree','Divide and Conquer','divide-and-conquer'),(654,'maximum-binary-tree','Stack','stack'),(654,'maximum-binary-tree','Tree','tree'),(654,'maximum-binary-tree','Monotonic Stack','monotonic-stack'),(654,'maximum-binary-tree','Binary Tree','binary-tree'),(655,'print-binary-tree','Tree','tree'),(655,'print-binary-tree','Depth-First Search','depth-first-search'),(655,'print-binary-tree','Breadth-First Search','breadth-first-search'),(655,'print-binary-tree','Binary Tree','binary-tree'),(656,'coin-path','Array','array'),(656,'coin-path','Dynamic Programming','dynamic-programming'),(657,'robot-return-to-origin','String','string'),(657,'robot-return-to-origin','Simulation','simulation'),(658,'find-k-closest-elements','Array','array'),(658,'find-k-closest-elements','Two Pointers','two-pointers'),(658,'find-k-closest-elements','Binary Search','binary-search'),(658,'find-k-closest-elements','Sliding Window','sliding-window'),(658,'find-k-closest-elements','Sorting','sorting'),(658,'find-k-closest-elements','Heap (Priority Queue)','heap-priority-queue'),(659,'split-array-into-consecutive-subsequences','Array','array'),(659,'split-array-into-consecutive-subsequences','Hash Table','hash-table'),(659,'split-array-into-consecutive-subsequences','Greedy','greedy'),(659,'split-array-into-consecutive-subsequences','Heap (Priority Queue)','heap-priority-queue'),(660,'remove-9','Math','math'),(661,'image-smoother','Array','array'),(661,'image-smoother','Matrix','matrix'),(662,'maximum-width-of-binary-tree','Tree','tree'),(662,'maximum-width-of-binary-tree','Depth-First Search','depth-first-search'),(662,'maximum-width-of-binary-tree','Breadth-First Search','breadth-first-search'),(662,'maximum-width-of-binary-tree','Binary Tree','binary-tree'),(663,'equal-tree-partition','Tree','tree'),(663,'equal-tree-partition','Depth-First Search','depth-first-search'),(663,'equal-tree-partition','Binary Tree','binary-tree'),(664,'strange-printer','String','string'),(664,'strange-printer','Dynamic Programming','dynamic-programming'),(665,'non-decreasing-array','Array','array'),(666,'path-sum-iv','Array','array'),(666,'path-sum-iv','Tree','tree'),(666,'path-sum-iv','Depth-First Search','depth-first-search'),(666,'path-sum-iv','Binary Tree','binary-tree'),(667,'beautiful-arrangement-ii','Array','array'),(667,'beautiful-arrangement-ii','Math','math'),(668,'kth-smallest-number-in-multiplication-table','Math','math'),(668,'kth-smallest-number-in-multiplication-table','Binary Search','binary-search'),(669,'trim-a-binary-search-tree','Tree','tree'),(669,'trim-a-binary-search-tree','Depth-First Search','depth-first-search'),(669,'trim-a-binary-search-tree','Binary Search Tree','binary-search-tree'),(669,'trim-a-binary-search-tree','Binary Tree','binary-tree'),(670,'maximum-swap','Math','math'),(670,'maximum-swap','Greedy','greedy'),(671,'second-minimum-node-in-a-binary-tree','Tree','tree'),(671,'second-minimum-node-in-a-binary-tree','Depth-First Search','depth-first-search'),(671,'second-minimum-node-in-a-binary-tree','Binary Tree','binary-tree'),(672,'bulb-switcher-ii','Math','math'),(672,'bulb-switcher-ii','Bit Manipulation','bit-manipulation'),(672,'bulb-switcher-ii','Depth-First Search','depth-first-search'),(672,'bulb-switcher-ii','Breadth-First Search','breadth-first-search'),(673,'number-of-longest-increasing-subsequence','Array','array'),(673,'number-of-longest-increasing-subsequence','Dynamic Programming','dynamic-programming'),(673,'number-of-longest-increasing-subsequence','Binary Indexed Tree','binary-indexed-tree'),(673,'number-of-longest-increasing-subsequence','Segment Tree','segment-tree'),(674,'longest-continuous-increasing-subsequence','Array','array'),(675,'cut-off-trees-for-golf-event','Array','array'),(675,'cut-off-trees-for-golf-event','Breadth-First Search','breadth-first-search'),(675,'cut-off-trees-for-golf-event','Heap (Priority Queue)','heap-priority-queue'),(675,'cut-off-trees-for-golf-event','Matrix','matrix'),(676,'implement-magic-dictionary','Hash Table','hash-table'),(676,'implement-magic-dictionary','String','string'),(676,'implement-magic-dictionary','Design','design'),(676,'implement-magic-dictionary','Trie','trie'),(677,'map-sum-pairs','Hash Table','hash-table'),(677,'map-sum-pairs','String','string'),(677,'map-sum-pairs','Design','design'),(677,'map-sum-pairs','Trie','trie'),(678,'valid-parenthesis-string','String','string'),(678,'valid-parenthesis-string','Dynamic Programming','dynamic-programming'),(678,'valid-parenthesis-string','Stack','stack'),(678,'valid-parenthesis-string','Greedy','greedy'),(679,'24-game','Array','array'),(679,'24-game','Math','math'),(679,'24-game','Backtracking','backtracking'),(680,'valid-palindrome-ii','Two Pointers','two-pointers'),(680,'valid-palindrome-ii','String','string'),(680,'valid-palindrome-ii','Greedy','greedy'),(681,'next-closest-time','String','string'),(681,'next-closest-time','Enumeration','enumeration'),(682,'baseball-game','Array','array'),(682,'baseball-game','Stack','stack'),(682,'baseball-game','Simulation','simulation'),(683,'k-empty-slots','Array','array'),(683,'k-empty-slots','Binary Indexed Tree','binary-indexed-tree'),(683,'k-empty-slots','Sliding Window','sliding-window'),(683,'k-empty-slots','Ordered Set','ordered-set'),(684,'redundant-connection','Depth-First Search','depth-first-search'),(684,'redundant-connection','Breadth-First Search','breadth-first-search'),(684,'redundant-connection','Union Find','union-find'),(684,'redundant-connection','Graph','graph'),(685,'redundant-connection-ii','Depth-First Search','depth-first-search'),(685,'redundant-connection-ii','Breadth-First Search','breadth-first-search'),(685,'redundant-connection-ii','Union Find','union-find'),(685,'redundant-connection-ii','Graph','graph'),(686,'repeated-string-match','String','string'),(686,'repeated-string-match','String Matching','string-matching'),(687,'longest-univalue-path','Tree','tree'),(687,'longest-univalue-path','Depth-First Search','depth-first-search'),(687,'longest-univalue-path','Binary Tree','binary-tree'),(688,'knight-probability-in-chessboard','Dynamic Programming','dynamic-programming'),(689,'maximum-sum-of-3-non-overlapping-subarrays','Array','array'),(689,'maximum-sum-of-3-non-overlapping-subarrays','Dynamic Programming','dynamic-programming'),(690,'employee-importance','Hash Table','hash-table'),(690,'employee-importance','Depth-First Search','depth-first-search'),(690,'employee-importance','Breadth-First Search','breadth-first-search'),(691,'stickers-to-spell-word','Array','array'),(691,'stickers-to-spell-word','String','string'),(691,'stickers-to-spell-word','Dynamic Programming','dynamic-programming'),(691,'stickers-to-spell-word','Backtracking','backtracking'),(691,'stickers-to-spell-word','Bit Manipulation','bit-manipulation'),(691,'stickers-to-spell-word','Bitmask','bitmask'),(692,'top-k-frequent-words','Hash Table','hash-table'),(692,'top-k-frequent-words','String','string'),(692,'top-k-frequent-words','Trie','trie'),(692,'top-k-frequent-words','Sorting','sorting'),(692,'top-k-frequent-words','Heap (Priority Queue)','heap-priority-queue'),(692,'top-k-frequent-words','Bucket Sort','bucket-sort'),(692,'top-k-frequent-words','Counting','counting'),(693,'binary-number-with-alternating-bits','Bit Manipulation','bit-manipulation'),(694,'number-of-distinct-islands','Hash Table','hash-table'),(694,'number-of-distinct-islands','Depth-First Search','depth-first-search'),(694,'number-of-distinct-islands','Breadth-First Search','breadth-first-search'),(694,'number-of-distinct-islands','Union Find','union-find'),(694,'number-of-distinct-islands','Hash Function','hash-function'),(695,'max-area-of-island','Array','array'),(695,'max-area-of-island','Depth-First Search','depth-first-search'),(695,'max-area-of-island','Breadth-First Search','breadth-first-search'),(695,'max-area-of-island','Union Find','union-find'),(695,'max-area-of-island','Matrix','matrix'),(696,'count-binary-substrings','Two Pointers','two-pointers'),(696,'count-binary-substrings','String','string'),(697,'degree-of-an-array','Array','array'),(697,'degree-of-an-array','Hash Table','hash-table'),(698,'partition-to-k-equal-sum-subsets','Array','array'),(698,'partition-to-k-equal-sum-subsets','Dynamic Programming','dynamic-programming'),(698,'partition-to-k-equal-sum-subsets','Backtracking','backtracking'),(698,'partition-to-k-equal-sum-subsets','Bit Manipulation','bit-manipulation'),(698,'partition-to-k-equal-sum-subsets','Memoization','memoization'),(698,'partition-to-k-equal-sum-subsets','Bitmask','bitmask'),(699,'falling-squares','Array','array'),(699,'falling-squares','Segment Tree','segment-tree'),(699,'falling-squares','Ordered Set','ordered-set'),(700,'search-in-a-binary-search-tree','Tree','tree'),(700,'search-in-a-binary-search-tree','Binary Search Tree','binary-search-tree'),(700,'search-in-a-binary-search-tree','Binary Tree','binary-tree'),(701,'insert-into-a-binary-search-tree','Tree','tree'),(701,'insert-into-a-binary-search-tree','Binary Search Tree','binary-search-tree'),(701,'insert-into-a-binary-search-tree','Binary Tree','binary-tree'),(702,'search-in-a-sorted-array-of-unknown-size','Array','array'),(702,'search-in-a-sorted-array-of-unknown-size','Binary Search','binary-search'),(702,'search-in-a-sorted-array-of-unknown-size','Interactive','interactive'),(703,'kth-largest-element-in-a-stream','Tree','tree'),(703,'kth-largest-element-in-a-stream','Design','design'),(703,'kth-largest-element-in-a-stream','Binary Search Tree','binary-search-tree'),(703,'kth-largest-element-in-a-stream','Heap (Priority Queue)','heap-priority-queue'),(703,'kth-largest-element-in-a-stream','Binary Tree','binary-tree'),(703,'kth-largest-element-in-a-stream','Data Stream','data-stream'),(704,'binary-search','Array','array'),(704,'binary-search','Binary Search','binary-search'),(705,'design-hashset','Array','array'),(705,'design-hashset','Hash Table','hash-table'),(705,'design-hashset','Linked List','linked-list'),(705,'design-hashset','Design','design'),(705,'design-hashset','Hash Function','hash-function'),(706,'design-hashmap','Array','array'),(706,'design-hashmap','Hash Table','hash-table'),(706,'design-hashmap','Linked List','linked-list'),(706,'design-hashmap','Design','design'),(706,'design-hashmap','Hash Function','hash-function'),(707,'design-linked-list','Linked List','linked-list'),(707,'design-linked-list','Design','design'),(708,'insert-into-a-sorted-circular-linked-list','Linked List','linked-list'),(709,'to-lower-case','String','string'),(710,'random-pick-with-blacklist','Array','array'),(710,'random-pick-with-blacklist','Hash Table','hash-table'),(710,'random-pick-with-blacklist','Math','math'),(710,'random-pick-with-blacklist','Binary Search','binary-search'),(710,'random-pick-with-blacklist','Sorting','sorting'),(710,'random-pick-with-blacklist','Randomized','randomized'),(711,'number-of-distinct-islands-ii','Hash Table','hash-table'),(711,'number-of-distinct-islands-ii','Depth-First Search','depth-first-search'),(711,'number-of-distinct-islands-ii','Breadth-First Search','breadth-first-search'),(711,'number-of-distinct-islands-ii','Union Find','union-find'),(711,'number-of-distinct-islands-ii','Hash Function','hash-function'),(712,'minimum-ascii-delete-sum-for-two-strings','String','string'),(712,'minimum-ascii-delete-sum-for-two-strings','Dynamic Programming','dynamic-programming'),(713,'subarray-product-less-than-k','Array','array'),(713,'subarray-product-less-than-k','Sliding Window','sliding-window'),(714,'best-time-to-buy-and-sell-stock-with-transaction-fee','Array','array'),(714,'best-time-to-buy-and-sell-stock-with-transaction-fee','Dynamic Programming','dynamic-programming'),(714,'best-time-to-buy-and-sell-stock-with-transaction-fee','Greedy','greedy'),(715,'range-module','Design','design'),(715,'range-module','Segment Tree','segment-tree'),(715,'range-module','Ordered Set','ordered-set'),(716,'max-stack','Linked List','linked-list'),(716,'max-stack','Stack','stack'),(716,'max-stack','Design','design'),(716,'max-stack','Doubly-Linked List','doubly-linked-list'),(716,'max-stack','Ordered Set','ordered-set'),(717,'1-bit-and-2-bit-characters','Array','array'),(718,'maximum-length-of-repeated-subarray','Array','array'),(718,'maximum-length-of-repeated-subarray','Binary Search','binary-search'),(718,'maximum-length-of-repeated-subarray','Dynamic Programming','dynamic-programming'),(718,'maximum-length-of-repeated-subarray','Sliding Window','sliding-window'),(718,'maximum-length-of-repeated-subarray','Rolling Hash','rolling-hash'),(718,'maximum-length-of-repeated-subarray','Hash Function','hash-function'),(719,'find-k-th-smallest-pair-distance','Array','array'),(719,'find-k-th-smallest-pair-distance','Two Pointers','two-pointers'),(719,'find-k-th-smallest-pair-distance','Binary Search','binary-search'),(719,'find-k-th-smallest-pair-distance','Sorting','sorting'),(720,'longest-word-in-dictionary','Array','array'),(720,'longest-word-in-dictionary','Hash Table','hash-table'),(720,'longest-word-in-dictionary','String','string'),(720,'longest-word-in-dictionary','Trie','trie'),(720,'longest-word-in-dictionary','Sorting','sorting'),(721,'accounts-merge','Array','array'),(721,'accounts-merge','String','string'),(721,'accounts-merge','Depth-First Search','depth-first-search'),(721,'accounts-merge','Breadth-First Search','breadth-first-search'),(721,'accounts-merge','Union Find','union-find'),(722,'remove-comments','Array','array'),(722,'remove-comments','String','string'),(723,'candy-crush','Array','array'),(723,'candy-crush','Two Pointers','two-pointers'),(723,'candy-crush','Matrix','matrix'),(723,'candy-crush','Simulation','simulation'),(724,'find-pivot-index','Array','array'),(724,'find-pivot-index','Prefix Sum','prefix-sum'),(725,'split-linked-list-in-parts','Linked List','linked-list'),(726,'number-of-atoms','Hash Table','hash-table'),(726,'number-of-atoms','String','string'),(726,'number-of-atoms','Stack','stack'),(726,'number-of-atoms','Sorting','sorting'),(727,'minimum-window-subsequence','String','string'),(727,'minimum-window-subsequence','Dynamic Programming','dynamic-programming'),(727,'minimum-window-subsequence','Sliding Window','sliding-window'),(728,'self-dividing-numbers','Math','math'),(729,'my-calendar-i','Binary Search','binary-search'),(729,'my-calendar-i','Design','design'),(729,'my-calendar-i','Segment Tree','segment-tree'),(729,'my-calendar-i','Ordered Set','ordered-set'),(730,'count-different-palindromic-subsequences','String','string'),(730,'count-different-palindromic-subsequences','Dynamic Programming','dynamic-programming'),(731,'my-calendar-ii','Binary Search','binary-search'),(731,'my-calendar-ii','Design','design'),(731,'my-calendar-ii','Segment Tree','segment-tree'),(731,'my-calendar-ii','Ordered Set','ordered-set'),(732,'my-calendar-iii','Binary Search','binary-search'),(732,'my-calendar-iii','Design','design'),(732,'my-calendar-iii','Segment Tree','segment-tree'),(732,'my-calendar-iii','Ordered Set','ordered-set'),(733,'flood-fill','Array','array'),(733,'flood-fill','Depth-First Search','depth-first-search'),(733,'flood-fill','Breadth-First Search','breadth-first-search'),(733,'flood-fill','Matrix','matrix'),(734,'sentence-similarity','Array','array'),(734,'sentence-similarity','Hash Table','hash-table'),(734,'sentence-similarity','String','string'),(735,'asteroid-collision','Array','array'),(735,'asteroid-collision','Stack','stack'),(736,'parse-lisp-expression','Hash Table','hash-table'),(736,'parse-lisp-expression','String','string'),(736,'parse-lisp-expression','Stack','stack'),(736,'parse-lisp-expression','Recursion','recursion'),(737,'sentence-similarity-ii','Array','array'),(737,'sentence-similarity-ii','Hash Table','hash-table'),(737,'sentence-similarity-ii','String','string'),(737,'sentence-similarity-ii','Depth-First Search','depth-first-search'),(737,'sentence-similarity-ii','Breadth-First Search','breadth-first-search'),(737,'sentence-similarity-ii','Union Find','union-find'),(738,'monotone-increasing-digits','Math','math'),(738,'monotone-increasing-digits','Greedy','greedy'),(739,'daily-temperatures','Array','array'),(739,'daily-temperatures','Stack','stack'),(739,'daily-temperatures','Monotonic Stack','monotonic-stack'),(740,'delete-and-earn','Array','array'),(740,'delete-and-earn','Hash Table','hash-table'),(740,'delete-and-earn','Dynamic Programming','dynamic-programming'),(741,'cherry-pickup','Array','array'),(741,'cherry-pickup','Dynamic Programming','dynamic-programming'),(741,'cherry-pickup','Matrix','matrix'),(742,'closest-leaf-in-a-binary-tree','Tree','tree'),(742,'closest-leaf-in-a-binary-tree','Depth-First Search','depth-first-search'),(742,'closest-leaf-in-a-binary-tree','Breadth-First Search','breadth-first-search'),(742,'closest-leaf-in-a-binary-tree','Binary Tree','binary-tree'),(743,'network-delay-time','Depth-First Search','depth-first-search'),(743,'network-delay-time','Breadth-First Search','breadth-first-search'),(743,'network-delay-time','Graph','graph'),(743,'network-delay-time','Heap (Priority Queue)','heap-priority-queue'),(743,'network-delay-time','Shortest Path','shortest-path'),(744,'find-smallest-letter-greater-than-target','Array','array'),(744,'find-smallest-letter-greater-than-target','Binary Search','binary-search'),(745,'prefix-and-suffix-search','Hash Table','hash-table'),(745,'prefix-and-suffix-search','String','string'),(745,'prefix-and-suffix-search','Design','design'),(745,'prefix-and-suffix-search','Trie','trie'),(746,'min-cost-climbing-stairs','Array','array'),(746,'min-cost-climbing-stairs','Dynamic Programming','dynamic-programming'),(747,'largest-number-at-least-twice-of-others','Array','array'),(747,'largest-number-at-least-twice-of-others','Sorting','sorting'),(748,'shortest-completing-word','Array','array'),(748,'shortest-completing-word','Hash Table','hash-table'),(748,'shortest-completing-word','String','string'),(749,'contain-virus','Array','array'),(749,'contain-virus','Depth-First Search','depth-first-search'),(749,'contain-virus','Breadth-First Search','breadth-first-search'),(749,'contain-virus','Matrix','matrix'),(749,'contain-virus','Simulation','simulation'),(750,'number-of-corner-rectangles','Array','array'),(750,'number-of-corner-rectangles','Math','math'),(750,'number-of-corner-rectangles','Dynamic Programming','dynamic-programming'),(750,'number-of-corner-rectangles','Matrix','matrix'),(751,'ip-to-cidr','String','string'),(751,'ip-to-cidr','Bit Manipulation','bit-manipulation'),(752,'open-the-lock','Array','array'),(752,'open-the-lock','Hash Table','hash-table'),(752,'open-the-lock','String','string'),(752,'open-the-lock','Breadth-First Search','breadth-first-search'),(753,'cracking-the-safe','Depth-First Search','depth-first-search'),(753,'cracking-the-safe','Graph','graph'),(753,'cracking-the-safe','Eulerian Circuit','eulerian-circuit'),(754,'reach-a-number','Math','math'),(754,'reach-a-number','Binary Search','binary-search'),(755,'pour-water','Array','array'),(755,'pour-water','Simulation','simulation'),(756,'pyramid-transition-matrix','Bit Manipulation','bit-manipulation'),(756,'pyramid-transition-matrix','Depth-First Search','depth-first-search'),(756,'pyramid-transition-matrix','Breadth-First Search','breadth-first-search'),(757,'set-intersection-size-at-least-two','Array','array'),(757,'set-intersection-size-at-least-two','Greedy','greedy'),(757,'set-intersection-size-at-least-two','Sorting','sorting'),(758,'bold-words-in-string','Array','array'),(758,'bold-words-in-string','Hash Table','hash-table'),(758,'bold-words-in-string','String','string'),(758,'bold-words-in-string','Trie','trie'),(758,'bold-words-in-string','String Matching','string-matching'),(759,'employee-free-time','Array','array'),(759,'employee-free-time','Sorting','sorting'),(759,'employee-free-time','Heap (Priority Queue)','heap-priority-queue'),(760,'find-anagram-mappings','Array','array'),(760,'find-anagram-mappings','Hash Table','hash-table'),(761,'special-binary-string','String','string'),(761,'special-binary-string','Recursion','recursion'),(762,'prime-number-of-set-bits-in-binary-representation','Math','math'),(762,'prime-number-of-set-bits-in-binary-representation','Bit Manipulation','bit-manipulation'),(763,'partition-labels','Hash Table','hash-table'),(763,'partition-labels','Two Pointers','two-pointers'),(763,'partition-labels','String','string'),(763,'partition-labels','Greedy','greedy'),(764,'largest-plus-sign','Array','array'),(764,'largest-plus-sign','Dynamic Programming','dynamic-programming'),(765,'couples-holding-hands','Greedy','greedy'),(765,'couples-holding-hands','Depth-First Search','depth-first-search'),(765,'couples-holding-hands','Breadth-First Search','breadth-first-search'),(765,'couples-holding-hands','Union Find','union-find'),(765,'couples-holding-hands','Graph','graph'),(766,'toeplitz-matrix','Array','array'),(766,'toeplitz-matrix','Matrix','matrix'),(767,'reorganize-string','Hash Table','hash-table'),(767,'reorganize-string','String','string'),(767,'reorganize-string','Greedy','greedy'),(767,'reorganize-string','Sorting','sorting'),(767,'reorganize-string','Heap (Priority Queue)','heap-priority-queue'),(767,'reorganize-string','Counting','counting'),(768,'max-chunks-to-make-sorted-ii','Array','array'),(768,'max-chunks-to-make-sorted-ii','Stack','stack'),(768,'max-chunks-to-make-sorted-ii','Greedy','greedy'),(768,'max-chunks-to-make-sorted-ii','Sorting','sorting'),(768,'max-chunks-to-make-sorted-ii','Monotonic Stack','monotonic-stack'),(769,'max-chunks-to-make-sorted','Array','array'),(769,'max-chunks-to-make-sorted','Stack','stack'),(769,'max-chunks-to-make-sorted','Greedy','greedy'),(769,'max-chunks-to-make-sorted','Sorting','sorting'),(769,'max-chunks-to-make-sorted','Monotonic Stack','monotonic-stack'),(770,'basic-calculator-iv','Hash Table','hash-table'),(770,'basic-calculator-iv','Math','math'),(770,'basic-calculator-iv','String','string'),(770,'basic-calculator-iv','Stack','stack'),(770,'basic-calculator-iv','Recursion','recursion'),(771,'jewels-and-stones','Hash Table','hash-table'),(771,'jewels-and-stones','String','string'),(772,'basic-calculator-iii','Math','math'),(772,'basic-calculator-iii','String','string'),(772,'basic-calculator-iii','Stack','stack'),(772,'basic-calculator-iii','Recursion','recursion'),(773,'sliding-puzzle','Array','array'),(773,'sliding-puzzle','Breadth-First Search','breadth-first-search'),(773,'sliding-puzzle','Matrix','matrix'),(774,'minimize-max-distance-to-gas-station','Array','array'),(774,'minimize-max-distance-to-gas-station','Binary Search','binary-search'),(775,'global-and-local-inversions','Array','array'),(775,'global-and-local-inversions','Math','math'),(776,'split-bst','Tree','tree'),(776,'split-bst','Binary Search Tree','binary-search-tree'),(776,'split-bst','Recursion','recursion'),(776,'split-bst','Binary Tree','binary-tree'),(777,'swap-adjacent-in-lr-string','Two Pointers','two-pointers'),(777,'swap-adjacent-in-lr-string','String','string'),(778,'swim-in-rising-water','Array','array'),(778,'swim-in-rising-water','Binary Search','binary-search'),(778,'swim-in-rising-water','Depth-First Search','depth-first-search'),(778,'swim-in-rising-water','Breadth-First Search','breadth-first-search'),(778,'swim-in-rising-water','Union Find','union-find'),(778,'swim-in-rising-water','Heap (Priority Queue)','heap-priority-queue'),(778,'swim-in-rising-water','Matrix','matrix'),(779,'k-th-symbol-in-grammar','Math','math'),(779,'k-th-symbol-in-grammar','Bit Manipulation','bit-manipulation'),(779,'k-th-symbol-in-grammar','Recursion','recursion'),(780,'reaching-points','Math','math'),(781,'rabbits-in-forest','Array','array'),(781,'rabbits-in-forest','Hash Table','hash-table'),(781,'rabbits-in-forest','Math','math'),(781,'rabbits-in-forest','Greedy','greedy'),(782,'transform-to-chessboard','Array','array'),(782,'transform-to-chessboard','Math','math'),(782,'transform-to-chessboard','Bit Manipulation','bit-manipulation'),(782,'transform-to-chessboard','Matrix','matrix'),(783,'minimum-distance-between-bst-nodes','Tree','tree'),(783,'minimum-distance-between-bst-nodes','Depth-First Search','depth-first-search'),(783,'minimum-distance-between-bst-nodes','Breadth-First Search','breadth-first-search'),(783,'minimum-distance-between-bst-nodes','Binary Search Tree','binary-search-tree'),(783,'minimum-distance-between-bst-nodes','Binary Tree','binary-tree'),(784,'letter-case-permutation','String','string'),(784,'letter-case-permutation','Backtracking','backtracking'),(784,'letter-case-permutation','Bit Manipulation','bit-manipulation'),(785,'is-graph-bipartite','Depth-First Search','depth-first-search'),(785,'is-graph-bipartite','Breadth-First Search','breadth-first-search'),(785,'is-graph-bipartite','Union Find','union-find'),(785,'is-graph-bipartite','Graph','graph'),(786,'k-th-smallest-prime-fraction','Array','array'),(786,'k-th-smallest-prime-fraction','Binary Search','binary-search'),(786,'k-th-smallest-prime-fraction','Sorting','sorting'),(786,'k-th-smallest-prime-fraction','Heap (Priority Queue)','heap-priority-queue'),(787,'cheapest-flights-within-k-stops','Dynamic Programming','dynamic-programming'),(787,'cheapest-flights-within-k-stops','Depth-First Search','depth-first-search'),(787,'cheapest-flights-within-k-stops','Breadth-First Search','breadth-first-search'),(787,'cheapest-flights-within-k-stops','Graph','graph'),(787,'cheapest-flights-within-k-stops','Heap (Priority Queue)','heap-priority-queue'),(787,'cheapest-flights-within-k-stops','Shortest Path','shortest-path'),(788,'rotated-digits','Math','math'),(788,'rotated-digits','Dynamic Programming','dynamic-programming'),(789,'escape-the-ghosts','Array','array'),(789,'escape-the-ghosts','Math','math'),(790,'domino-and-tromino-tiling','Dynamic Programming','dynamic-programming'),(791,'custom-sort-string','Hash Table','hash-table'),(791,'custom-sort-string','String','string'),(791,'custom-sort-string','Sorting','sorting'),(792,'number-of-matching-subsequences','Hash Table','hash-table'),(792,'number-of-matching-subsequences','String','string'),(792,'number-of-matching-subsequences','Trie','trie'),(792,'number-of-matching-subsequences','Sorting','sorting'),(793,'preimage-size-of-factorial-zeroes-function','Math','math'),(793,'preimage-size-of-factorial-zeroes-function','Binary Search','binary-search'),(794,'valid-tic-tac-toe-state','Array','array'),(794,'valid-tic-tac-toe-state','String','string'),(795,'number-of-subarrays-with-bounded-maximum','Array','array'),(795,'number-of-subarrays-with-bounded-maximum','Two Pointers','two-pointers'),(796,'rotate-string','String','string'),(796,'rotate-string','String Matching','string-matching'),(797,'all-paths-from-source-to-target','Backtracking','backtracking'),(797,'all-paths-from-source-to-target','Depth-First Search','depth-first-search'),(797,'all-paths-from-source-to-target','Breadth-First Search','breadth-first-search'),(797,'all-paths-from-source-to-target','Graph','graph'),(798,'smallest-rotation-with-highest-score','Array','array'),(798,'smallest-rotation-with-highest-score','Prefix Sum','prefix-sum'),(799,'champagne-tower','Dynamic Programming','dynamic-programming'),(800,'similar-rgb-color','Math','math'),(800,'similar-rgb-color','String','string'),(800,'similar-rgb-color','Enumeration','enumeration'),(801,'minimum-swaps-to-make-sequences-increasing','Array','array'),(801,'minimum-swaps-to-make-sequences-increasing','Dynamic Programming','dynamic-programming'),(802,'find-eventual-safe-states','Depth-First Search','depth-first-search'),(802,'find-eventual-safe-states','Breadth-First Search','breadth-first-search'),(802,'find-eventual-safe-states','Graph','graph'),(802,'find-eventual-safe-states','Topological Sort','topological-sort'),(803,'bricks-falling-when-hit','Array','array'),(803,'bricks-falling-when-hit','Union Find','union-find'),(803,'bricks-falling-when-hit','Matrix','matrix'),(804,'unique-morse-code-words','Array','array'),(804,'unique-morse-code-words','Hash Table','hash-table'),(804,'unique-morse-code-words','String','string'),(805,'split-array-with-same-average','Array','array'),(805,'split-array-with-same-average','Math','math'),(805,'split-array-with-same-average','Dynamic Programming','dynamic-programming'),(805,'split-array-with-same-average','Bit Manipulation','bit-manipulation'),(805,'split-array-with-same-average','Bitmask','bitmask'),(806,'number-of-lines-to-write-string','Array','array'),(806,'number-of-lines-to-write-string','String','string'),(807,'max-increase-to-keep-city-skyline','Array','array'),(807,'max-increase-to-keep-city-skyline','Greedy','greedy'),(807,'max-increase-to-keep-city-skyline','Matrix','matrix'),(808,'soup-servings','Math','math'),(808,'soup-servings','Dynamic Programming','dynamic-programming'),(808,'soup-servings','Probability and Statistics','probability-and-statistics'),(809,'expressive-words','Array','array'),(809,'expressive-words','Two Pointers','two-pointers'),(809,'expressive-words','String','string'),(810,'chalkboard-xor-game','Array','array'),(810,'chalkboard-xor-game','Math','math'),(810,'chalkboard-xor-game','Bit Manipulation','bit-manipulation'),(810,'chalkboard-xor-game','Brainteaser','brainteaser'),(810,'chalkboard-xor-game','Game Theory','game-theory'),(811,'subdomain-visit-count','Array','array'),(811,'subdomain-visit-count','Hash Table','hash-table'),(811,'subdomain-visit-count','String','string'),(811,'subdomain-visit-count','Counting','counting'),(812,'largest-triangle-area','Array','array'),(812,'largest-triangle-area','Math','math'),(812,'largest-triangle-area','Geometry','geometry'),(813,'largest-sum-of-averages','Array','array'),(813,'largest-sum-of-averages','Dynamic Programming','dynamic-programming'),(813,'largest-sum-of-averages','Prefix Sum','prefix-sum'),(814,'binary-tree-pruning','Tree','tree'),(814,'binary-tree-pruning','Depth-First Search','depth-first-search'),(814,'binary-tree-pruning','Binary Tree','binary-tree'),(815,'bus-routes','Array','array'),(815,'bus-routes','Hash Table','hash-table'),(815,'bus-routes','Breadth-First Search','breadth-first-search'),(816,'ambiguous-coordinates','String','string'),(816,'ambiguous-coordinates','Backtracking','backtracking'),(817,'linked-list-components','Array','array'),(817,'linked-list-components','Hash Table','hash-table'),(817,'linked-list-components','Linked List','linked-list'),(818,'race-car','Dynamic Programming','dynamic-programming'),(819,'most-common-word','Hash Table','hash-table'),(819,'most-common-word','String','string'),(819,'most-common-word','Counting','counting'),(820,'short-encoding-of-words','Array','array'),(820,'short-encoding-of-words','Hash Table','hash-table'),(820,'short-encoding-of-words','String','string'),(820,'short-encoding-of-words','Trie','trie'),(821,'shortest-distance-to-a-character','Array','array'),(821,'shortest-distance-to-a-character','Two Pointers','two-pointers'),(821,'shortest-distance-to-a-character','String','string'),(822,'card-flipping-game','Array','array'),(822,'card-flipping-game','Hash Table','hash-table'),(823,'binary-trees-with-factors','Array','array'),(823,'binary-trees-with-factors','Hash Table','hash-table'),(823,'binary-trees-with-factors','Dynamic Programming','dynamic-programming'),(824,'goat-latin','String','string'),(825,'friends-of-appropriate-ages','Array','array'),(825,'friends-of-appropriate-ages','Two Pointers','two-pointers'),(825,'friends-of-appropriate-ages','Binary Search','binary-search'),(825,'friends-of-appropriate-ages','Sorting','sorting'),(826,'most-profit-assigning-work','Array','array'),(826,'most-profit-assigning-work','Two Pointers','two-pointers'),(826,'most-profit-assigning-work','Binary Search','binary-search'),(826,'most-profit-assigning-work','Greedy','greedy'),(826,'most-profit-assigning-work','Sorting','sorting'),(827,'making-a-large-island','Array','array'),(827,'making-a-large-island','Depth-First Search','depth-first-search'),(827,'making-a-large-island','Breadth-First Search','breadth-first-search'),(827,'making-a-large-island','Union Find','union-find'),(827,'making-a-large-island','Matrix','matrix'),(828,'count-unique-characters-of-all-substrings-of-a-given-string','Hash Table','hash-table'),(828,'count-unique-characters-of-all-substrings-of-a-given-string','String','string'),(828,'count-unique-characters-of-all-substrings-of-a-given-string','Dynamic Programming','dynamic-programming'),(829,'consecutive-numbers-sum','Math','math'),(829,'consecutive-numbers-sum','Enumeration','enumeration'),(830,'positions-of-large-groups','String','string'),(831,'masking-personal-information','String','string'),(832,'flipping-an-image','Array','array'),(832,'flipping-an-image','Two Pointers','two-pointers'),(832,'flipping-an-image','Matrix','matrix'),(832,'flipping-an-image','Simulation','simulation'),(833,'find-and-replace-in-string','Array','array'),(833,'find-and-replace-in-string','String','string'),(833,'find-and-replace-in-string','Sorting','sorting'),(834,'sum-of-distances-in-tree','Dynamic Programming','dynamic-programming'),(834,'sum-of-distances-in-tree','Tree','tree'),(834,'sum-of-distances-in-tree','Depth-First Search','depth-first-search'),(834,'sum-of-distances-in-tree','Graph','graph'),(835,'image-overlap','Array','array'),(835,'image-overlap','Matrix','matrix'),(836,'rectangle-overlap','Math','math'),(836,'rectangle-overlap','Geometry','geometry'),(837,'new-21-game','Math','math'),(837,'new-21-game','Dynamic Programming','dynamic-programming'),(837,'new-21-game','Sliding Window','sliding-window'),(837,'new-21-game','Probability and Statistics','probability-and-statistics'),(838,'push-dominoes','Two Pointers','two-pointers'),(838,'push-dominoes','String','string'),(838,'push-dominoes','Dynamic Programming','dynamic-programming'),(839,'similar-string-groups','Array','array'),(839,'similar-string-groups','String','string'),(839,'similar-string-groups','Depth-First Search','depth-first-search'),(839,'similar-string-groups','Breadth-First Search','breadth-first-search'),(839,'similar-string-groups','Union Find','union-find'),(840,'magic-squares-in-grid','Array','array'),(840,'magic-squares-in-grid','Math','math'),(840,'magic-squares-in-grid','Matrix','matrix'),(841,'keys-and-rooms','Depth-First Search','depth-first-search'),(841,'keys-and-rooms','Breadth-First Search','breadth-first-search'),(841,'keys-and-rooms','Graph','graph'),(842,'split-array-into-fibonacci-sequence','String','string'),(842,'split-array-into-fibonacci-sequence','Backtracking','backtracking'),(843,'guess-the-word','Array','array'),(843,'guess-the-word','Math','math'),(843,'guess-the-word','String','string'),(843,'guess-the-word','Interactive','interactive'),(843,'guess-the-word','Game Theory','game-theory'),(844,'backspace-string-compare','Two Pointers','two-pointers'),(844,'backspace-string-compare','String','string'),(844,'backspace-string-compare','Stack','stack'),(844,'backspace-string-compare','Simulation','simulation'),(845,'longest-mountain-in-array','Array','array'),(845,'longest-mountain-in-array','Two Pointers','two-pointers'),(845,'longest-mountain-in-array','Dynamic Programming','dynamic-programming'),(845,'longest-mountain-in-array','Enumeration','enumeration'),(846,'hand-of-straights','Array','array'),(846,'hand-of-straights','Hash Table','hash-table'),(846,'hand-of-straights','Greedy','greedy'),(846,'hand-of-straights','Sorting','sorting'),(847,'shortest-path-visiting-all-nodes','Dynamic Programming','dynamic-programming'),(847,'shortest-path-visiting-all-nodes','Bit Manipulation','bit-manipulation'),(847,'shortest-path-visiting-all-nodes','Breadth-First Search','breadth-first-search'),(847,'shortest-path-visiting-all-nodes','Graph','graph'),(847,'shortest-path-visiting-all-nodes','Bitmask','bitmask'),(848,'shifting-letters','Array','array'),(848,'shifting-letters','String','string'),(849,'maximize-distance-to-closest-person','Array','array'),(850,'rectangle-area-ii','Array','array'),(850,'rectangle-area-ii','Segment Tree','segment-tree'),(850,'rectangle-area-ii','Line Sweep','line-sweep'),(850,'rectangle-area-ii','Ordered Set','ordered-set'),(851,'loud-and-rich','Array','array'),(851,'loud-and-rich','Depth-First Search','depth-first-search'),(851,'loud-and-rich','Graph','graph'),(851,'loud-and-rich','Topological Sort','topological-sort'),(852,'peak-index-in-a-mountain-array','Array','array'),(852,'peak-index-in-a-mountain-array','Binary Search','binary-search'),(853,'car-fleet','Array','array'),(853,'car-fleet','Stack','stack'),(853,'car-fleet','Sorting','sorting'),(853,'car-fleet','Monotonic Stack','monotonic-stack'),(854,'k-similar-strings','String','string'),(854,'k-similar-strings','Breadth-First Search','breadth-first-search'),(855,'exam-room','Design','design'),(855,'exam-room','Heap (Priority Queue)','heap-priority-queue'),(855,'exam-room','Ordered Set','ordered-set'),(856,'score-of-parentheses','String','string'),(856,'score-of-parentheses','Stack','stack'),(857,'minimum-cost-to-hire-k-workers','Array','array'),(857,'minimum-cost-to-hire-k-workers','Greedy','greedy'),(857,'minimum-cost-to-hire-k-workers','Sorting','sorting'),(857,'minimum-cost-to-hire-k-workers','Heap (Priority Queue)','heap-priority-queue'),(858,'mirror-reflection','Math','math'),(858,'mirror-reflection','Geometry','geometry'),(858,'mirror-reflection','Number Theory','number-theory'),(859,'buddy-strings','Hash Table','hash-table'),(859,'buddy-strings','String','string'),(860,'lemonade-change','Array','array'),(860,'lemonade-change','Greedy','greedy'),(861,'score-after-flipping-matrix','Array','array'),(861,'score-after-flipping-matrix','Greedy','greedy'),(861,'score-after-flipping-matrix','Bit Manipulation','bit-manipulation'),(861,'score-after-flipping-matrix','Matrix','matrix'),(862,'shortest-subarray-with-sum-at-least-k','Array','array'),(862,'shortest-subarray-with-sum-at-least-k','Binary Search','binary-search'),(862,'shortest-subarray-with-sum-at-least-k','Queue','queue'),(862,'shortest-subarray-with-sum-at-least-k','Sliding Window','sliding-window'),(862,'shortest-subarray-with-sum-at-least-k','Heap (Priority Queue)','heap-priority-queue'),(862,'shortest-subarray-with-sum-at-least-k','Prefix Sum','prefix-sum'),(862,'shortest-subarray-with-sum-at-least-k','Monotonic Queue','monotonic-queue'),(863,'all-nodes-distance-k-in-binary-tree','Tree','tree'),(863,'all-nodes-distance-k-in-binary-tree','Depth-First Search','depth-first-search'),(863,'all-nodes-distance-k-in-binary-tree','Breadth-First Search','breadth-first-search'),(863,'all-nodes-distance-k-in-binary-tree','Binary Tree','binary-tree'),(864,'shortest-path-to-get-all-keys','Array','array'),(864,'shortest-path-to-get-all-keys','Bit Manipulation','bit-manipulation'),(864,'shortest-path-to-get-all-keys','Breadth-First Search','breadth-first-search'),(864,'shortest-path-to-get-all-keys','Matrix','matrix'),(865,'smallest-subtree-with-all-the-deepest-nodes','Hash Table','hash-table'),(865,'smallest-subtree-with-all-the-deepest-nodes','Tree','tree'),(865,'smallest-subtree-with-all-the-deepest-nodes','Depth-First Search','depth-first-search'),(865,'smallest-subtree-with-all-the-deepest-nodes','Breadth-First Search','breadth-first-search'),(865,'smallest-subtree-with-all-the-deepest-nodes','Binary Tree','binary-tree'),(866,'prime-palindrome','Math','math'),(867,'transpose-matrix','Array','array'),(867,'transpose-matrix','Matrix','matrix'),(867,'transpose-matrix','Simulation','simulation'),(868,'binary-gap','Bit Manipulation','bit-manipulation'),(869,'reordered-power-of-2','Math','math'),(869,'reordered-power-of-2','Sorting','sorting'),(869,'reordered-power-of-2','Counting','counting'),(869,'reordered-power-of-2','Enumeration','enumeration'),(870,'advantage-shuffle','Array','array'),(870,'advantage-shuffle','Two Pointers','two-pointers'),(870,'advantage-shuffle','Greedy','greedy'),(870,'advantage-shuffle','Sorting','sorting'),(871,'minimum-number-of-refueling-stops','Array','array'),(871,'minimum-number-of-refueling-stops','Dynamic Programming','dynamic-programming'),(871,'minimum-number-of-refueling-stops','Greedy','greedy'),(871,'minimum-number-of-refueling-stops','Heap (Priority Queue)','heap-priority-queue'),(872,'leaf-similar-trees','Tree','tree'),(872,'leaf-similar-trees','Depth-First Search','depth-first-search'),(872,'leaf-similar-trees','Binary Tree','binary-tree'),(873,'length-of-longest-fibonacci-subsequence','Array','array'),(873,'length-of-longest-fibonacci-subsequence','Hash Table','hash-table'),(873,'length-of-longest-fibonacci-subsequence','Dynamic Programming','dynamic-programming'),(874,'walking-robot-simulation','Array','array'),(874,'walking-robot-simulation','Simulation','simulation'),(875,'koko-eating-bananas','Array','array'),(875,'koko-eating-bananas','Binary Search','binary-search'),(876,'middle-of-the-linked-list','Linked List','linked-list'),(876,'middle-of-the-linked-list','Two Pointers','two-pointers'),(877,'stone-game','Array','array'),(877,'stone-game','Math','math'),(877,'stone-game','Dynamic Programming','dynamic-programming'),(877,'stone-game','Game Theory','game-theory'),(878,'nth-magical-number','Math','math'),(878,'nth-magical-number','Binary Search','binary-search'),(879,'profitable-schemes','Array','array'),(879,'profitable-schemes','Dynamic Programming','dynamic-programming'),(880,'decoded-string-at-index','String','string'),(880,'decoded-string-at-index','Stack','stack'),(881,'boats-to-save-people','Array','array'),(881,'boats-to-save-people','Two Pointers','two-pointers'),(881,'boats-to-save-people','Greedy','greedy'),(881,'boats-to-save-people','Sorting','sorting'),(882,'reachable-nodes-in-subdivided-graph','Graph','graph'),(882,'reachable-nodes-in-subdivided-graph','Heap (Priority Queue)','heap-priority-queue'),(882,'reachable-nodes-in-subdivided-graph','Shortest Path','shortest-path'),(883,'projection-area-of-3d-shapes','Array','array'),(883,'projection-area-of-3d-shapes','Math','math'),(883,'projection-area-of-3d-shapes','Geometry','geometry'),(883,'projection-area-of-3d-shapes','Matrix','matrix'),(884,'uncommon-words-from-two-sentences','Hash Table','hash-table'),(884,'uncommon-words-from-two-sentences','String','string'),(885,'spiral-matrix-iii','Array','array'),(885,'spiral-matrix-iii','Matrix','matrix'),(885,'spiral-matrix-iii','Simulation','simulation'),(886,'possible-bipartition','Depth-First Search','depth-first-search'),(886,'possible-bipartition','Breadth-First Search','breadth-first-search'),(886,'possible-bipartition','Union Find','union-find'),(886,'possible-bipartition','Graph','graph'),(887,'super-egg-drop','Math','math'),(887,'super-egg-drop','Binary Search','binary-search'),(887,'super-egg-drop','Dynamic Programming','dynamic-programming'),(888,'fair-candy-swap','Array','array'),(888,'fair-candy-swap','Hash Table','hash-table'),(888,'fair-candy-swap','Binary Search','binary-search'),(888,'fair-candy-swap','Sorting','sorting'),(889,'construct-binary-tree-from-preorder-and-postorder-traversal','Array','array'),(889,'construct-binary-tree-from-preorder-and-postorder-traversal','Hash Table','hash-table'),(889,'construct-binary-tree-from-preorder-and-postorder-traversal','Divide and Conquer','divide-and-conquer'),(889,'construct-binary-tree-from-preorder-and-postorder-traversal','Tree','tree'),(889,'construct-binary-tree-from-preorder-and-postorder-traversal','Binary Tree','binary-tree'),(890,'find-and-replace-pattern','Array','array'),(890,'find-and-replace-pattern','Hash Table','hash-table'),(890,'find-and-replace-pattern','String','string'),(891,'sum-of-subsequence-widths','Array','array'),(891,'sum-of-subsequence-widths','Math','math'),(891,'sum-of-subsequence-widths','Sorting','sorting'),(892,'surface-area-of-3d-shapes','Array','array'),(892,'surface-area-of-3d-shapes','Math','math'),(892,'surface-area-of-3d-shapes','Geometry','geometry'),(892,'surface-area-of-3d-shapes','Matrix','matrix'),(893,'groups-of-special-equivalent-strings','Array','array'),(893,'groups-of-special-equivalent-strings','Hash Table','hash-table'),(893,'groups-of-special-equivalent-strings','String','string'),(894,'all-possible-full-binary-trees','Dynamic Programming','dynamic-programming'),(894,'all-possible-full-binary-trees','Tree','tree'),(894,'all-possible-full-binary-trees','Recursion','recursion'),(894,'all-possible-full-binary-trees','Memoization','memoization'),(894,'all-possible-full-binary-trees','Binary Tree','binary-tree'),(895,'maximum-frequency-stack','Hash Table','hash-table'),(895,'maximum-frequency-stack','Stack','stack'),(895,'maximum-frequency-stack','Design','design'),(895,'maximum-frequency-stack','Ordered Set','ordered-set'),(896,'monotonic-array','Array','array'),(897,'increasing-order-search-tree','Stack','stack'),(897,'increasing-order-search-tree','Tree','tree'),(897,'increasing-order-search-tree','Depth-First Search','depth-first-search'),(897,'increasing-order-search-tree','Binary Search Tree','binary-search-tree'),(897,'increasing-order-search-tree','Binary Tree','binary-tree'),(898,'bitwise-ors-of-subarrays','Array','array'),(898,'bitwise-ors-of-subarrays','Dynamic Programming','dynamic-programming'),(898,'bitwise-ors-of-subarrays','Bit Manipulation','bit-manipulation'),(899,'orderly-queue','Math','math'),(899,'orderly-queue','String','string'),(899,'orderly-queue','Sorting','sorting'),(900,'rle-iterator','Array','array'),(900,'rle-iterator','Design','design'),(900,'rle-iterator','Counting','counting'),(900,'rle-iterator','Iterator','iterator'),(901,'online-stock-span','Stack','stack'),(901,'online-stock-span','Design','design'),(901,'online-stock-span','Monotonic Stack','monotonic-stack'),(901,'online-stock-span','Data Stream','data-stream'),(902,'numbers-at-most-n-given-digit-set','Array','array'),(902,'numbers-at-most-n-given-digit-set','Math','math'),(902,'numbers-at-most-n-given-digit-set','String','string'),(902,'numbers-at-most-n-given-digit-set','Binary Search','binary-search'),(902,'numbers-at-most-n-given-digit-set','Dynamic Programming','dynamic-programming'),(903,'valid-permutations-for-di-sequence','Dynamic Programming','dynamic-programming'),(904,'fruit-into-baskets','Array','array'),(904,'fruit-into-baskets','Hash Table','hash-table'),(904,'fruit-into-baskets','Sliding Window','sliding-window'),(905,'sort-array-by-parity','Array','array'),(905,'sort-array-by-parity','Two Pointers','two-pointers'),(905,'sort-array-by-parity','Sorting','sorting'),(906,'super-palindromes','Math','math'),(906,'super-palindromes','Enumeration','enumeration'),(907,'sum-of-subarray-minimums','Array','array'),(907,'sum-of-subarray-minimums','Dynamic Programming','dynamic-programming'),(907,'sum-of-subarray-minimums','Stack','stack'),(907,'sum-of-subarray-minimums','Monotonic Stack','monotonic-stack'),(908,'smallest-range-i','Array','array'),(908,'smallest-range-i','Math','math'),(909,'snakes-and-ladders','Array','array'),(909,'snakes-and-ladders','Breadth-First Search','breadth-first-search'),(909,'snakes-and-ladders','Matrix','matrix'),(910,'smallest-range-ii','Array','array'),(910,'smallest-range-ii','Math','math'),(910,'smallest-range-ii','Greedy','greedy'),(910,'smallest-range-ii','Sorting','sorting'),(911,'online-election','Array','array'),(911,'online-election','Hash Table','hash-table'),(911,'online-election','Binary Search','binary-search'),(911,'online-election','Design','design'),(912,'sort-an-array','Array','array'),(912,'sort-an-array','Divide and Conquer','divide-and-conquer'),(912,'sort-an-array','Sorting','sorting'),(912,'sort-an-array','Heap (Priority Queue)','heap-priority-queue'),(912,'sort-an-array','Merge Sort','merge-sort'),(912,'sort-an-array','Bucket Sort','bucket-sort'),(912,'sort-an-array','Radix Sort','radix-sort'),(912,'sort-an-array','Counting Sort','counting-sort'),(913,'cat-and-mouse','Math','math'),(913,'cat-and-mouse','Dynamic Programming','dynamic-programming'),(913,'cat-and-mouse','Graph','graph'),(913,'cat-and-mouse','Topological Sort','topological-sort'),(913,'cat-and-mouse','Memoization','memoization'),(913,'cat-and-mouse','Game Theory','game-theory'),(914,'x-of-a-kind-in-a-deck-of-cards','Array','array'),(914,'x-of-a-kind-in-a-deck-of-cards','Hash Table','hash-table'),(914,'x-of-a-kind-in-a-deck-of-cards','Math','math'),(914,'x-of-a-kind-in-a-deck-of-cards','Counting','counting'),(914,'x-of-a-kind-in-a-deck-of-cards','Number Theory','number-theory'),(915,'partition-array-into-disjoint-intervals','Array','array'),(916,'word-subsets','Array','array'),(916,'word-subsets','Hash Table','hash-table'),(916,'word-subsets','String','string'),(917,'reverse-only-letters','Two Pointers','two-pointers'),(917,'reverse-only-letters','String','string'),(918,'maximum-sum-circular-subarray','Array','array'),(918,'maximum-sum-circular-subarray','Divide and Conquer','divide-and-conquer'),(918,'maximum-sum-circular-subarray','Dynamic Programming','dynamic-programming'),(918,'maximum-sum-circular-subarray','Queue','queue'),(918,'maximum-sum-circular-subarray','Monotonic Queue','monotonic-queue'),(919,'complete-binary-tree-inserter','Tree','tree'),(919,'complete-binary-tree-inserter','Breadth-First Search','breadth-first-search'),(919,'complete-binary-tree-inserter','Design','design'),(919,'complete-binary-tree-inserter','Binary Tree','binary-tree'),(920,'number-of-music-playlists','Math','math'),(920,'number-of-music-playlists','Dynamic Programming','dynamic-programming'),(920,'number-of-music-playlists','Combinatorics','combinatorics'),(921,'minimum-add-to-make-parentheses-valid','String','string'),(921,'minimum-add-to-make-parentheses-valid','Stack','stack'),(921,'minimum-add-to-make-parentheses-valid','Greedy','greedy'),(922,'sort-array-by-parity-ii','Array','array'),(922,'sort-array-by-parity-ii','Two Pointers','two-pointers'),(922,'sort-array-by-parity-ii','Sorting','sorting'),(923,'3sum-with-multiplicity','Array','array'),(923,'3sum-with-multiplicity','Hash Table','hash-table'),(923,'3sum-with-multiplicity','Two Pointers','two-pointers'),(923,'3sum-with-multiplicity','Sorting','sorting'),(923,'3sum-with-multiplicity','Counting','counting'),(924,'minimize-malware-spread','Array','array'),(924,'minimize-malware-spread','Depth-First Search','depth-first-search'),(924,'minimize-malware-spread','Breadth-First Search','breadth-first-search'),(924,'minimize-malware-spread','Union Find','union-find'),(924,'minimize-malware-spread','Matrix','matrix'),(925,'long-pressed-name','Two Pointers','two-pointers'),(925,'long-pressed-name','String','string'),(926,'flip-string-to-monotone-increasing','String','string'),(926,'flip-string-to-monotone-increasing','Dynamic Programming','dynamic-programming'),(927,'three-equal-parts','Array','array'),(927,'three-equal-parts','Math','math'),(928,'minimize-malware-spread-ii','Array','array'),(928,'minimize-malware-spread-ii','Depth-First Search','depth-first-search'),(928,'minimize-malware-spread-ii','Breadth-First Search','breadth-first-search'),(928,'minimize-malware-spread-ii','Union Find','union-find'),(928,'minimize-malware-spread-ii','Matrix','matrix'),(929,'unique-email-addresses','Array','array'),(929,'unique-email-addresses','Hash Table','hash-table'),(929,'unique-email-addresses','String','string'),(930,'binary-subarrays-with-sum','Array','array'),(930,'binary-subarrays-with-sum','Hash Table','hash-table'),(930,'binary-subarrays-with-sum','Sliding Window','sliding-window'),(930,'binary-subarrays-with-sum','Prefix Sum','prefix-sum'),(931,'minimum-falling-path-sum','Array','array'),(931,'minimum-falling-path-sum','Dynamic Programming','dynamic-programming'),(931,'minimum-falling-path-sum','Matrix','matrix'),(932,'beautiful-array','Array','array'),(932,'beautiful-array','Math','math'),(932,'beautiful-array','Divide and Conquer','divide-and-conquer'),(933,'number-of-recent-calls','Design','design'),(933,'number-of-recent-calls','Queue','queue'),(933,'number-of-recent-calls','Data Stream','data-stream'),(934,'shortest-bridge','Array','array'),(934,'shortest-bridge','Depth-First Search','depth-first-search'),(934,'shortest-bridge','Breadth-First Search','breadth-first-search'),(934,'shortest-bridge','Matrix','matrix'),(935,'knight-dialer','Dynamic Programming','dynamic-programming'),(936,'stamping-the-sequence','String','string'),(936,'stamping-the-sequence','Stack','stack'),(936,'stamping-the-sequence','Greedy','greedy'),(936,'stamping-the-sequence','Queue','queue'),(937,'reorder-data-in-log-files','Array','array'),(937,'reorder-data-in-log-files','String','string'),(937,'reorder-data-in-log-files','Sorting','sorting'),(938,'range-sum-of-bst','Tree','tree'),(938,'range-sum-of-bst','Depth-First Search','depth-first-search'),(938,'range-sum-of-bst','Binary Search Tree','binary-search-tree'),(938,'range-sum-of-bst','Binary Tree','binary-tree'),(939,'minimum-area-rectangle','Array','array'),(939,'minimum-area-rectangle','Hash Table','hash-table'),(939,'minimum-area-rectangle','Math','math'),(939,'minimum-area-rectangle','Geometry','geometry'),(939,'minimum-area-rectangle','Sorting','sorting'),(940,'distinct-subsequences-ii','String','string'),(940,'distinct-subsequences-ii','Dynamic Programming','dynamic-programming'),(941,'valid-mountain-array','Array','array'),(942,'di-string-match','Array','array'),(942,'di-string-match','Two Pointers','two-pointers'),(942,'di-string-match','String','string'),(942,'di-string-match','Greedy','greedy'),(943,'find-the-shortest-superstring','Array','array'),(943,'find-the-shortest-superstring','String','string'),(943,'find-the-shortest-superstring','Dynamic Programming','dynamic-programming'),(943,'find-the-shortest-superstring','Bit Manipulation','bit-manipulation'),(943,'find-the-shortest-superstring','Bitmask','bitmask'),(944,'delete-columns-to-make-sorted','Array','array'),(944,'delete-columns-to-make-sorted','String','string'),(945,'minimum-increment-to-make-array-unique','Array','array'),(945,'minimum-increment-to-make-array-unique','Greedy','greedy'),(945,'minimum-increment-to-make-array-unique','Sorting','sorting'),(945,'minimum-increment-to-make-array-unique','Counting','counting'),(946,'validate-stack-sequences','Array','array'),(946,'validate-stack-sequences','Stack','stack'),(946,'validate-stack-sequences','Simulation','simulation'),(947,'most-stones-removed-with-same-row-or-column','Depth-First Search','depth-first-search'),(947,'most-stones-removed-with-same-row-or-column','Union Find','union-find'),(947,'most-stones-removed-with-same-row-or-column','Graph','graph'),(948,'bag-of-tokens','Array','array'),(948,'bag-of-tokens','Two Pointers','two-pointers'),(948,'bag-of-tokens','Greedy','greedy'),(948,'bag-of-tokens','Sorting','sorting'),(949,'largest-time-for-given-digits','String','string'),(949,'largest-time-for-given-digits','Enumeration','enumeration'),(950,'reveal-cards-in-increasing-order','Array','array'),(950,'reveal-cards-in-increasing-order','Queue','queue'),(950,'reveal-cards-in-increasing-order','Sorting','sorting'),(950,'reveal-cards-in-increasing-order','Simulation','simulation'),(951,'flip-equivalent-binary-trees','Tree','tree'),(951,'flip-equivalent-binary-trees','Depth-First Search','depth-first-search'),(951,'flip-equivalent-binary-trees','Binary Tree','binary-tree'),(952,'largest-component-size-by-common-factor','Array','array'),(952,'largest-component-size-by-common-factor','Math','math'),(952,'largest-component-size-by-common-factor','Union Find','union-find'),(953,'verifying-an-alien-dictionary','Array','array'),(953,'verifying-an-alien-dictionary','Hash Table','hash-table'),(953,'verifying-an-alien-dictionary','String','string'),(954,'array-of-doubled-pairs','Array','array'),(954,'array-of-doubled-pairs','Hash Table','hash-table'),(954,'array-of-doubled-pairs','Greedy','greedy'),(954,'array-of-doubled-pairs','Sorting','sorting'),(955,'delete-columns-to-make-sorted-ii','Array','array'),(955,'delete-columns-to-make-sorted-ii','String','string'),(955,'delete-columns-to-make-sorted-ii','Greedy','greedy'),(956,'tallest-billboard','Array','array'),(956,'tallest-billboard','Dynamic Programming','dynamic-programming'),(957,'prison-cells-after-n-days','Array','array'),(957,'prison-cells-after-n-days','Hash Table','hash-table'),(957,'prison-cells-after-n-days','Math','math'),(957,'prison-cells-after-n-days','Bit Manipulation','bit-manipulation'),(958,'check-completeness-of-a-binary-tree','Tree','tree'),(958,'check-completeness-of-a-binary-tree','Breadth-First Search','breadth-first-search'),(958,'check-completeness-of-a-binary-tree','Binary Tree','binary-tree'),(959,'regions-cut-by-slashes','Depth-First Search','depth-first-search'),(959,'regions-cut-by-slashes','Breadth-First Search','breadth-first-search'),(959,'regions-cut-by-slashes','Union Find','union-find'),(959,'regions-cut-by-slashes','Graph','graph'),(960,'delete-columns-to-make-sorted-iii','Array','array'),(960,'delete-columns-to-make-sorted-iii','String','string'),(960,'delete-columns-to-make-sorted-iii','Dynamic Programming','dynamic-programming'),(961,'n-repeated-element-in-size-2n-array','Array','array'),(961,'n-repeated-element-in-size-2n-array','Hash Table','hash-table'),(962,'maximum-width-ramp','Array','array'),(962,'maximum-width-ramp','Stack','stack'),(962,'maximum-width-ramp','Monotonic Stack','monotonic-stack'),(963,'minimum-area-rectangle-ii','Array','array'),(963,'minimum-area-rectangle-ii','Math','math'),(963,'minimum-area-rectangle-ii','Geometry','geometry'),(964,'least-operators-to-express-number','Math','math'),(964,'least-operators-to-express-number','Dynamic Programming','dynamic-programming'),(965,'univalued-binary-tree','Tree','tree'),(965,'univalued-binary-tree','Depth-First Search','depth-first-search'),(965,'univalued-binary-tree','Breadth-First Search','breadth-first-search'),(965,'univalued-binary-tree','Binary Tree','binary-tree'),(966,'vowel-spellchecker','Array','array'),(966,'vowel-spellchecker','Hash Table','hash-table'),(966,'vowel-spellchecker','String','string'),(967,'numbers-with-same-consecutive-differences','Backtracking','backtracking'),(967,'numbers-with-same-consecutive-differences','Breadth-First Search','breadth-first-search'),(968,'binary-tree-cameras','Dynamic Programming','dynamic-programming'),(968,'binary-tree-cameras','Tree','tree'),(968,'binary-tree-cameras','Depth-First Search','depth-first-search'),(968,'binary-tree-cameras','Binary Tree','binary-tree'),(969,'pancake-sorting','Array','array'),(969,'pancake-sorting','Two Pointers','two-pointers'),(969,'pancake-sorting','Greedy','greedy'),(969,'pancake-sorting','Sorting','sorting'),(970,'powerful-integers','Hash Table','hash-table'),(970,'powerful-integers','Math','math'),(971,'flip-binary-tree-to-match-preorder-traversal','Tree','tree'),(971,'flip-binary-tree-to-match-preorder-traversal','Depth-First Search','depth-first-search'),(971,'flip-binary-tree-to-match-preorder-traversal','Binary Tree','binary-tree'),(972,'equal-rational-numbers','Math','math'),(972,'equal-rational-numbers','String','string'),(973,'k-closest-points-to-origin','Array','array'),(973,'k-closest-points-to-origin','Math','math'),(973,'k-closest-points-to-origin','Divide and Conquer','divide-and-conquer'),(973,'k-closest-points-to-origin','Geometry','geometry'),(973,'k-closest-points-to-origin','Sorting','sorting'),(973,'k-closest-points-to-origin','Heap (Priority Queue)','heap-priority-queue'),(973,'k-closest-points-to-origin','Quickselect','quickselect'),(974,'subarray-sums-divisible-by-k','Array','array'),(974,'subarray-sums-divisible-by-k','Hash Table','hash-table'),(974,'subarray-sums-divisible-by-k','Prefix Sum','prefix-sum'),(975,'odd-even-jump','Array','array'),(975,'odd-even-jump','Dynamic Programming','dynamic-programming'),(975,'odd-even-jump','Stack','stack'),(975,'odd-even-jump','Monotonic Stack','monotonic-stack'),(975,'odd-even-jump','Ordered Set','ordered-set'),(976,'largest-perimeter-triangle','Array','array'),(976,'largest-perimeter-triangle','Math','math'),(976,'largest-perimeter-triangle','Greedy','greedy'),(976,'largest-perimeter-triangle','Sorting','sorting'),(977,'squares-of-a-sorted-array','Array','array'),(977,'squares-of-a-sorted-array','Two Pointers','two-pointers'),(977,'squares-of-a-sorted-array','Sorting','sorting'),(978,'longest-turbulent-subarray','Array','array'),(978,'longest-turbulent-subarray','Dynamic Programming','dynamic-programming'),(978,'longest-turbulent-subarray','Sliding Window','sliding-window'),(979,'distribute-coins-in-binary-tree','Tree','tree'),(979,'distribute-coins-in-binary-tree','Depth-First Search','depth-first-search'),(979,'distribute-coins-in-binary-tree','Binary Tree','binary-tree'),(980,'unique-paths-iii','Array','array'),(980,'unique-paths-iii','Backtracking','backtracking'),(980,'unique-paths-iii','Bit Manipulation','bit-manipulation'),(980,'unique-paths-iii','Matrix','matrix'),(981,'time-based-key-value-store','Hash Table','hash-table'),(981,'time-based-key-value-store','String','string'),(981,'time-based-key-value-store','Binary Search','binary-search'),(981,'time-based-key-value-store','Design','design'),(982,'triples-with-bitwise-and-equal-to-zero','Array','array'),(982,'triples-with-bitwise-and-equal-to-zero','Hash Table','hash-table'),(982,'triples-with-bitwise-and-equal-to-zero','Bit Manipulation','bit-manipulation'),(983,'minimum-cost-for-tickets','Array','array'),(983,'minimum-cost-for-tickets','Dynamic Programming','dynamic-programming'),(984,'string-without-aaa-or-bbb','String','string'),(984,'string-without-aaa-or-bbb','Greedy','greedy'),(985,'sum-of-even-numbers-after-queries','Array','array'),(985,'sum-of-even-numbers-after-queries','Simulation','simulation'),(986,'interval-list-intersections','Array','array'),(986,'interval-list-intersections','Two Pointers','two-pointers'),(987,'vertical-order-traversal-of-a-binary-tree','Hash Table','hash-table'),(987,'vertical-order-traversal-of-a-binary-tree','Tree','tree'),(987,'vertical-order-traversal-of-a-binary-tree','Depth-First Search','depth-first-search'),(987,'vertical-order-traversal-of-a-binary-tree','Breadth-First Search','breadth-first-search'),(987,'vertical-order-traversal-of-a-binary-tree','Binary Tree','binary-tree'),(988,'smallest-string-starting-from-leaf','String','string'),(988,'smallest-string-starting-from-leaf','Tree','tree'),(988,'smallest-string-starting-from-leaf','Depth-First Search','depth-first-search'),(988,'smallest-string-starting-from-leaf','Binary Tree','binary-tree'),(989,'add-to-array-form-of-integer','Array','array'),(989,'add-to-array-form-of-integer','Math','math'),(990,'satisfiability-of-equality-equations','Array','array'),(990,'satisfiability-of-equality-equations','String','string'),(990,'satisfiability-of-equality-equations','Union Find','union-find'),(990,'satisfiability-of-equality-equations','Graph','graph'),(991,'broken-calculator','Math','math'),(991,'broken-calculator','Greedy','greedy'),(992,'subarrays-with-k-different-integers','Array','array'),(992,'subarrays-with-k-different-integers','Hash Table','hash-table'),(992,'subarrays-with-k-different-integers','Sliding Window','sliding-window'),(992,'subarrays-with-k-different-integers','Counting','counting'),(993,'cousins-in-binary-tree','Tree','tree'),(993,'cousins-in-binary-tree','Depth-First Search','depth-first-search'),(993,'cousins-in-binary-tree','Breadth-First Search','breadth-first-search'),(993,'cousins-in-binary-tree','Binary Tree','binary-tree'),(994,'rotting-oranges','Array','array'),(994,'rotting-oranges','Breadth-First Search','breadth-first-search'),(994,'rotting-oranges','Matrix','matrix'),(995,'minimum-number-of-k-consecutive-bit-flips','Array','array'),(995,'minimum-number-of-k-consecutive-bit-flips','Bit Manipulation','bit-manipulation'),(995,'minimum-number-of-k-consecutive-bit-flips','Queue','queue'),(995,'minimum-number-of-k-consecutive-bit-flips','Sliding Window','sliding-window'),(995,'minimum-number-of-k-consecutive-bit-flips','Prefix Sum','prefix-sum'),(996,'number-of-squareful-arrays','Array','array'),(996,'number-of-squareful-arrays','Math','math'),(996,'number-of-squareful-arrays','Dynamic Programming','dynamic-programming'),(996,'number-of-squareful-arrays','Backtracking','backtracking'),(996,'number-of-squareful-arrays','Bit Manipulation','bit-manipulation'),(996,'number-of-squareful-arrays','Bitmask','bitmask'),(997,'find-the-town-judge','Array','array'),(997,'find-the-town-judge','Hash Table','hash-table'),(997,'find-the-town-judge','Graph','graph'),(998,'maximum-binary-tree-ii','Tree','tree'),(998,'maximum-binary-tree-ii','Binary Tree','binary-tree'),(999,'available-captures-for-rook','Array','array'),(999,'available-captures-for-rook','Matrix','matrix'),(999,'available-captures-for-rook','Simulation','simulation'),(1000,'minimum-cost-to-merge-stones','Array','array'),(1000,'minimum-cost-to-merge-stones','Dynamic Programming','dynamic-programming'),(1001,'grid-illumination','Array','array'),(1001,'grid-illumination','Hash Table','hash-table'),(1002,'find-common-characters','Array','array'),(1002,'find-common-characters','Hash Table','hash-table'),(1002,'find-common-characters','String','string'),(1003,'check-if-word-is-valid-after-substitutions','String','string'),(1003,'check-if-word-is-valid-after-substitutions','Stack','stack'),(1004,'max-consecutive-ones-iii','Array','array'),(1004,'max-consecutive-ones-iii','Binary Search','binary-search'),(1004,'max-consecutive-ones-iii','Sliding Window','sliding-window'),(1004,'max-consecutive-ones-iii','Prefix Sum','prefix-sum'),(1005,'maximize-sum-of-array-after-k-negations','Array','array'),(1005,'maximize-sum-of-array-after-k-negations','Greedy','greedy'),(1005,'maximize-sum-of-array-after-k-negations','Sorting','sorting'),(1006,'clumsy-factorial','Math','math'),(1006,'clumsy-factorial','Stack','stack'),(1006,'clumsy-factorial','Simulation','simulation'),(1007,'minimum-domino-rotations-for-equal-row','Array','array'),(1007,'minimum-domino-rotations-for-equal-row','Greedy','greedy'),(1008,'construct-binary-search-tree-from-preorder-traversal','Array','array'),(1008,'construct-binary-search-tree-from-preorder-traversal','Stack','stack'),(1008,'construct-binary-search-tree-from-preorder-traversal','Tree','tree'),(1008,'construct-binary-search-tree-from-preorder-traversal','Binary Search Tree','binary-search-tree'),(1008,'construct-binary-search-tree-from-preorder-traversal','Monotonic Stack','monotonic-stack'),(1008,'construct-binary-search-tree-from-preorder-traversal','Binary Tree','binary-tree'),(1009,'complement-of-base-10-integer','Bit Manipulation','bit-manipulation'),(1010,'pairs-of-songs-with-total-durations-divisible-by-60','Array','array'),(1010,'pairs-of-songs-with-total-durations-divisible-by-60','Hash Table','hash-table'),(1010,'pairs-of-songs-with-total-durations-divisible-by-60','Counting','counting'),(1011,'capacity-to-ship-packages-within-d-days','Array','array'),(1011,'capacity-to-ship-packages-within-d-days','Binary Search','binary-search'),(1012,'numbers-with-repeated-digits','Math','math'),(1012,'numbers-with-repeated-digits','Dynamic Programming','dynamic-programming'),(1013,'partition-array-into-three-parts-with-equal-sum','Array','array'),(1013,'partition-array-into-three-parts-with-equal-sum','Greedy','greedy'),(1014,'best-sightseeing-pair','Array','array'),(1014,'best-sightseeing-pair','Dynamic Programming','dynamic-programming'),(1015,'smallest-integer-divisible-by-k','Hash Table','hash-table'),(1015,'smallest-integer-divisible-by-k','Math','math'),(1016,'binary-string-with-substrings-representing-1-to-n','String','string'),(1017,'convert-to-base-2','Math','math'),(1018,'binary-prefix-divisible-by-5','Array','array'),(1019,'next-greater-node-in-linked-list','Array','array'),(1019,'next-greater-node-in-linked-list','Linked List','linked-list'),(1019,'next-greater-node-in-linked-list','Stack','stack'),(1019,'next-greater-node-in-linked-list','Monotonic Stack','monotonic-stack'),(1020,'number-of-enclaves','Array','array'),(1020,'number-of-enclaves','Depth-First Search','depth-first-search'),(1020,'number-of-enclaves','Breadth-First Search','breadth-first-search'),(1020,'number-of-enclaves','Union Find','union-find'),(1020,'number-of-enclaves','Matrix','matrix'),(1021,'remove-outermost-parentheses','String','string'),(1021,'remove-outermost-parentheses','Stack','stack'),(1022,'sum-of-root-to-leaf-binary-numbers','Tree','tree'),(1022,'sum-of-root-to-leaf-binary-numbers','Depth-First Search','depth-first-search'),(1022,'sum-of-root-to-leaf-binary-numbers','Binary Tree','binary-tree'),(1023,'camelcase-matching','Two Pointers','two-pointers'),(1023,'camelcase-matching','String','string'),(1023,'camelcase-matching','Trie','trie'),(1023,'camelcase-matching','String Matching','string-matching'),(1024,'video-stitching','Array','array'),(1024,'video-stitching','Dynamic Programming','dynamic-programming'),(1024,'video-stitching','Greedy','greedy'),(1025,'divisor-game','Math','math'),(1025,'divisor-game','Dynamic Programming','dynamic-programming'),(1025,'divisor-game','Brainteaser','brainteaser'),(1025,'divisor-game','Game Theory','game-theory'),(1026,'maximum-difference-between-node-and-ancestor','Tree','tree'),(1026,'maximum-difference-between-node-and-ancestor','Depth-First Search','depth-first-search'),(1026,'maximum-difference-between-node-and-ancestor','Binary Tree','binary-tree'),(1027,'longest-arithmetic-subsequence','Array','array'),(1027,'longest-arithmetic-subsequence','Hash Table','hash-table'),(1027,'longest-arithmetic-subsequence','Binary Search','binary-search'),(1027,'longest-arithmetic-subsequence','Dynamic Programming','dynamic-programming'),(1028,'recover-a-tree-from-preorder-traversal','String','string'),(1028,'recover-a-tree-from-preorder-traversal','Tree','tree'),(1028,'recover-a-tree-from-preorder-traversal','Depth-First Search','depth-first-search'),(1028,'recover-a-tree-from-preorder-traversal','Binary Tree','binary-tree'),(1029,'two-city-scheduling','Array','array'),(1029,'two-city-scheduling','Greedy','greedy'),(1029,'two-city-scheduling','Sorting','sorting'),(1030,'matrix-cells-in-distance-order','Array','array'),(1030,'matrix-cells-in-distance-order','Math','math'),(1030,'matrix-cells-in-distance-order','Geometry','geometry'),(1030,'matrix-cells-in-distance-order','Sorting','sorting'),(1030,'matrix-cells-in-distance-order','Matrix','matrix'),(1031,'maximum-sum-of-two-non-overlapping-subarrays','Array','array'),(1031,'maximum-sum-of-two-non-overlapping-subarrays','Dynamic Programming','dynamic-programming'),(1031,'maximum-sum-of-two-non-overlapping-subarrays','Sliding Window','sliding-window'),(1032,'stream-of-characters','Array','array'),(1032,'stream-of-characters','String','string'),(1032,'stream-of-characters','Design','design'),(1032,'stream-of-characters','Trie','trie'),(1032,'stream-of-characters','Data Stream','data-stream'),(1033,'moving-stones-until-consecutive','Math','math'),(1033,'moving-stones-until-consecutive','Brainteaser','brainteaser'),(1034,'coloring-a-border','Array','array'),(1034,'coloring-a-border','Depth-First Search','depth-first-search'),(1034,'coloring-a-border','Breadth-First Search','breadth-first-search'),(1034,'coloring-a-border','Matrix','matrix'),(1035,'uncrossed-lines','Array','array'),(1035,'uncrossed-lines','Dynamic Programming','dynamic-programming'),(1036,'escape-a-large-maze','Array','array'),(1036,'escape-a-large-maze','Hash Table','hash-table'),(1036,'escape-a-large-maze','Depth-First Search','depth-first-search'),(1036,'escape-a-large-maze','Breadth-First Search','breadth-first-search'),(1037,'valid-boomerang','Array','array'),(1037,'valid-boomerang','Math','math'),(1037,'valid-boomerang','Geometry','geometry'),(1038,'binary-search-tree-to-greater-sum-tree','Tree','tree'),(1038,'binary-search-tree-to-greater-sum-tree','Depth-First Search','depth-first-search'),(1038,'binary-search-tree-to-greater-sum-tree','Binary Search Tree','binary-search-tree'),(1038,'binary-search-tree-to-greater-sum-tree','Binary Tree','binary-tree'),(1039,'minimum-score-triangulation-of-polygon','Array','array'),(1039,'minimum-score-triangulation-of-polygon','Dynamic Programming','dynamic-programming'),(1040,'moving-stones-until-consecutive-ii','Array','array'),(1040,'moving-stones-until-consecutive-ii','Math','math'),(1040,'moving-stones-until-consecutive-ii','Two Pointers','two-pointers'),(1040,'moving-stones-until-consecutive-ii','Sorting','sorting'),(1041,'robot-bounded-in-circle','Math','math'),(1041,'robot-bounded-in-circle','String','string'),(1041,'robot-bounded-in-circle','Simulation','simulation'),(1042,'flower-planting-with-no-adjacent','Depth-First Search','depth-first-search'),(1042,'flower-planting-with-no-adjacent','Breadth-First Search','breadth-first-search'),(1042,'flower-planting-with-no-adjacent','Graph','graph'),(1043,'partition-array-for-maximum-sum','Array','array'),(1043,'partition-array-for-maximum-sum','Dynamic Programming','dynamic-programming'),(1044,'longest-duplicate-substring','String','string'),(1044,'longest-duplicate-substring','Binary Search','binary-search'),(1044,'longest-duplicate-substring','Sliding Window','sliding-window'),(1044,'longest-duplicate-substring','Rolling Hash','rolling-hash'),(1044,'longest-duplicate-substring','Suffix Array','suffix-array'),(1044,'longest-duplicate-substring','Hash Function','hash-function'),(1045,'customers-who-bought-all-products','Database','database'),(1046,'last-stone-weight','Array','array'),(1046,'last-stone-weight','Heap (Priority Queue)','heap-priority-queue'),(1047,'remove-all-adjacent-duplicates-in-string','String','string'),(1047,'remove-all-adjacent-duplicates-in-string','Stack','stack'),(1048,'longest-string-chain','Array','array'),(1048,'longest-string-chain','Hash Table','hash-table'),(1048,'longest-string-chain','Two Pointers','two-pointers'),(1048,'longest-string-chain','String','string'),(1048,'longest-string-chain','Dynamic Programming','dynamic-programming'),(1049,'last-stone-weight-ii','Array','array'),(1049,'last-stone-weight-ii','Dynamic Programming','dynamic-programming'),(1050,'actors-and-directors-who-cooperated-at-least-three-times','Database','database'),(1051,'height-checker','Array','array'),(1051,'height-checker','Sorting','sorting'),(1051,'height-checker','Counting Sort','counting-sort'),(1052,'grumpy-bookstore-owner','Array','array'),(1052,'grumpy-bookstore-owner','Sliding Window','sliding-window'),(1053,'previous-permutation-with-one-swap','Array','array'),(1053,'previous-permutation-with-one-swap','Greedy','greedy'),(1054,'distant-barcodes','Array','array'),(1054,'distant-barcodes','Hash Table','hash-table'),(1054,'distant-barcodes','Greedy','greedy'),(1054,'distant-barcodes','Sorting','sorting'),(1054,'distant-barcodes','Heap (Priority Queue)','heap-priority-queue'),(1054,'distant-barcodes','Counting','counting'),(1055,'shortest-way-to-form-string','Two Pointers','two-pointers'),(1055,'shortest-way-to-form-string','String','string'),(1055,'shortest-way-to-form-string','Greedy','greedy'),(1056,'confusing-number','Math','math'),(1057,'campus-bikes','Array','array'),(1057,'campus-bikes','Greedy','greedy'),(1057,'campus-bikes','Sorting','sorting'),(1058,'minimize-rounding-error-to-meet-target','Array','array'),(1058,'minimize-rounding-error-to-meet-target','Math','math'),(1058,'minimize-rounding-error-to-meet-target','String','string'),(1058,'minimize-rounding-error-to-meet-target','Greedy','greedy'),(1059,'all-paths-from-source-lead-to-destination','Depth-First Search','depth-first-search'),(1059,'all-paths-from-source-lead-to-destination','Graph','graph'),(1060,'missing-element-in-sorted-array','Array','array'),(1060,'missing-element-in-sorted-array','Binary Search','binary-search'),(1061,'lexicographically-smallest-equivalent-string','String','string'),(1061,'lexicographically-smallest-equivalent-string','Union Find','union-find'),(1062,'longest-repeating-substring','String','string'),(1062,'longest-repeating-substring','Binary Search','binary-search'),(1062,'longest-repeating-substring','Dynamic Programming','dynamic-programming'),(1062,'longest-repeating-substring','Rolling Hash','rolling-hash'),(1062,'longest-repeating-substring','Suffix Array','suffix-array'),(1062,'longest-repeating-substring','Hash Function','hash-function'),(1063,'number-of-valid-subarrays','Array','array'),(1063,'number-of-valid-subarrays','Stack','stack'),(1063,'number-of-valid-subarrays','Monotonic Stack','monotonic-stack'),(1064,'fixed-point','Array','array'),(1064,'fixed-point','Binary Search','binary-search'),(1065,'index-pairs-of-a-string','Array','array'),(1065,'index-pairs-of-a-string','String','string'),(1065,'index-pairs-of-a-string','Trie','trie'),(1065,'index-pairs-of-a-string','Sorting','sorting'),(1066,'campus-bikes-ii','Array','array'),(1066,'campus-bikes-ii','Dynamic Programming','dynamic-programming'),(1066,'campus-bikes-ii','Backtracking','backtracking'),(1066,'campus-bikes-ii','Bit Manipulation','bit-manipulation'),(1066,'campus-bikes-ii','Bitmask','bitmask'),(1067,'digit-count-in-range','Math','math'),(1067,'digit-count-in-range','Dynamic Programming','dynamic-programming'),(1068,'product-sales-analysis-i','Database','database'),(1069,'product-sales-analysis-ii','Database','database'),(1070,'product-sales-analysis-iii','Database','database'),(1071,'greatest-common-divisor-of-strings','Math','math'),(1071,'greatest-common-divisor-of-strings','String','string'),(1072,'flip-columns-for-maximum-number-of-equal-rows','Array','array'),(1072,'flip-columns-for-maximum-number-of-equal-rows','Hash Table','hash-table'),(1072,'flip-columns-for-maximum-number-of-equal-rows','Matrix','matrix'),(1073,'adding-two-negabinary-numbers','Array','array'),(1073,'adding-two-negabinary-numbers','Math','math'),(1074,'number-of-submatrices-that-sum-to-target','Array','array'),(1074,'number-of-submatrices-that-sum-to-target','Hash Table','hash-table'),(1074,'number-of-submatrices-that-sum-to-target','Matrix','matrix'),(1074,'number-of-submatrices-that-sum-to-target','Prefix Sum','prefix-sum'),(1075,'project-employees-i','Database','database'),(1076,'project-employees-ii','Database','database'),(1077,'project-employees-iii','Database','database'),(1078,'occurrences-after-bigram','String','string'),(1079,'letter-tile-possibilities','Hash Table','hash-table'),(1079,'letter-tile-possibilities','String','string'),(1079,'letter-tile-possibilities','Backtracking','backtracking'),(1079,'letter-tile-possibilities','Counting','counting'),(1080,'insufficient-nodes-in-root-to-leaf-paths','Tree','tree'),(1080,'insufficient-nodes-in-root-to-leaf-paths','Depth-First Search','depth-first-search'),(1080,'insufficient-nodes-in-root-to-leaf-paths','Binary Tree','binary-tree'),(1081,'smallest-subsequence-of-distinct-characters','String','string'),(1081,'smallest-subsequence-of-distinct-characters','Stack','stack'),(1081,'smallest-subsequence-of-distinct-characters','Greedy','greedy'),(1081,'smallest-subsequence-of-distinct-characters','Monotonic Stack','monotonic-stack'),(1082,'sales-analysis-i','Database','database'),(1083,'sales-analysis-ii','Database','database'),(1084,'sales-analysis-iii','Database','database'),(1085,'sum-of-digits-in-the-minimum-number','Array','array'),(1085,'sum-of-digits-in-the-minimum-number','Math','math'),(1086,'high-five','Array','array'),(1086,'high-five','Hash Table','hash-table'),(1086,'high-five','Sorting','sorting'),(1087,'brace-expansion','String','string'),(1087,'brace-expansion','Backtracking','backtracking'),(1087,'brace-expansion','Breadth-First Search','breadth-first-search'),(1088,'confusing-number-ii','Math','math'),(1088,'confusing-number-ii','Backtracking','backtracking'),(1089,'duplicate-zeros','Array','array'),(1089,'duplicate-zeros','Two Pointers','two-pointers'),(1090,'largest-values-from-labels','Array','array'),(1090,'largest-values-from-labels','Hash Table','hash-table'),(1090,'largest-values-from-labels','Greedy','greedy'),(1090,'largest-values-from-labels','Sorting','sorting'),(1090,'largest-values-from-labels','Counting','counting'),(1091,'shortest-path-in-binary-matrix','Array','array'),(1091,'shortest-path-in-binary-matrix','Breadth-First Search','breadth-first-search'),(1091,'shortest-path-in-binary-matrix','Matrix','matrix'),(1092,'shortest-common-supersequence','String','string'),(1092,'shortest-common-supersequence','Dynamic Programming','dynamic-programming'),(1093,'statistics-from-a-large-sample','Array','array'),(1093,'statistics-from-a-large-sample','Math','math'),(1093,'statistics-from-a-large-sample','Probability and Statistics','probability-and-statistics'),(1094,'car-pooling','Array','array'),(1094,'car-pooling','Sorting','sorting'),(1094,'car-pooling','Heap (Priority Queue)','heap-priority-queue'),(1094,'car-pooling','Simulation','simulation'),(1094,'car-pooling','Prefix Sum','prefix-sum'),(1095,'find-in-mountain-array','Array','array'),(1095,'find-in-mountain-array','Binary Search','binary-search'),(1095,'find-in-mountain-array','Interactive','interactive'),(1096,'brace-expansion-ii','String','string'),(1096,'brace-expansion-ii','Backtracking','backtracking'),(1096,'brace-expansion-ii','Stack','stack'),(1096,'brace-expansion-ii','Breadth-First Search','breadth-first-search'),(1097,'game-play-analysis-v','Database','database'),(1098,'unpopular-books','Database','database'),(1099,'two-sum-less-than-k','Array','array'),(1099,'two-sum-less-than-k','Two Pointers','two-pointers'),(1099,'two-sum-less-than-k','Binary Search','binary-search'),(1099,'two-sum-less-than-k','Sorting','sorting'),(1100,'find-k-length-substrings-with-no-repeated-characters','Hash Table','hash-table'),(1100,'find-k-length-substrings-with-no-repeated-characters','String','string'),(1100,'find-k-length-substrings-with-no-repeated-characters','Sliding Window','sliding-window'),(1101,'the-earliest-moment-when-everyone-become-friends','Array','array'),(1101,'the-earliest-moment-when-everyone-become-friends','Union Find','union-find'),(1102,'path-with-maximum-minimum-value','Array','array'),(1102,'path-with-maximum-minimum-value','Depth-First Search','depth-first-search'),(1102,'path-with-maximum-minimum-value','Breadth-First Search','breadth-first-search'),(1102,'path-with-maximum-minimum-value','Union Find','union-find'),(1102,'path-with-maximum-minimum-value','Heap (Priority Queue)','heap-priority-queue'),(1102,'path-with-maximum-minimum-value','Matrix','matrix'),(1103,'distribute-candies-to-people','Math','math'),(1103,'distribute-candies-to-people','Simulation','simulation'),(1104,'path-in-zigzag-labelled-binary-tree','Math','math'),(1104,'path-in-zigzag-labelled-binary-tree','Tree','tree'),(1104,'path-in-zigzag-labelled-binary-tree','Binary Tree','binary-tree'),(1105,'filling-bookcase-shelves','Array','array'),(1105,'filling-bookcase-shelves','Dynamic Programming','dynamic-programming'),(1106,'parsing-a-boolean-expression','String','string'),(1106,'parsing-a-boolean-expression','Stack','stack'),(1106,'parsing-a-boolean-expression','Recursion','recursion'),(1107,'new-users-daily-count','Database','database'),(1108,'defanging-an-ip-address','String','string'),(1109,'corporate-flight-bookings','Array','array'),(1109,'corporate-flight-bookings','Prefix Sum','prefix-sum'),(1110,'delete-nodes-and-return-forest','Tree','tree'),(1110,'delete-nodes-and-return-forest','Depth-First Search','depth-first-search'),(1110,'delete-nodes-and-return-forest','Binary Tree','binary-tree'),(1111,'maximum-nesting-depth-of-two-valid-parentheses-strings','String','string'),(1111,'maximum-nesting-depth-of-two-valid-parentheses-strings','Stack','stack'),(1112,'highest-grade-for-each-student','Database','database'),(1113,'reported-posts','Database','database'),(1114,'print-in-order','Concurrency','concurrency'),(1115,'print-foobar-alternately','Concurrency','concurrency'),(1116,'print-zero-even-odd','Concurrency','concurrency'),(1117,'building-h2o','Concurrency','concurrency'),(1118,'number-of-days-in-a-month','Math','math'),(1119,'remove-vowels-from-a-string','String','string'),(1120,'maximum-average-subtree','Tree','tree'),(1120,'maximum-average-subtree','Depth-First Search','depth-first-search'),(1120,'maximum-average-subtree','Binary Tree','binary-tree'),(1121,'divide-array-into-increasing-sequences','Array','array'),(1121,'divide-array-into-increasing-sequences','Greedy','greedy'),(1122,'relative-sort-array','Array','array'),(1122,'relative-sort-array','Hash Table','hash-table'),(1122,'relative-sort-array','Sorting','sorting'),(1122,'relative-sort-array','Counting Sort','counting-sort'),(1123,'lowest-common-ancestor-of-deepest-leaves','Hash Table','hash-table'),(1123,'lowest-common-ancestor-of-deepest-leaves','Tree','tree'),(1123,'lowest-common-ancestor-of-deepest-leaves','Depth-First Search','depth-first-search'),(1123,'lowest-common-ancestor-of-deepest-leaves','Breadth-First Search','breadth-first-search'),(1123,'lowest-common-ancestor-of-deepest-leaves','Binary Tree','binary-tree'),(1124,'longest-well-performing-interval','Array','array'),(1124,'longest-well-performing-interval','Hash Table','hash-table'),(1124,'longest-well-performing-interval','Stack','stack'),(1124,'longest-well-performing-interval','Monotonic Stack','monotonic-stack'),(1124,'longest-well-performing-interval','Prefix Sum','prefix-sum'),(1125,'smallest-sufficient-team','Array','array'),(1125,'smallest-sufficient-team','Dynamic Programming','dynamic-programming'),(1125,'smallest-sufficient-team','Bit Manipulation','bit-manipulation'),(1125,'smallest-sufficient-team','Bitmask','bitmask'),(1126,'active-businesses','Database','database'),(1127,'user-purchase-platform','Database','database'),(1128,'number-of-equivalent-domino-pairs','Array','array'),(1128,'number-of-equivalent-domino-pairs','Hash Table','hash-table'),(1128,'number-of-equivalent-domino-pairs','Counting','counting'),(1129,'shortest-path-with-alternating-colors','Breadth-First Search','breadth-first-search'),(1129,'shortest-path-with-alternating-colors','Graph','graph'),(1130,'minimum-cost-tree-from-leaf-values','Dynamic Programming','dynamic-programming'),(1130,'minimum-cost-tree-from-leaf-values','Stack','stack'),(1130,'minimum-cost-tree-from-leaf-values','Greedy','greedy'),(1130,'minimum-cost-tree-from-leaf-values','Monotonic Stack','monotonic-stack'),(1131,'maximum-of-absolute-value-expression','Array','array'),(1131,'maximum-of-absolute-value-expression','Math','math'),(1132,'reported-posts-ii','Database','database'),(1133,'largest-unique-number','Array','array'),(1133,'largest-unique-number','Hash Table','hash-table'),(1133,'largest-unique-number','Sorting','sorting'),(1134,'armstrong-number','Math','math'),(1135,'connecting-cities-with-minimum-cost','Union Find','union-find'),(1135,'connecting-cities-with-minimum-cost','Graph','graph'),(1135,'connecting-cities-with-minimum-cost','Heap (Priority Queue)','heap-priority-queue'),(1135,'connecting-cities-with-minimum-cost','Minimum Spanning Tree','minimum-spanning-tree'),(1136,'parallel-courses','Graph','graph'),(1136,'parallel-courses','Topological Sort','topological-sort'),(1137,'n-th-tribonacci-number','Math','math'),(1137,'n-th-tribonacci-number','Dynamic Programming','dynamic-programming'),(1137,'n-th-tribonacci-number','Memoization','memoization'),(1138,'alphabet-board-path','Hash Table','hash-table'),(1138,'alphabet-board-path','String','string'),(1139,'largest-1-bordered-square','Array','array'),(1139,'largest-1-bordered-square','Dynamic Programming','dynamic-programming'),(1139,'largest-1-bordered-square','Matrix','matrix'),(1140,'stone-game-ii','Array','array'),(1140,'stone-game-ii','Math','math'),(1140,'stone-game-ii','Dynamic Programming','dynamic-programming'),(1140,'stone-game-ii','Game Theory','game-theory'),(1141,'user-activity-for-the-past-30-days-i','Database','database'),(1142,'user-activity-for-the-past-30-days-ii','Database','database'),(1143,'longest-common-subsequence','String','string'),(1143,'longest-common-subsequence','Dynamic Programming','dynamic-programming'),(1144,'decrease-elements-to-make-array-zigzag','Array','array'),(1144,'decrease-elements-to-make-array-zigzag','Greedy','greedy'),(1145,'binary-tree-coloring-game','Tree','tree'),(1145,'binary-tree-coloring-game','Depth-First Search','depth-first-search'),(1145,'binary-tree-coloring-game','Binary Tree','binary-tree'),(1146,'snapshot-array','Array','array'),(1146,'snapshot-array','Hash Table','hash-table'),(1146,'snapshot-array','Binary Search','binary-search'),(1146,'snapshot-array','Design','design'),(1147,'longest-chunked-palindrome-decomposition','Two Pointers','two-pointers'),(1147,'longest-chunked-palindrome-decomposition','String','string'),(1147,'longest-chunked-palindrome-decomposition','Dynamic Programming','dynamic-programming'),(1147,'longest-chunked-palindrome-decomposition','Greedy','greedy'),(1147,'longest-chunked-palindrome-decomposition','Rolling Hash','rolling-hash'),(1147,'longest-chunked-palindrome-decomposition','Hash Function','hash-function'),(1148,'article-views-i','Database','database'),(1149,'article-views-ii','Database','database'),(1150,'check-if-a-number-is-majority-element-in-a-sorted-array','Array','array'),(1150,'check-if-a-number-is-majority-element-in-a-sorted-array','Binary Search','binary-search'),(1151,'minimum-swaps-to-group-all-1s-together','Array','array'),(1151,'minimum-swaps-to-group-all-1s-together','Sliding Window','sliding-window'),(1152,'analyze-user-website-visit-pattern','Array','array'),(1152,'analyze-user-website-visit-pattern','Hash Table','hash-table'),(1152,'analyze-user-website-visit-pattern','Sorting','sorting'),(1153,'string-transforms-into-another-string','Hash Table','hash-table'),(1153,'string-transforms-into-another-string','String','string'),(1154,'day-of-the-year','Math','math'),(1154,'day-of-the-year','String','string'),(1155,'number-of-dice-rolls-with-target-sum','Dynamic Programming','dynamic-programming'),(1156,'swap-for-longest-repeated-character-substring','String','string'),(1156,'swap-for-longest-repeated-character-substring','Sliding Window','sliding-window'),(1157,'online-majority-element-in-subarray','Array','array'),(1157,'online-majority-element-in-subarray','Binary Search','binary-search'),(1157,'online-majority-element-in-subarray','Design','design'),(1157,'online-majority-element-in-subarray','Binary Indexed Tree','binary-indexed-tree'),(1157,'online-majority-element-in-subarray','Segment Tree','segment-tree'),(1158,'market-analysis-i','Database','database'),(1159,'market-analysis-ii','Database','database'),(1160,'find-words-that-can-be-formed-by-characters','Array','array'),(1160,'find-words-that-can-be-formed-by-characters','Hash Table','hash-table'),(1160,'find-words-that-can-be-formed-by-characters','String','string'),(1161,'maximum-level-sum-of-a-binary-tree','Tree','tree'),(1161,'maximum-level-sum-of-a-binary-tree','Depth-First Search','depth-first-search'),(1161,'maximum-level-sum-of-a-binary-tree','Breadth-First Search','breadth-first-search'),(1161,'maximum-level-sum-of-a-binary-tree','Binary Tree','binary-tree'),(1162,'as-far-from-land-as-possible','Array','array'),(1162,'as-far-from-land-as-possible','Dynamic Programming','dynamic-programming'),(1162,'as-far-from-land-as-possible','Breadth-First Search','breadth-first-search'),(1162,'as-far-from-land-as-possible','Matrix','matrix'),(1163,'last-substring-in-lexicographical-order','Two Pointers','two-pointers'),(1163,'last-substring-in-lexicographical-order','String','string'),(1164,'product-price-at-a-given-date','Database','database'),(1165,'single-row-keyboard','Hash Table','hash-table'),(1165,'single-row-keyboard','String','string'),(1166,'design-file-system','Hash Table','hash-table'),(1166,'design-file-system','String','string'),(1166,'design-file-system','Design','design'),(1166,'design-file-system','Trie','trie'),(1167,'minimum-cost-to-connect-sticks','Array','array'),(1167,'minimum-cost-to-connect-sticks','Greedy','greedy'),(1167,'minimum-cost-to-connect-sticks','Heap (Priority Queue)','heap-priority-queue'),(1168,'optimize-water-distribution-in-a-village','Union Find','union-find'),(1168,'optimize-water-distribution-in-a-village','Graph','graph'),(1168,'optimize-water-distribution-in-a-village','Minimum Spanning Tree','minimum-spanning-tree'),(1169,'invalid-transactions','Array','array'),(1169,'invalid-transactions','Hash Table','hash-table'),(1169,'invalid-transactions','String','string'),(1169,'invalid-transactions','Sorting','sorting'),(1170,'compare-strings-by-frequency-of-the-smallest-character','Array','array'),(1170,'compare-strings-by-frequency-of-the-smallest-character','Hash Table','hash-table'),(1170,'compare-strings-by-frequency-of-the-smallest-character','String','string'),(1170,'compare-strings-by-frequency-of-the-smallest-character','Binary Search','binary-search'),(1170,'compare-strings-by-frequency-of-the-smallest-character','Sorting','sorting'),(1171,'remove-zero-sum-consecutive-nodes-from-linked-list','Hash Table','hash-table'),(1171,'remove-zero-sum-consecutive-nodes-from-linked-list','Linked List','linked-list'),(1172,'dinner-plate-stacks','Hash Table','hash-table'),(1172,'dinner-plate-stacks','Stack','stack'),(1172,'dinner-plate-stacks','Design','design'),(1172,'dinner-plate-stacks','Heap (Priority Queue)','heap-priority-queue'),(1173,'immediate-food-delivery-i','Database','database'),(1174,'immediate-food-delivery-ii','Database','database'),(1175,'prime-arrangements','Math','math'),(1176,'diet-plan-performance','Array','array'),(1176,'diet-plan-performance','Sliding Window','sliding-window'),(1177,'can-make-palindrome-from-substring','Hash Table','hash-table'),(1177,'can-make-palindrome-from-substring','String','string'),(1177,'can-make-palindrome-from-substring','Bit Manipulation','bit-manipulation'),(1177,'can-make-palindrome-from-substring','Prefix Sum','prefix-sum'),(1178,'number-of-valid-words-for-each-puzzle','Array','array'),(1178,'number-of-valid-words-for-each-puzzle','Hash Table','hash-table'),(1178,'number-of-valid-words-for-each-puzzle','String','string'),(1178,'number-of-valid-words-for-each-puzzle','Bit Manipulation','bit-manipulation'),(1178,'number-of-valid-words-for-each-puzzle','Trie','trie'),(1179,'reformat-department-table','Database','database'),(1180,'count-substrings-with-only-one-distinct-letter','Math','math'),(1180,'count-substrings-with-only-one-distinct-letter','String','string'),(1181,'before-and-after-puzzle','Array','array'),(1181,'before-and-after-puzzle','Hash Table','hash-table'),(1181,'before-and-after-puzzle','String','string'),(1181,'before-and-after-puzzle','Sorting','sorting'),(1182,'shortest-distance-to-target-color','Array','array'),(1182,'shortest-distance-to-target-color','Binary Search','binary-search'),(1182,'shortest-distance-to-target-color','Dynamic Programming','dynamic-programming'),(1183,'maximum-number-of-ones','Greedy','greedy'),(1183,'maximum-number-of-ones','Heap (Priority Queue)','heap-priority-queue'),(1184,'distance-between-bus-stops','Array','array'),(1185,'day-of-the-week','Math','math'),(1186,'maximum-subarray-sum-with-one-deletion','Array','array'),(1186,'maximum-subarray-sum-with-one-deletion','Dynamic Programming','dynamic-programming'),(1187,'make-array-strictly-increasing','Array','array'),(1187,'make-array-strictly-increasing','Binary Search','binary-search'),(1187,'make-array-strictly-increasing','Dynamic Programming','dynamic-programming'),(1188,'design-bounded-blocking-queue','Concurrency','concurrency'),(1189,'maximum-number-of-balloons','Hash Table','hash-table'),(1189,'maximum-number-of-balloons','String','string'),(1189,'maximum-number-of-balloons','Counting','counting'),(1190,'reverse-substrings-between-each-pair-of-parentheses','String','string'),(1190,'reverse-substrings-between-each-pair-of-parentheses','Stack','stack'),(1191,'k-concatenation-maximum-sum','Array','array'),(1191,'k-concatenation-maximum-sum','Dynamic Programming','dynamic-programming'),(1192,'critical-connections-in-a-network','Depth-First Search','depth-first-search'),(1192,'critical-connections-in-a-network','Graph','graph'),(1192,'critical-connections-in-a-network','Biconnected Component','biconnected-component'),(1193,'monthly-transactions-i','Database','database'),(1194,'tournament-winners','Database','database'),(1195,'fizz-buzz-multithreaded','Concurrency','concurrency'),(1196,'how-many-apples-can-you-put-into-the-basket','Array','array'),(1196,'how-many-apples-can-you-put-into-the-basket','Greedy','greedy'),(1196,'how-many-apples-can-you-put-into-the-basket','Sorting','sorting'),(1197,'minimum-knight-moves','Breadth-First Search','breadth-first-search'),(1198,'find-smallest-common-element-in-all-rows','Array','array'),(1198,'find-smallest-common-element-in-all-rows','Hash Table','hash-table'),(1198,'find-smallest-common-element-in-all-rows','Binary Search','binary-search'),(1198,'find-smallest-common-element-in-all-rows','Matrix','matrix'),(1198,'find-smallest-common-element-in-all-rows','Counting','counting'),(1199,'minimum-time-to-build-blocks','Math','math'),(1199,'minimum-time-to-build-blocks','Greedy','greedy'),(1199,'minimum-time-to-build-blocks','Heap (Priority Queue)','heap-priority-queue'),(1200,'minimum-absolute-difference','Array','array'),(1200,'minimum-absolute-difference','Sorting','sorting'),(1201,'ugly-number-iii','Math','math'),(1201,'ugly-number-iii','Binary Search','binary-search'),(1201,'ugly-number-iii','Number Theory','number-theory'),(1202,'smallest-string-with-swaps','Hash Table','hash-table'),(1202,'smallest-string-with-swaps','String','string'),(1202,'smallest-string-with-swaps','Depth-First Search','depth-first-search'),(1202,'smallest-string-with-swaps','Breadth-First Search','breadth-first-search'),(1202,'smallest-string-with-swaps','Union Find','union-find'),(1203,'sort-items-by-groups-respecting-dependencies','Depth-First Search','depth-first-search'),(1203,'sort-items-by-groups-respecting-dependencies','Breadth-First Search','breadth-first-search'),(1203,'sort-items-by-groups-respecting-dependencies','Graph','graph'),(1203,'sort-items-by-groups-respecting-dependencies','Topological Sort','topological-sort'),(1204,'last-person-to-fit-in-the-bus','Database','database'),(1205,'monthly-transactions-ii','Database','database'),(1206,'design-skiplist','Linked List','linked-list'),(1206,'design-skiplist','Design','design'),(1207,'unique-number-of-occurrences','Array','array'),(1207,'unique-number-of-occurrences','Hash Table','hash-table'),(1208,'get-equal-substrings-within-budget','String','string'),(1208,'get-equal-substrings-within-budget','Binary Search','binary-search'),(1208,'get-equal-substrings-within-budget','Sliding Window','sliding-window'),(1208,'get-equal-substrings-within-budget','Prefix Sum','prefix-sum'),(1209,'remove-all-adjacent-duplicates-in-string-ii','String','string'),(1209,'remove-all-adjacent-duplicates-in-string-ii','Stack','stack'),(1210,'minimum-moves-to-reach-target-with-rotations','Array','array'),(1210,'minimum-moves-to-reach-target-with-rotations','Breadth-First Search','breadth-first-search'),(1210,'minimum-moves-to-reach-target-with-rotations','Matrix','matrix'),(1211,'queries-quality-and-percentage','Database','database'),(1212,'team-scores-in-football-tournament','Database','database'),(1213,'intersection-of-three-sorted-arrays','Array','array'),(1213,'intersection-of-three-sorted-arrays','Hash Table','hash-table'),(1213,'intersection-of-three-sorted-arrays','Binary Search','binary-search'),(1213,'intersection-of-three-sorted-arrays','Counting','counting'),(1214,'two-sum-bsts','Two Pointers','two-pointers'),(1214,'two-sum-bsts','Binary Search','binary-search'),(1214,'two-sum-bsts','Stack','stack'),(1214,'two-sum-bsts','Tree','tree'),(1214,'two-sum-bsts','Depth-First Search','depth-first-search'),(1214,'two-sum-bsts','Binary Search Tree','binary-search-tree'),(1214,'two-sum-bsts','Binary Tree','binary-tree'),(1215,'stepping-numbers','Backtracking','backtracking'),(1215,'stepping-numbers','Breadth-First Search','breadth-first-search'),(1216,'valid-palindrome-iii','String','string'),(1216,'valid-palindrome-iii','Dynamic Programming','dynamic-programming'),(1217,'minimum-cost-to-move-chips-to-the-same-position','Array','array'),(1217,'minimum-cost-to-move-chips-to-the-same-position','Math','math'),(1217,'minimum-cost-to-move-chips-to-the-same-position','Greedy','greedy'),(1218,'longest-arithmetic-subsequence-of-given-difference','Array','array'),(1218,'longest-arithmetic-subsequence-of-given-difference','Hash Table','hash-table'),(1218,'longest-arithmetic-subsequence-of-given-difference','Dynamic Programming','dynamic-programming'),(1219,'path-with-maximum-gold','Array','array'),(1219,'path-with-maximum-gold','Backtracking','backtracking'),(1219,'path-with-maximum-gold','Matrix','matrix'),(1220,'count-vowels-permutation','Dynamic Programming','dynamic-programming'),(1221,'split-a-string-in-balanced-strings','String','string'),(1221,'split-a-string-in-balanced-strings','Greedy','greedy'),(1221,'split-a-string-in-balanced-strings','Counting','counting'),(1222,'queens-that-can-attack-the-king','Array','array'),(1222,'queens-that-can-attack-the-king','Matrix','matrix'),(1222,'queens-that-can-attack-the-king','Simulation','simulation'),(1223,'dice-roll-simulation','Array','array'),(1223,'dice-roll-simulation','Dynamic Programming','dynamic-programming'),(1224,'maximum-equal-frequency','Array','array'),(1224,'maximum-equal-frequency','Hash Table','hash-table'),(1225,'report-contiguous-dates','Database','database'),(1226,'the-dining-philosophers','Concurrency','concurrency'),(1227,'airplane-seat-assignment-probability','Math','math'),(1227,'airplane-seat-assignment-probability','Dynamic Programming','dynamic-programming'),(1227,'airplane-seat-assignment-probability','Brainteaser','brainteaser'),(1227,'airplane-seat-assignment-probability','Probability and Statistics','probability-and-statistics'),(1228,'missing-number-in-arithmetic-progression','Array','array'),(1228,'missing-number-in-arithmetic-progression','Math','math'),(1229,'meeting-scheduler','Array','array'),(1229,'meeting-scheduler','Two Pointers','two-pointers'),(1229,'meeting-scheduler','Sorting','sorting'),(1230,'toss-strange-coins','Math','math'),(1230,'toss-strange-coins','Dynamic Programming','dynamic-programming'),(1230,'toss-strange-coins','Probability and Statistics','probability-and-statistics'),(1231,'divide-chocolate','Array','array'),(1231,'divide-chocolate','Binary Search','binary-search'),(1232,'check-if-it-is-a-straight-line','Array','array'),(1232,'check-if-it-is-a-straight-line','Math','math'),(1232,'check-if-it-is-a-straight-line','Geometry','geometry'),(1233,'remove-sub-folders-from-the-filesystem','Array','array'),(1233,'remove-sub-folders-from-the-filesystem','String','string'),(1233,'remove-sub-folders-from-the-filesystem','Trie','trie'),(1234,'replace-the-substring-for-balanced-string','String','string'),(1234,'replace-the-substring-for-balanced-string','Sliding Window','sliding-window'),(1235,'maximum-profit-in-job-scheduling','Array','array'),(1235,'maximum-profit-in-job-scheduling','Binary Search','binary-search'),(1235,'maximum-profit-in-job-scheduling','Dynamic Programming','dynamic-programming'),(1235,'maximum-profit-in-job-scheduling','Sorting','sorting'),(1236,'web-crawler','String','string'),(1236,'web-crawler','Depth-First Search','depth-first-search'),(1236,'web-crawler','Breadth-First Search','breadth-first-search'),(1236,'web-crawler','Interactive','interactive'),(1237,'find-positive-integer-solution-for-a-given-equation','Math','math'),(1237,'find-positive-integer-solution-for-a-given-equation','Two Pointers','two-pointers'),(1237,'find-positive-integer-solution-for-a-given-equation','Binary Search','binary-search'),(1237,'find-positive-integer-solution-for-a-given-equation','Interactive','interactive'),(1238,'circular-permutation-in-binary-representation','Math','math'),(1238,'circular-permutation-in-binary-representation','Backtracking','backtracking'),(1238,'circular-permutation-in-binary-representation','Bit Manipulation','bit-manipulation'),(1239,'maximum-length-of-a-concatenated-string-with-unique-characters','Array','array'),(1239,'maximum-length-of-a-concatenated-string-with-unique-characters','String','string'),(1239,'maximum-length-of-a-concatenated-string-with-unique-characters','Backtracking','backtracking'),(1239,'maximum-length-of-a-concatenated-string-with-unique-characters','Bit Manipulation','bit-manipulation'),(1240,'tiling-a-rectangle-with-the-fewest-squares','Dynamic Programming','dynamic-programming'),(1240,'tiling-a-rectangle-with-the-fewest-squares','Backtracking','backtracking'),(1241,'number-of-comments-per-post','Database','database'),(1242,'web-crawler-multithreaded','Depth-First Search','depth-first-search'),(1242,'web-crawler-multithreaded','Breadth-First Search','breadth-first-search'),(1242,'web-crawler-multithreaded','Concurrency','concurrency'),(1243,'array-transformation','Array','array'),(1243,'array-transformation','Simulation','simulation'),(1244,'design-a-leaderboard','Hash Table','hash-table'),(1244,'design-a-leaderboard','Design','design'),(1244,'design-a-leaderboard','Sorting','sorting'),(1245,'tree-diameter','Tree','tree'),(1245,'tree-diameter','Depth-First Search','depth-first-search'),(1245,'tree-diameter','Breadth-First Search','breadth-first-search'),(1245,'tree-diameter','Graph','graph'),(1245,'tree-diameter','Topological Sort','topological-sort'),(1246,'palindrome-removal','Array','array'),(1246,'palindrome-removal','Dynamic Programming','dynamic-programming'),(1247,'minimum-swaps-to-make-strings-equal','Math','math'),(1247,'minimum-swaps-to-make-strings-equal','String','string'),(1247,'minimum-swaps-to-make-strings-equal','Greedy','greedy'),(1248,'count-number-of-nice-subarrays','Array','array'),(1248,'count-number-of-nice-subarrays','Hash Table','hash-table'),(1248,'count-number-of-nice-subarrays','Math','math'),(1248,'count-number-of-nice-subarrays','Sliding Window','sliding-window'),(1249,'minimum-remove-to-make-valid-parentheses','String','string'),(1249,'minimum-remove-to-make-valid-parentheses','Stack','stack'),(1250,'check-if-it-is-a-good-array','Array','array'),(1250,'check-if-it-is-a-good-array','Math','math'),(1250,'check-if-it-is-a-good-array','Number Theory','number-theory'),(1251,'average-selling-price','Database','database'),(1252,'cells-with-odd-values-in-a-matrix','Array','array'),(1252,'cells-with-odd-values-in-a-matrix','Math','math'),(1252,'cells-with-odd-values-in-a-matrix','Simulation','simulation'),(1253,'reconstruct-a-2-row-binary-matrix','Array','array'),(1253,'reconstruct-a-2-row-binary-matrix','Greedy','greedy'),(1253,'reconstruct-a-2-row-binary-matrix','Matrix','matrix'),(1254,'number-of-closed-islands','Array','array'),(1254,'number-of-closed-islands','Depth-First Search','depth-first-search'),(1254,'number-of-closed-islands','Breadth-First Search','breadth-first-search'),(1254,'number-of-closed-islands','Union Find','union-find'),(1254,'number-of-closed-islands','Matrix','matrix'),(1255,'maximum-score-words-formed-by-letters','Array','array'),(1255,'maximum-score-words-formed-by-letters','String','string'),(1255,'maximum-score-words-formed-by-letters','Dynamic Programming','dynamic-programming'),(1255,'maximum-score-words-formed-by-letters','Backtracking','backtracking'),(1255,'maximum-score-words-formed-by-letters','Bit Manipulation','bit-manipulation'),(1255,'maximum-score-words-formed-by-letters','Bitmask','bitmask'),(1256,'encode-number','Math','math'),(1256,'encode-number','String','string'),(1256,'encode-number','Bit Manipulation','bit-manipulation'),(1257,'smallest-common-region','Array','array'),(1257,'smallest-common-region','Hash Table','hash-table'),(1257,'smallest-common-region','String','string'),(1257,'smallest-common-region','Tree','tree'),(1257,'smallest-common-region','Depth-First Search','depth-first-search'),(1257,'smallest-common-region','Breadth-First Search','breadth-first-search'),(1258,'synonymous-sentences','Array','array'),(1258,'synonymous-sentences','Hash Table','hash-table'),(1258,'synonymous-sentences','String','string'),(1258,'synonymous-sentences','Backtracking','backtracking'),(1258,'synonymous-sentences','Union Find','union-find'),(1259,'handshakes-that-dont-cross','Math','math'),(1259,'handshakes-that-dont-cross','Dynamic Programming','dynamic-programming'),(1260,'shift-2d-grid','Array','array'),(1260,'shift-2d-grid','Matrix','matrix'),(1260,'shift-2d-grid','Simulation','simulation'),(1261,'find-elements-in-a-contaminated-binary-tree','Hash Table','hash-table'),(1261,'find-elements-in-a-contaminated-binary-tree','Tree','tree'),(1261,'find-elements-in-a-contaminated-binary-tree','Depth-First Search','depth-first-search'),(1261,'find-elements-in-a-contaminated-binary-tree','Breadth-First Search','breadth-first-search'),(1261,'find-elements-in-a-contaminated-binary-tree','Design','design'),(1261,'find-elements-in-a-contaminated-binary-tree','Binary Tree','binary-tree'),(1262,'greatest-sum-divisible-by-three','Array','array'),(1262,'greatest-sum-divisible-by-three','Dynamic Programming','dynamic-programming'),(1262,'greatest-sum-divisible-by-three','Greedy','greedy'),(1263,'minimum-moves-to-move-a-box-to-their-target-location','Array','array'),(1263,'minimum-moves-to-move-a-box-to-their-target-location','Breadth-First Search','breadth-first-search'),(1263,'minimum-moves-to-move-a-box-to-their-target-location','Heap (Priority Queue)','heap-priority-queue'),(1263,'minimum-moves-to-move-a-box-to-their-target-location','Matrix','matrix'),(1264,'page-recommendations','Database','database'),(1265,'print-immutable-linked-list-in-reverse','Linked List','linked-list'),(1265,'print-immutable-linked-list-in-reverse','Two Pointers','two-pointers'),(1265,'print-immutable-linked-list-in-reverse','Stack','stack'),(1265,'print-immutable-linked-list-in-reverse','Recursion','recursion'),(1266,'minimum-time-visiting-all-points','Array','array'),(1266,'minimum-time-visiting-all-points','Math','math'),(1266,'minimum-time-visiting-all-points','Geometry','geometry'),(1267,'count-servers-that-communicate','Array','array'),(1267,'count-servers-that-communicate','Depth-First Search','depth-first-search'),(1267,'count-servers-that-communicate','Breadth-First Search','breadth-first-search'),(1267,'count-servers-that-communicate','Union Find','union-find'),(1267,'count-servers-that-communicate','Matrix','matrix'),(1267,'count-servers-that-communicate','Counting','counting'),(1268,'search-suggestions-system','Array','array'),(1268,'search-suggestions-system','String','string'),(1268,'search-suggestions-system','Trie','trie'),(1269,'number-of-ways-to-stay-in-the-same-place-after-some-steps','Dynamic Programming','dynamic-programming'),(1270,'all-people-report-to-the-given-manager','Database','database'),(1271,'hexspeak','Math','math'),(1271,'hexspeak','String','string'),(1272,'remove-interval','Array','array'),(1273,'delete-tree-nodes','Tree','tree'),(1273,'delete-tree-nodes','Depth-First Search','depth-first-search'),(1273,'delete-tree-nodes','Breadth-First Search','breadth-first-search'),(1274,'number-of-ships-in-a-rectangle','Array','array'),(1274,'number-of-ships-in-a-rectangle','Divide and Conquer','divide-and-conquer'),(1274,'number-of-ships-in-a-rectangle','Interactive','interactive'),(1275,'find-winner-on-a-tic-tac-toe-game','Array','array'),(1275,'find-winner-on-a-tic-tac-toe-game','Hash Table','hash-table'),(1275,'find-winner-on-a-tic-tac-toe-game','Matrix','matrix'),(1275,'find-winner-on-a-tic-tac-toe-game','Simulation','simulation'),(1276,'number-of-burgers-with-no-waste-of-ingredients','Math','math'),(1277,'count-square-submatrices-with-all-ones','Array','array'),(1277,'count-square-submatrices-with-all-ones','Dynamic Programming','dynamic-programming'),(1277,'count-square-submatrices-with-all-ones','Matrix','matrix'),(1278,'palindrome-partitioning-iii','String','string'),(1278,'palindrome-partitioning-iii','Dynamic Programming','dynamic-programming'),(1279,'traffic-light-controlled-intersection','Concurrency','concurrency'),(1280,'students-and-examinations','Database','database'),(1281,'subtract-the-product-and-sum-of-digits-of-an-integer','Math','math'),(1282,'group-the-people-given-the-group-size-they-belong-to','Array','array'),(1282,'group-the-people-given-the-group-size-they-belong-to','Hash Table','hash-table'),(1283,'find-the-smallest-divisor-given-a-threshold','Array','array'),(1283,'find-the-smallest-divisor-given-a-threshold','Binary Search','binary-search'),(1284,'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix','Array','array'),(1284,'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix','Bit Manipulation','bit-manipulation'),(1284,'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix','Breadth-First Search','breadth-first-search'),(1284,'minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix','Matrix','matrix'),(1285,'find-the-start-and-end-number-of-continuous-ranges','Database','database'),(1286,'iterator-for-combination','String','string'),(1286,'iterator-for-combination','Backtracking','backtracking'),(1286,'iterator-for-combination','Design','design'),(1286,'iterator-for-combination','Iterator','iterator'),(1287,'element-appearing-more-than-25-in-sorted-array','Array','array'),(1288,'remove-covered-intervals','Array','array'),(1288,'remove-covered-intervals','Sorting','sorting'),(1289,'minimum-falling-path-sum-ii','Array','array'),(1289,'minimum-falling-path-sum-ii','Dynamic Programming','dynamic-programming'),(1289,'minimum-falling-path-sum-ii','Matrix','matrix'),(1290,'convert-binary-number-in-a-linked-list-to-integer','Linked List','linked-list'),(1290,'convert-binary-number-in-a-linked-list-to-integer','Math','math'),(1291,'sequential-digits','Enumeration','enumeration'),(1292,'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold','Array','array'),(1292,'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold','Binary Search','binary-search'),(1292,'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold','Matrix','matrix'),(1292,'maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold','Prefix Sum','prefix-sum'),(1293,'shortest-path-in-a-grid-with-obstacles-elimination','Array','array'),(1293,'shortest-path-in-a-grid-with-obstacles-elimination','Breadth-First Search','breadth-first-search'),(1293,'shortest-path-in-a-grid-with-obstacles-elimination','Matrix','matrix'),(1294,'weather-type-in-each-country','Database','database'),(1295,'find-numbers-with-even-number-of-digits','Array','array'),(1296,'divide-array-in-sets-of-k-consecutive-numbers','Array','array'),(1296,'divide-array-in-sets-of-k-consecutive-numbers','Hash Table','hash-table'),(1296,'divide-array-in-sets-of-k-consecutive-numbers','Greedy','greedy'),(1296,'divide-array-in-sets-of-k-consecutive-numbers','Sorting','sorting'),(1297,'maximum-number-of-occurrences-of-a-substring','Hash Table','hash-table'),(1297,'maximum-number-of-occurrences-of-a-substring','String','string'),(1297,'maximum-number-of-occurrences-of-a-substring','Sliding Window','sliding-window'),(1298,'maximum-candies-you-can-get-from-boxes','Array','array'),(1298,'maximum-candies-you-can-get-from-boxes','Breadth-First Search','breadth-first-search'),(1298,'maximum-candies-you-can-get-from-boxes','Graph','graph'),(1299,'replace-elements-with-greatest-element-on-right-side','Array','array'),(1300,'sum-of-mutated-array-closest-to-target','Array','array'),(1300,'sum-of-mutated-array-closest-to-target','Binary Search','binary-search'),(1300,'sum-of-mutated-array-closest-to-target','Sorting','sorting'),(1301,'number-of-paths-with-max-score','Array','array'),(1301,'number-of-paths-with-max-score','Dynamic Programming','dynamic-programming'),(1301,'number-of-paths-with-max-score','Matrix','matrix'),(1302,'deepest-leaves-sum','Tree','tree'),(1302,'deepest-leaves-sum','Depth-First Search','depth-first-search'),(1302,'deepest-leaves-sum','Breadth-First Search','breadth-first-search'),(1302,'deepest-leaves-sum','Binary Tree','binary-tree'),(1303,'find-the-team-size','Database','database'),(1304,'find-n-unique-integers-sum-up-to-zero','Array','array'),(1304,'find-n-unique-integers-sum-up-to-zero','Math','math'),(1305,'all-elements-in-two-binary-search-trees','Tree','tree'),(1305,'all-elements-in-two-binary-search-trees','Depth-First Search','depth-first-search'),(1305,'all-elements-in-two-binary-search-trees','Binary Search Tree','binary-search-tree'),(1305,'all-elements-in-two-binary-search-trees','Sorting','sorting'),(1305,'all-elements-in-two-binary-search-trees','Binary Tree','binary-tree'),(1306,'jump-game-iii','Array','array'),(1306,'jump-game-iii','Depth-First Search','depth-first-search'),(1306,'jump-game-iii','Breadth-First Search','breadth-first-search'),(1307,'verbal-arithmetic-puzzle','Array','array'),(1307,'verbal-arithmetic-puzzle','Math','math'),(1307,'verbal-arithmetic-puzzle','String','string'),(1307,'verbal-arithmetic-puzzle','Backtracking','backtracking'),(1308,'running-total-for-different-genders','Database','database'),(1309,'decrypt-string-from-alphabet-to-integer-mapping','String','string'),(1310,'xor-queries-of-a-subarray','Array','array'),(1310,'xor-queries-of-a-subarray','Bit Manipulation','bit-manipulation'),(1310,'xor-queries-of-a-subarray','Prefix Sum','prefix-sum'),(1311,'get-watched-videos-by-your-friends','Array','array'),(1311,'get-watched-videos-by-your-friends','Hash Table','hash-table'),(1311,'get-watched-videos-by-your-friends','Breadth-First Search','breadth-first-search'),(1311,'get-watched-videos-by-your-friends','Graph','graph'),(1311,'get-watched-videos-by-your-friends','Sorting','sorting'),(1312,'minimum-insertion-steps-to-make-a-string-palindrome','String','string'),(1312,'minimum-insertion-steps-to-make-a-string-palindrome','Dynamic Programming','dynamic-programming'),(1313,'decompress-run-length-encoded-list','Array','array'),(1314,'matrix-block-sum','Array','array'),(1314,'matrix-block-sum','Matrix','matrix'),(1314,'matrix-block-sum','Prefix Sum','prefix-sum'),(1315,'sum-of-nodes-with-even-valued-grandparent','Tree','tree'),(1315,'sum-of-nodes-with-even-valued-grandparent','Depth-First Search','depth-first-search'),(1315,'sum-of-nodes-with-even-valued-grandparent','Breadth-First Search','breadth-first-search'),(1315,'sum-of-nodes-with-even-valued-grandparent','Binary Tree','binary-tree'),(1316,'distinct-echo-substrings','String','string'),(1316,'distinct-echo-substrings','Trie','trie'),(1316,'distinct-echo-substrings','Rolling Hash','rolling-hash'),(1316,'distinct-echo-substrings','Hash Function','hash-function'),(1317,'convert-integer-to-the-sum-of-two-no-zero-integers','Math','math'),(1318,'minimum-flips-to-make-a-or-b-equal-to-c','Bit Manipulation','bit-manipulation'),(1319,'number-of-operations-to-make-network-connected','Depth-First Search','depth-first-search'),(1319,'number-of-operations-to-make-network-connected','Breadth-First Search','breadth-first-search'),(1319,'number-of-operations-to-make-network-connected','Union Find','union-find'),(1319,'number-of-operations-to-make-network-connected','Graph','graph'),(1320,'minimum-distance-to-type-a-word-using-two-fingers','String','string'),(1320,'minimum-distance-to-type-a-word-using-two-fingers','Dynamic Programming','dynamic-programming'),(1321,'restaurant-growth','Database','database'),(1322,'ads-performance','Database','database'),(1323,'maximum-69-number','Math','math'),(1323,'maximum-69-number','Greedy','greedy'),(1324,'print-words-vertically','Array','array'),(1324,'print-words-vertically','String','string'),(1324,'print-words-vertically','Simulation','simulation'),(1325,'delete-leaves-with-a-given-value','Tree','tree'),(1325,'delete-leaves-with-a-given-value','Depth-First Search','depth-first-search'),(1325,'delete-leaves-with-a-given-value','Binary Tree','binary-tree'),(1326,'minimum-number-of-taps-to-open-to-water-a-garden','Array','array'),(1326,'minimum-number-of-taps-to-open-to-water-a-garden','Dynamic Programming','dynamic-programming'),(1326,'minimum-number-of-taps-to-open-to-water-a-garden','Greedy','greedy'),(1327,'list-the-products-ordered-in-a-period','Database','database'),(1328,'break-a-palindrome','String','string'),(1328,'break-a-palindrome','Greedy','greedy'),(1329,'sort-the-matrix-diagonally','Array','array'),(1329,'sort-the-matrix-diagonally','Sorting','sorting'),(1329,'sort-the-matrix-diagonally','Matrix','matrix'),(1330,'reverse-subarray-to-maximize-array-value','Array','array'),(1330,'reverse-subarray-to-maximize-array-value','Math','math'),(1330,'reverse-subarray-to-maximize-array-value','Greedy','greedy'),(1331,'rank-transform-of-an-array','Array','array'),(1331,'rank-transform-of-an-array','Hash Table','hash-table'),(1331,'rank-transform-of-an-array','Sorting','sorting'),(1332,'remove-palindromic-subsequences','Two Pointers','two-pointers'),(1332,'remove-palindromic-subsequences','String','string'),(1333,'filter-restaurants-by-vegan-friendly-price-and-distance','Array','array'),(1333,'filter-restaurants-by-vegan-friendly-price-and-distance','Sorting','sorting'),(1334,'find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance','Dynamic Programming','dynamic-programming'),(1334,'find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance','Graph','graph'),(1334,'find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance','Shortest Path','shortest-path'),(1335,'minimum-difficulty-of-a-job-schedule','Array','array'),(1335,'minimum-difficulty-of-a-job-schedule','Dynamic Programming','dynamic-programming'),(1336,'number-of-transactions-per-visit','Database','database'),(1337,'the-k-weakest-rows-in-a-matrix','Array','array'),(1337,'the-k-weakest-rows-in-a-matrix','Binary Search','binary-search'),(1337,'the-k-weakest-rows-in-a-matrix','Sorting','sorting'),(1337,'the-k-weakest-rows-in-a-matrix','Heap (Priority Queue)','heap-priority-queue'),(1337,'the-k-weakest-rows-in-a-matrix','Matrix','matrix'),(1338,'reduce-array-size-to-the-half','Array','array'),(1338,'reduce-array-size-to-the-half','Hash Table','hash-table'),(1338,'reduce-array-size-to-the-half','Greedy','greedy'),(1338,'reduce-array-size-to-the-half','Sorting','sorting'),(1338,'reduce-array-size-to-the-half','Heap (Priority Queue)','heap-priority-queue'),(1339,'maximum-product-of-splitted-binary-tree','Tree','tree'),(1339,'maximum-product-of-splitted-binary-tree','Depth-First Search','depth-first-search'),(1339,'maximum-product-of-splitted-binary-tree','Binary Tree','binary-tree'),(1340,'jump-game-v','Array','array'),(1340,'jump-game-v','Dynamic Programming','dynamic-programming'),(1340,'jump-game-v','Sorting','sorting'),(1341,'movie-rating','Database','database'),(1342,'number-of-steps-to-reduce-a-number-to-zero','Math','math'),(1342,'number-of-steps-to-reduce-a-number-to-zero','Bit Manipulation','bit-manipulation'),(1343,'number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold','Array','array'),(1343,'number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold','Sliding Window','sliding-window'),(1344,'angle-between-hands-of-a-clock','Math','math'),(1345,'jump-game-iv','Array','array'),(1345,'jump-game-iv','Hash Table','hash-table'),(1345,'jump-game-iv','Breadth-First Search','breadth-first-search'),(1346,'check-if-n-and-its-double-exist','Array','array'),(1346,'check-if-n-and-its-double-exist','Hash Table','hash-table'),(1346,'check-if-n-and-its-double-exist','Two Pointers','two-pointers'),(1346,'check-if-n-and-its-double-exist','Binary Search','binary-search'),(1346,'check-if-n-and-its-double-exist','Sorting','sorting'),(1347,'minimum-number-of-steps-to-make-two-strings-anagram','Hash Table','hash-table'),(1347,'minimum-number-of-steps-to-make-two-strings-anagram','String','string'),(1347,'minimum-number-of-steps-to-make-two-strings-anagram','Counting','counting'),(1348,'tweet-counts-per-frequency','Hash Table','hash-table'),(1348,'tweet-counts-per-frequency','Binary Search','binary-search'),(1348,'tweet-counts-per-frequency','Design','design'),(1348,'tweet-counts-per-frequency','Sorting','sorting'),(1348,'tweet-counts-per-frequency','Ordered Set','ordered-set'),(1349,'maximum-students-taking-exam','Array','array'),(1349,'maximum-students-taking-exam','Dynamic Programming','dynamic-programming'),(1349,'maximum-students-taking-exam','Bit Manipulation','bit-manipulation'),(1349,'maximum-students-taking-exam','Matrix','matrix'),(1349,'maximum-students-taking-exam','Bitmask','bitmask'),(1350,'students-with-invalid-departments','Database','database'),(1351,'count-negative-numbers-in-a-sorted-matrix','Array','array'),(1351,'count-negative-numbers-in-a-sorted-matrix','Binary Search','binary-search'),(1351,'count-negative-numbers-in-a-sorted-matrix','Matrix','matrix'),(1352,'product-of-the-last-k-numbers','Array','array'),(1352,'product-of-the-last-k-numbers','Math','math'),(1352,'product-of-the-last-k-numbers','Design','design'),(1352,'product-of-the-last-k-numbers','Queue','queue'),(1352,'product-of-the-last-k-numbers','Data Stream','data-stream'),(1353,'maximum-number-of-events-that-can-be-attended','Array','array'),(1353,'maximum-number-of-events-that-can-be-attended','Greedy','greedy'),(1353,'maximum-number-of-events-that-can-be-attended','Sorting','sorting'),(1353,'maximum-number-of-events-that-can-be-attended','Heap (Priority Queue)','heap-priority-queue'),(1354,'construct-target-array-with-multiple-sums','Array','array'),(1354,'construct-target-array-with-multiple-sums','Heap (Priority Queue)','heap-priority-queue'),(1355,'activity-participants','Database','database'),(1356,'sort-integers-by-the-number-of-1-bits','Array','array'),(1356,'sort-integers-by-the-number-of-1-bits','Bit Manipulation','bit-manipulation'),(1356,'sort-integers-by-the-number-of-1-bits','Sorting','sorting'),(1356,'sort-integers-by-the-number-of-1-bits','Counting','counting'),(1357,'apply-discount-every-n-orders','Array','array'),(1357,'apply-discount-every-n-orders','Hash Table','hash-table'),(1357,'apply-discount-every-n-orders','Design','design'),(1358,'number-of-substrings-containing-all-three-characters','Hash Table','hash-table'),(1358,'number-of-substrings-containing-all-three-characters','String','string'),(1358,'number-of-substrings-containing-all-three-characters','Sliding Window','sliding-window'),(1359,'count-all-valid-pickup-and-delivery-options','Math','math'),(1359,'count-all-valid-pickup-and-delivery-options','Dynamic Programming','dynamic-programming'),(1359,'count-all-valid-pickup-and-delivery-options','Combinatorics','combinatorics'),(1360,'number-of-days-between-two-dates','Math','math'),(1360,'number-of-days-between-two-dates','String','string'),(1361,'validate-binary-tree-nodes','Tree','tree'),(1361,'validate-binary-tree-nodes','Depth-First Search','depth-first-search'),(1361,'validate-binary-tree-nodes','Breadth-First Search','breadth-first-search'),(1361,'validate-binary-tree-nodes','Union Find','union-find'),(1361,'validate-binary-tree-nodes','Graph','graph'),(1361,'validate-binary-tree-nodes','Binary Tree','binary-tree'),(1362,'closest-divisors','Math','math'),(1363,'largest-multiple-of-three','Array','array'),(1363,'largest-multiple-of-three','Dynamic Programming','dynamic-programming'),(1363,'largest-multiple-of-three','Greedy','greedy'),(1364,'number-of-trusted-contacts-of-a-customer','Database','database'),(1365,'how-many-numbers-are-smaller-than-the-current-number','Array','array'),(1365,'how-many-numbers-are-smaller-than-the-current-number','Hash Table','hash-table'),(1365,'how-many-numbers-are-smaller-than-the-current-number','Sorting','sorting'),(1365,'how-many-numbers-are-smaller-than-the-current-number','Counting','counting'),(1366,'rank-teams-by-votes','Array','array'),(1366,'rank-teams-by-votes','Hash Table','hash-table'),(1366,'rank-teams-by-votes','String','string'),(1366,'rank-teams-by-votes','Sorting','sorting'),(1366,'rank-teams-by-votes','Counting','counting'),(1367,'linked-list-in-binary-tree','Linked List','linked-list'),(1367,'linked-list-in-binary-tree','Tree','tree'),(1367,'linked-list-in-binary-tree','Depth-First Search','depth-first-search'),(1367,'linked-list-in-binary-tree','Breadth-First Search','breadth-first-search'),(1367,'linked-list-in-binary-tree','Binary Tree','binary-tree'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Array','array'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Breadth-First Search','breadth-first-search'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Graph','graph'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Heap (Priority Queue)','heap-priority-queue'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Matrix','matrix'),(1368,'minimum-cost-to-make-at-least-one-valid-path-in-a-grid','Shortest Path','shortest-path'),(1369,'get-the-second-most-recent-activity','Database','database'),(1370,'increasing-decreasing-string','Hash Table','hash-table'),(1370,'increasing-decreasing-string','String','string'),(1370,'increasing-decreasing-string','Counting','counting'),(1371,'find-the-longest-substring-containing-vowels-in-even-counts','Hash Table','hash-table'),(1371,'find-the-longest-substring-containing-vowels-in-even-counts','String','string'),(1371,'find-the-longest-substring-containing-vowels-in-even-counts','Bit Manipulation','bit-manipulation'),(1371,'find-the-longest-substring-containing-vowels-in-even-counts','Prefix Sum','prefix-sum'),(1372,'longest-zigzag-path-in-a-binary-tree','Dynamic Programming','dynamic-programming'),(1372,'longest-zigzag-path-in-a-binary-tree','Tree','tree'),(1372,'longest-zigzag-path-in-a-binary-tree','Depth-First Search','depth-first-search'),(1372,'longest-zigzag-path-in-a-binary-tree','Binary Tree','binary-tree'),(1373,'maximum-sum-bst-in-binary-tree','Dynamic Programming','dynamic-programming'),(1373,'maximum-sum-bst-in-binary-tree','Tree','tree'),(1373,'maximum-sum-bst-in-binary-tree','Depth-First Search','depth-first-search'),(1373,'maximum-sum-bst-in-binary-tree','Binary Search Tree','binary-search-tree'),(1373,'maximum-sum-bst-in-binary-tree','Binary Tree','binary-tree'),(1374,'generate-a-string-with-characters-that-have-odd-counts','String','string'),(1375,'number-of-times-binary-string-is-prefix-aligned','Array','array'),(1376,'time-needed-to-inform-all-employees','Tree','tree'),(1376,'time-needed-to-inform-all-employees','Depth-First Search','depth-first-search'),(1376,'time-needed-to-inform-all-employees','Breadth-First Search','breadth-first-search'),(1377,'frog-position-after-t-seconds','Tree','tree'),(1377,'frog-position-after-t-seconds','Depth-First Search','depth-first-search'),(1377,'frog-position-after-t-seconds','Breadth-First Search','breadth-first-search'),(1377,'frog-position-after-t-seconds','Graph','graph'),(1378,'replace-employee-id-with-the-unique-identifier','Database','database'),(1379,'find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree','Tree','tree'),(1379,'find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree','Depth-First Search','depth-first-search'),(1379,'find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree','Breadth-First Search','breadth-first-search'),(1379,'find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree','Binary Tree','binary-tree'),(1380,'lucky-numbers-in-a-matrix','Array','array'),(1380,'lucky-numbers-in-a-matrix','Matrix','matrix'),(1381,'design-a-stack-with-increment-operation','Array','array'),(1381,'design-a-stack-with-increment-operation','Stack','stack'),(1381,'design-a-stack-with-increment-operation','Design','design'),(1382,'balance-a-binary-search-tree','Divide and Conquer','divide-and-conquer'),(1382,'balance-a-binary-search-tree','Greedy','greedy'),(1382,'balance-a-binary-search-tree','Tree','tree'),(1382,'balance-a-binary-search-tree','Depth-First Search','depth-first-search'),(1382,'balance-a-binary-search-tree','Binary Search Tree','binary-search-tree'),(1382,'balance-a-binary-search-tree','Binary Tree','binary-tree'),(1383,'maximum-performance-of-a-team','Array','array'),(1383,'maximum-performance-of-a-team','Greedy','greedy'),(1383,'maximum-performance-of-a-team','Sorting','sorting'),(1383,'maximum-performance-of-a-team','Heap (Priority Queue)','heap-priority-queue'),(1384,'total-sales-amount-by-year','Database','database'),(1385,'find-the-distance-value-between-two-arrays','Array','array'),(1385,'find-the-distance-value-between-two-arrays','Two Pointers','two-pointers'),(1385,'find-the-distance-value-between-two-arrays','Binary Search','binary-search'),(1385,'find-the-distance-value-between-two-arrays','Sorting','sorting'),(1386,'cinema-seat-allocation','Array','array'),(1386,'cinema-seat-allocation','Hash Table','hash-table'),(1386,'cinema-seat-allocation','Greedy','greedy'),(1386,'cinema-seat-allocation','Bit Manipulation','bit-manipulation'),(1387,'sort-integers-by-the-power-value','Dynamic Programming','dynamic-programming'),(1387,'sort-integers-by-the-power-value','Memoization','memoization'),(1387,'sort-integers-by-the-power-value','Sorting','sorting'),(1388,'pizza-with-3n-slices','Array','array'),(1388,'pizza-with-3n-slices','Dynamic Programming','dynamic-programming'),(1388,'pizza-with-3n-slices','Greedy','greedy'),(1388,'pizza-with-3n-slices','Heap (Priority Queue)','heap-priority-queue'),(1389,'create-target-array-in-the-given-order','Array','array'),(1389,'create-target-array-in-the-given-order','Simulation','simulation'),(1390,'four-divisors','Array','array'),(1390,'four-divisors','Math','math'),(1391,'check-if-there-is-a-valid-path-in-a-grid','Array','array'),(1391,'check-if-there-is-a-valid-path-in-a-grid','Depth-First Search','depth-first-search'),(1391,'check-if-there-is-a-valid-path-in-a-grid','Breadth-First Search','breadth-first-search'),(1391,'check-if-there-is-a-valid-path-in-a-grid','Union Find','union-find'),(1391,'check-if-there-is-a-valid-path-in-a-grid','Matrix','matrix'),(1392,'longest-happy-prefix','String','string'),(1392,'longest-happy-prefix','Rolling Hash','rolling-hash'),(1392,'longest-happy-prefix','String Matching','string-matching'),(1392,'longest-happy-prefix','Hash Function','hash-function'),(1393,'capital-gainloss','Database','database'),(1394,'find-lucky-integer-in-an-array','Array','array'),(1394,'find-lucky-integer-in-an-array','Hash Table','hash-table'),(1394,'find-lucky-integer-in-an-array','Counting','counting'),(1395,'count-number-of-teams','Array','array'),(1395,'count-number-of-teams','Dynamic Programming','dynamic-programming'),(1395,'count-number-of-teams','Binary Indexed Tree','binary-indexed-tree'),(1396,'design-underground-system','Hash Table','hash-table'),(1396,'design-underground-system','String','string'),(1396,'design-underground-system','Design','design'),(1397,'find-all-good-strings','String','string'),(1397,'find-all-good-strings','Dynamic Programming','dynamic-programming'),(1397,'find-all-good-strings','String Matching','string-matching'),(1398,'customers-who-bought-products-a-and-b-but-not-c','Database','database'),(1399,'count-largest-group','Hash Table','hash-table'),(1399,'count-largest-group','Math','math'),(1400,'construct-k-palindrome-strings','Hash Table','hash-table'),(1400,'construct-k-palindrome-strings','String','string'),(1400,'construct-k-palindrome-strings','Greedy','greedy'),(1400,'construct-k-palindrome-strings','Counting','counting'),(1401,'circle-and-rectangle-overlapping','Math','math'),(1401,'circle-and-rectangle-overlapping','Geometry','geometry'),(1402,'reducing-dishes','Array','array'),(1402,'reducing-dishes','Dynamic Programming','dynamic-programming'),(1402,'reducing-dishes','Greedy','greedy'),(1402,'reducing-dishes','Sorting','sorting'),(1403,'minimum-subsequence-in-non-increasing-order','Array','array'),(1403,'minimum-subsequence-in-non-increasing-order','Greedy','greedy'),(1403,'minimum-subsequence-in-non-increasing-order','Sorting','sorting'),(1404,'number-of-steps-to-reduce-a-number-in-binary-representation-to-one','String','string'),(1404,'number-of-steps-to-reduce-a-number-in-binary-representation-to-one','Bit Manipulation','bit-manipulation'),(1405,'longest-happy-string','String','string'),(1405,'longest-happy-string','Greedy','greedy'),(1405,'longest-happy-string','Heap (Priority Queue)','heap-priority-queue'),(1406,'stone-game-iii','Array','array'),(1406,'stone-game-iii','Math','math'),(1406,'stone-game-iii','Dynamic Programming','dynamic-programming'),(1406,'stone-game-iii','Game Theory','game-theory'),(1407,'top-travellers','Database','database'),(1408,'string-matching-in-an-array','Array','array'),(1408,'string-matching-in-an-array','String','string'),(1408,'string-matching-in-an-array','String Matching','string-matching'),(1409,'queries-on-a-permutation-with-key','Array','array'),(1409,'queries-on-a-permutation-with-key','Binary Indexed Tree','binary-indexed-tree'),(1409,'queries-on-a-permutation-with-key','Simulation','simulation'),(1410,'html-entity-parser','Hash Table','hash-table'),(1410,'html-entity-parser','String','string'),(1411,'number-of-ways-to-paint-n-3-grid','Dynamic Programming','dynamic-programming'),(1412,'find-the-quiet-students-in-all-exams','Database','database'),(1413,'minimum-value-to-get-positive-step-by-step-sum','Array','array'),(1413,'minimum-value-to-get-positive-step-by-step-sum','Prefix Sum','prefix-sum'),(1414,'find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k','Math','math'),(1414,'find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k','Greedy','greedy'),(1415,'the-k-th-lexicographical-string-of-all-happy-strings-of-length-n','String','string'),(1415,'the-k-th-lexicographical-string-of-all-happy-strings-of-length-n','Backtracking','backtracking'),(1416,'restore-the-array','String','string'),(1416,'restore-the-array','Dynamic Programming','dynamic-programming'),(1417,'reformat-the-string','String','string'),(1418,'display-table-of-food-orders-in-a-restaurant','Array','array'),(1418,'display-table-of-food-orders-in-a-restaurant','Hash Table','hash-table'),(1418,'display-table-of-food-orders-in-a-restaurant','String','string'),(1418,'display-table-of-food-orders-in-a-restaurant','Sorting','sorting'),(1418,'display-table-of-food-orders-in-a-restaurant','Ordered Set','ordered-set'),(1419,'minimum-number-of-frogs-croaking','String','string'),(1419,'minimum-number-of-frogs-croaking','Counting','counting'),(1420,'build-array-where-you-can-find-the-maximum-exactly-k-comparisons','Dynamic Programming','dynamic-programming'),(1421,'npv-queries','Database','database'),(1422,'maximum-score-after-splitting-a-string','String','string'),(1423,'maximum-points-you-can-obtain-from-cards','Array','array'),(1423,'maximum-points-you-can-obtain-from-cards','Sliding Window','sliding-window'),(1423,'maximum-points-you-can-obtain-from-cards','Prefix Sum','prefix-sum'),(1424,'diagonal-traverse-ii','Array','array'),(1424,'diagonal-traverse-ii','Sorting','sorting'),(1424,'diagonal-traverse-ii','Heap (Priority Queue)','heap-priority-queue'),(1425,'constrained-subsequence-sum','Array','array'),(1425,'constrained-subsequence-sum','Dynamic Programming','dynamic-programming'),(1425,'constrained-subsequence-sum','Queue','queue'),(1425,'constrained-subsequence-sum','Sliding Window','sliding-window'),(1425,'constrained-subsequence-sum','Heap (Priority Queue)','heap-priority-queue'),(1425,'constrained-subsequence-sum','Monotonic Queue','monotonic-queue'),(1426,'counting-elements','Array','array'),(1426,'counting-elements','Hash Table','hash-table'),(1427,'perform-string-shifts','Array','array'),(1427,'perform-string-shifts','Math','math'),(1427,'perform-string-shifts','String','string'),(1428,'leftmost-column-with-at-least-a-one','Array','array'),(1428,'leftmost-column-with-at-least-a-one','Binary Search','binary-search'),(1428,'leftmost-column-with-at-least-a-one','Matrix','matrix'),(1428,'leftmost-column-with-at-least-a-one','Interactive','interactive'),(1429,'first-unique-number','Array','array'),(1429,'first-unique-number','Hash Table','hash-table'),(1429,'first-unique-number','Design','design'),(1429,'first-unique-number','Queue','queue'),(1429,'first-unique-number','Data Stream','data-stream'),(1430,'check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree','Tree','tree'),(1430,'check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree','Depth-First Search','depth-first-search'),(1430,'check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree','Breadth-First Search','breadth-first-search'),(1430,'check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree','Binary Tree','binary-tree'),(1431,'kids-with-the-greatest-number-of-candies','Array','array'),(1432,'max-difference-you-can-get-from-changing-an-integer','Math','math'),(1432,'max-difference-you-can-get-from-changing-an-integer','Greedy','greedy'),(1433,'check-if-a-string-can-break-another-string','String','string'),(1433,'check-if-a-string-can-break-another-string','Greedy','greedy'),(1433,'check-if-a-string-can-break-another-string','Sorting','sorting'),(1434,'number-of-ways-to-wear-different-hats-to-each-other','Array','array'),(1434,'number-of-ways-to-wear-different-hats-to-each-other','Dynamic Programming','dynamic-programming'),(1434,'number-of-ways-to-wear-different-hats-to-each-other','Bit Manipulation','bit-manipulation'),(1434,'number-of-ways-to-wear-different-hats-to-each-other','Bitmask','bitmask'),(1435,'create-a-session-bar-chart','Database','database'),(1436,'destination-city','Hash Table','hash-table'),(1436,'destination-city','String','string'),(1437,'check-if-all-1s-are-at-least-length-k-places-away','Array','array'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Array','array'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Queue','queue'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Sliding Window','sliding-window'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Heap (Priority Queue)','heap-priority-queue'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Ordered Set','ordered-set'),(1438,'longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit','Monotonic Queue','monotonic-queue'),(1439,'find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows','Array','array'),(1439,'find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows','Binary Search','binary-search'),(1439,'find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows','Heap (Priority Queue)','heap-priority-queue'),(1439,'find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows','Matrix','matrix'),(1440,'evaluate-boolean-expression','Database','database'),(1441,'build-an-array-with-stack-operations','Array','array'),(1441,'build-an-array-with-stack-operations','Stack','stack'),(1441,'build-an-array-with-stack-operations','Simulation','simulation'),(1442,'count-triplets-that-can-form-two-arrays-of-equal-xor','Array','array'),(1442,'count-triplets-that-can-form-two-arrays-of-equal-xor','Hash Table','hash-table'),(1442,'count-triplets-that-can-form-two-arrays-of-equal-xor','Math','math'),(1442,'count-triplets-that-can-form-two-arrays-of-equal-xor','Bit Manipulation','bit-manipulation'),(1442,'count-triplets-that-can-form-two-arrays-of-equal-xor','Prefix Sum','prefix-sum'),(1443,'minimum-time-to-collect-all-apples-in-a-tree','Hash Table','hash-table'),(1443,'minimum-time-to-collect-all-apples-in-a-tree','Tree','tree'),(1443,'minimum-time-to-collect-all-apples-in-a-tree','Depth-First Search','depth-first-search'),(1443,'minimum-time-to-collect-all-apples-in-a-tree','Breadth-First Search','breadth-first-search'),(1444,'number-of-ways-of-cutting-a-pizza','Array','array'),(1444,'number-of-ways-of-cutting-a-pizza','Dynamic Programming','dynamic-programming'),(1444,'number-of-ways-of-cutting-a-pizza','Memoization','memoization'),(1444,'number-of-ways-of-cutting-a-pizza','Matrix','matrix'),(1445,'apples-oranges','Database','database'),(1446,'consecutive-characters','String','string'),(1447,'simplified-fractions','Math','math'),(1447,'simplified-fractions','String','string'),(1447,'simplified-fractions','Number Theory','number-theory'),(1448,'count-good-nodes-in-binary-tree','Tree','tree'),(1448,'count-good-nodes-in-binary-tree','Depth-First Search','depth-first-search'),(1448,'count-good-nodes-in-binary-tree','Breadth-First Search','breadth-first-search'),(1448,'count-good-nodes-in-binary-tree','Binary Tree','binary-tree'),(1449,'form-largest-integer-with-digits-that-add-up-to-target','Array','array'),(1449,'form-largest-integer-with-digits-that-add-up-to-target','Dynamic Programming','dynamic-programming'),(1450,'number-of-students-doing-homework-at-a-given-time','Array','array'),(1451,'rearrange-words-in-a-sentence','String','string'),(1451,'rearrange-words-in-a-sentence','Sorting','sorting'),(1452,'people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list','Array','array'),(1452,'people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list','Hash Table','hash-table'),(1452,'people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list','String','string'),(1453,'maximum-number-of-darts-inside-of-a-circular-dartboard','Array','array'),(1453,'maximum-number-of-darts-inside-of-a-circular-dartboard','Math','math'),(1453,'maximum-number-of-darts-inside-of-a-circular-dartboard','Geometry','geometry'),(1454,'active-users','Database','database'),(1455,'check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence','String','string'),(1455,'check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence','String Matching','string-matching'),(1456,'maximum-number-of-vowels-in-a-substring-of-given-length','String','string'),(1456,'maximum-number-of-vowels-in-a-substring-of-given-length','Sliding Window','sliding-window'),(1457,'pseudo-palindromic-paths-in-a-binary-tree','Bit Manipulation','bit-manipulation'),(1457,'pseudo-palindromic-paths-in-a-binary-tree','Tree','tree'),(1457,'pseudo-palindromic-paths-in-a-binary-tree','Depth-First Search','depth-first-search'),(1457,'pseudo-palindromic-paths-in-a-binary-tree','Breadth-First Search','breadth-first-search'),(1457,'pseudo-palindromic-paths-in-a-binary-tree','Binary Tree','binary-tree'),(1458,'max-dot-product-of-two-subsequences','Array','array'),(1458,'max-dot-product-of-two-subsequences','Dynamic Programming','dynamic-programming'),(1459,'rectangles-area','Database','database'),(1460,'make-two-arrays-equal-by-reversing-subarrays','Array','array'),(1460,'make-two-arrays-equal-by-reversing-subarrays','Hash Table','hash-table'),(1460,'make-two-arrays-equal-by-reversing-subarrays','Sorting','sorting'),(1461,'check-if-a-string-contains-all-binary-codes-of-size-k','Hash Table','hash-table'),(1461,'check-if-a-string-contains-all-binary-codes-of-size-k','String','string'),(1461,'check-if-a-string-contains-all-binary-codes-of-size-k','Bit Manipulation','bit-manipulation'),(1461,'check-if-a-string-contains-all-binary-codes-of-size-k','Rolling Hash','rolling-hash'),(1461,'check-if-a-string-contains-all-binary-codes-of-size-k','Hash Function','hash-function'),(1462,'course-schedule-iv','Depth-First Search','depth-first-search'),(1462,'course-schedule-iv','Breadth-First Search','breadth-first-search'),(1462,'course-schedule-iv','Graph','graph'),(1462,'course-schedule-iv','Topological Sort','topological-sort'),(1463,'cherry-pickup-ii','Array','array'),(1463,'cherry-pickup-ii','Dynamic Programming','dynamic-programming'),(1463,'cherry-pickup-ii','Matrix','matrix'),(1464,'maximum-product-of-two-elements-in-an-array','Array','array'),(1464,'maximum-product-of-two-elements-in-an-array','Sorting','sorting'),(1464,'maximum-product-of-two-elements-in-an-array','Heap (Priority Queue)','heap-priority-queue'),(1465,'maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts','Array','array'),(1465,'maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts','Greedy','greedy'),(1465,'maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts','Sorting','sorting'),(1466,'reorder-routes-to-make-all-paths-lead-to-the-city-zero','Depth-First Search','depth-first-search'),(1466,'reorder-routes-to-make-all-paths-lead-to-the-city-zero','Breadth-First Search','breadth-first-search'),(1466,'reorder-routes-to-make-all-paths-lead-to-the-city-zero','Graph','graph'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Array','array'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Math','math'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Dynamic Programming','dynamic-programming'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Backtracking','backtracking'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Combinatorics','combinatorics'),(1467,'probability-of-a-two-boxes-having-the-same-number-of-distinct-balls','Probability and Statistics','probability-and-statistics'),(1468,'calculate-salaries','Database','database'),(1469,'find-all-the-lonely-nodes','Tree','tree'),(1469,'find-all-the-lonely-nodes','Depth-First Search','depth-first-search'),(1469,'find-all-the-lonely-nodes','Breadth-First Search','breadth-first-search'),(1469,'find-all-the-lonely-nodes','Binary Tree','binary-tree'),(1470,'shuffle-the-array','Array','array'),(1471,'the-k-strongest-values-in-an-array','Array','array'),(1471,'the-k-strongest-values-in-an-array','Two Pointers','two-pointers'),(1471,'the-k-strongest-values-in-an-array','Sorting','sorting'),(1472,'design-browser-history','Array','array'),(1472,'design-browser-history','Linked List','linked-list'),(1472,'design-browser-history','Stack','stack'),(1472,'design-browser-history','Design','design'),(1472,'design-browser-history','Doubly-Linked List','doubly-linked-list'),(1472,'design-browser-history','Data Stream','data-stream'),(1473,'paint-house-iii','Array','array'),(1473,'paint-house-iii','Dynamic Programming','dynamic-programming'),(1474,'delete-n-nodes-after-m-nodes-of-a-linked-list','Linked List','linked-list'),(1475,'final-prices-with-a-special-discount-in-a-shop','Array','array'),(1475,'final-prices-with-a-special-discount-in-a-shop','Stack','stack'),(1475,'final-prices-with-a-special-discount-in-a-shop','Monotonic Stack','monotonic-stack'),(1476,'subrectangle-queries','Array','array'),(1476,'subrectangle-queries','Design','design'),(1476,'subrectangle-queries','Matrix','matrix'),(1477,'find-two-non-overlapping-sub-arrays-each-with-target-sum','Array','array'),(1477,'find-two-non-overlapping-sub-arrays-each-with-target-sum','Hash Table','hash-table'),(1477,'find-two-non-overlapping-sub-arrays-each-with-target-sum','Binary Search','binary-search'),(1477,'find-two-non-overlapping-sub-arrays-each-with-target-sum','Dynamic Programming','dynamic-programming'),(1477,'find-two-non-overlapping-sub-arrays-each-with-target-sum','Sliding Window','sliding-window'),(1478,'allocate-mailboxes','Array','array'),(1478,'allocate-mailboxes','Math','math'),(1478,'allocate-mailboxes','Dynamic Programming','dynamic-programming'),(1478,'allocate-mailboxes','Sorting','sorting'),(1479,'sales-by-day-of-the-week','Database','database'),(1480,'running-sum-of-1d-array','Array','array'),(1480,'running-sum-of-1d-array','Prefix Sum','prefix-sum'),(1481,'least-number-of-unique-integers-after-k-removals','Array','array'),(1481,'least-number-of-unique-integers-after-k-removals','Hash Table','hash-table'),(1481,'least-number-of-unique-integers-after-k-removals','Greedy','greedy'),(1481,'least-number-of-unique-integers-after-k-removals','Sorting','sorting'),(1481,'least-number-of-unique-integers-after-k-removals','Counting','counting'),(1482,'minimum-number-of-days-to-make-m-bouquets','Array','array'),(1482,'minimum-number-of-days-to-make-m-bouquets','Binary Search','binary-search'),(1483,'kth-ancestor-of-a-tree-node','Binary Search','binary-search'),(1483,'kth-ancestor-of-a-tree-node','Dynamic Programming','dynamic-programming'),(1483,'kth-ancestor-of-a-tree-node','Tree','tree'),(1483,'kth-ancestor-of-a-tree-node','Depth-First Search','depth-first-search'),(1483,'kth-ancestor-of-a-tree-node','Breadth-First Search','breadth-first-search'),(1483,'kth-ancestor-of-a-tree-node','Design','design'),(1484,'group-sold-products-by-the-date','Database','database'),(1485,'clone-binary-tree-with-random-pointer','Hash Table','hash-table'),(1485,'clone-binary-tree-with-random-pointer','Tree','tree'),(1485,'clone-binary-tree-with-random-pointer','Depth-First Search','depth-first-search'),(1485,'clone-binary-tree-with-random-pointer','Breadth-First Search','breadth-first-search'),(1485,'clone-binary-tree-with-random-pointer','Binary Tree','binary-tree'),(1486,'xor-operation-in-an-array','Math','math'),(1486,'xor-operation-in-an-array','Bit Manipulation','bit-manipulation'),(1487,'making-file-names-unique','Array','array'),(1487,'making-file-names-unique','Hash Table','hash-table'),(1487,'making-file-names-unique','String','string'),(1488,'avoid-flood-in-the-city','Array','array'),(1488,'avoid-flood-in-the-city','Hash Table','hash-table'),(1488,'avoid-flood-in-the-city','Binary Search','binary-search'),(1488,'avoid-flood-in-the-city','Greedy','greedy'),(1488,'avoid-flood-in-the-city','Heap (Priority Queue)','heap-priority-queue'),(1489,'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree','Union Find','union-find'),(1489,'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree','Graph','graph'),(1489,'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree','Sorting','sorting'),(1489,'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree','Minimum Spanning Tree','minimum-spanning-tree'),(1489,'find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree','Strongly Connected Component','strongly-connected-component'),(1490,'clone-n-ary-tree','Hash Table','hash-table'),(1490,'clone-n-ary-tree','Tree','tree'),(1490,'clone-n-ary-tree','Depth-First Search','depth-first-search'),(1490,'clone-n-ary-tree','Breadth-First Search','breadth-first-search'),(1491,'average-salary-excluding-the-minimum-and-maximum-salary','Array','array'),(1491,'average-salary-excluding-the-minimum-and-maximum-salary','Sorting','sorting'),(1492,'the-kth-factor-of-n','Math','math'),(1493,'longest-subarray-of-1s-after-deleting-one-element','Array','array'),(1493,'longest-subarray-of-1s-after-deleting-one-element','Dynamic Programming','dynamic-programming'),(1493,'longest-subarray-of-1s-after-deleting-one-element','Sliding Window','sliding-window'),(1494,'parallel-courses-ii','Dynamic Programming','dynamic-programming'),(1494,'parallel-courses-ii','Bit Manipulation','bit-manipulation'),(1494,'parallel-courses-ii','Graph','graph'),(1494,'parallel-courses-ii','Bitmask','bitmask'),(1495,'friendly-movies-streamed-last-month','Database','database'),(1496,'path-crossing','Hash Table','hash-table'),(1496,'path-crossing','String','string'),(1497,'check-if-array-pairs-are-divisible-by-k','Array','array'),(1497,'check-if-array-pairs-are-divisible-by-k','Hash Table','hash-table'),(1497,'check-if-array-pairs-are-divisible-by-k','Counting','counting'),(1498,'number-of-subsequences-that-satisfy-the-given-sum-condition','Array','array'),(1498,'number-of-subsequences-that-satisfy-the-given-sum-condition','Two Pointers','two-pointers'),(1498,'number-of-subsequences-that-satisfy-the-given-sum-condition','Binary Search','binary-search'),(1498,'number-of-subsequences-that-satisfy-the-given-sum-condition','Sorting','sorting'),(1499,'max-value-of-equation','Array','array'),(1499,'max-value-of-equation','Queue','queue'),(1499,'max-value-of-equation','Sliding Window','sliding-window'),(1499,'max-value-of-equation','Heap (Priority Queue)','heap-priority-queue'),(1499,'max-value-of-equation','Monotonic Queue','monotonic-queue'),(1500,'design-a-file-sharing-system','Hash Table','hash-table'),(1500,'design-a-file-sharing-system','Design','design'),(1500,'design-a-file-sharing-system','Heap (Priority Queue)','heap-priority-queue'),(1500,'design-a-file-sharing-system','Data Stream','data-stream'),(1501,'countries-you-can-safely-invest-in','Database','database'),(1502,'can-make-arithmetic-progression-from-sequence','Array','array'),(1502,'can-make-arithmetic-progression-from-sequence','Sorting','sorting'),(1503,'last-moment-before-all-ants-fall-out-of-a-plank','Array','array'),(1503,'last-moment-before-all-ants-fall-out-of-a-plank','Brainteaser','brainteaser'),(1503,'last-moment-before-all-ants-fall-out-of-a-plank','Simulation','simulation'),(1504,'count-submatrices-with-all-ones','Array','array'),(1504,'count-submatrices-with-all-ones','Dynamic Programming','dynamic-programming'),(1504,'count-submatrices-with-all-ones','Stack','stack'),(1504,'count-submatrices-with-all-ones','Matrix','matrix'),(1504,'count-submatrices-with-all-ones','Monotonic Stack','monotonic-stack'),(1505,'minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits','String','string'),(1505,'minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits','Greedy','greedy'),(1505,'minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits','Binary Indexed Tree','binary-indexed-tree'),(1505,'minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits','Segment Tree','segment-tree'),(1506,'find-root-of-n-ary-tree','Hash Table','hash-table'),(1506,'find-root-of-n-ary-tree','Bit Manipulation','bit-manipulation'),(1506,'find-root-of-n-ary-tree','Tree','tree'),(1506,'find-root-of-n-ary-tree','Depth-First Search','depth-first-search'),(1507,'reformat-date','String','string'),(1508,'range-sum-of-sorted-subarray-sums','Array','array'),(1508,'range-sum-of-sorted-subarray-sums','Two Pointers','two-pointers'),(1508,'range-sum-of-sorted-subarray-sums','Binary Search','binary-search'),(1508,'range-sum-of-sorted-subarray-sums','Sorting','sorting'),(1509,'minimum-difference-between-largest-and-smallest-value-in-three-moves','Array','array'),(1509,'minimum-difference-between-largest-and-smallest-value-in-three-moves','Greedy','greedy'),(1509,'minimum-difference-between-largest-and-smallest-value-in-three-moves','Sorting','sorting'),(1510,'stone-game-iv','Math','math'),(1510,'stone-game-iv','Dynamic Programming','dynamic-programming'),(1510,'stone-game-iv','Game Theory','game-theory'),(1511,'customer-order-frequency','Database','database'),(1512,'number-of-good-pairs','Array','array'),(1512,'number-of-good-pairs','Hash Table','hash-table'),(1512,'number-of-good-pairs','Math','math'),(1512,'number-of-good-pairs','Counting','counting'),(1513,'number-of-substrings-with-only-1s','Math','math'),(1513,'number-of-substrings-with-only-1s','String','string'),(1514,'path-with-maximum-probability','Array','array'),(1514,'path-with-maximum-probability','Graph','graph'),(1514,'path-with-maximum-probability','Heap (Priority Queue)','heap-priority-queue'),(1514,'path-with-maximum-probability','Shortest Path','shortest-path'),(1515,'best-position-for-a-service-centre','Math','math'),(1515,'best-position-for-a-service-centre','Geometry','geometry'),(1515,'best-position-for-a-service-centre','Randomized','randomized'),(1516,'move-sub-tree-of-n-ary-tree','Tree','tree'),(1516,'move-sub-tree-of-n-ary-tree','Depth-First Search','depth-first-search'),(1517,'find-users-with-valid-e-mails','Database','database'),(1518,'water-bottles','Math','math'),(1518,'water-bottles','Simulation','simulation'),(1519,'number-of-nodes-in-the-sub-tree-with-the-same-label','Hash Table','hash-table'),(1519,'number-of-nodes-in-the-sub-tree-with-the-same-label','Tree','tree'),(1519,'number-of-nodes-in-the-sub-tree-with-the-same-label','Depth-First Search','depth-first-search'),(1519,'number-of-nodes-in-the-sub-tree-with-the-same-label','Breadth-First Search','breadth-first-search'),(1519,'number-of-nodes-in-the-sub-tree-with-the-same-label','Counting','counting'),(1520,'maximum-number-of-non-overlapping-substrings','String','string'),(1520,'maximum-number-of-non-overlapping-substrings','Greedy','greedy'),(1521,'find-a-value-of-a-mysterious-function-closest-to-target','Array','array'),(1521,'find-a-value-of-a-mysterious-function-closest-to-target','Binary Search','binary-search'),(1521,'find-a-value-of-a-mysterious-function-closest-to-target','Bit Manipulation','bit-manipulation'),(1521,'find-a-value-of-a-mysterious-function-closest-to-target','Segment Tree','segment-tree'),(1522,'diameter-of-n-ary-tree','Tree','tree'),(1522,'diameter-of-n-ary-tree','Depth-First Search','depth-first-search'),(1523,'count-odd-numbers-in-an-interval-range','Math','math'),(1524,'number-of-sub-arrays-with-odd-sum','Array','array'),(1524,'number-of-sub-arrays-with-odd-sum','Math','math'),(1524,'number-of-sub-arrays-with-odd-sum','Dynamic Programming','dynamic-programming'),(1524,'number-of-sub-arrays-with-odd-sum','Prefix Sum','prefix-sum'),(1525,'number-of-good-ways-to-split-a-string','String','string'),(1525,'number-of-good-ways-to-split-a-string','Dynamic Programming','dynamic-programming'),(1525,'number-of-good-ways-to-split-a-string','Bit Manipulation','bit-manipulation'),(1526,'minimum-number-of-increments-on-subarrays-to-form-a-target-array','Array','array'),(1526,'minimum-number-of-increments-on-subarrays-to-form-a-target-array','Dynamic Programming','dynamic-programming'),(1526,'minimum-number-of-increments-on-subarrays-to-form-a-target-array','Stack','stack'),(1526,'minimum-number-of-increments-on-subarrays-to-form-a-target-array','Greedy','greedy'),(1526,'minimum-number-of-increments-on-subarrays-to-form-a-target-array','Monotonic Stack','monotonic-stack'),(1527,'patients-with-a-condition','Database','database'),(1528,'shuffle-string','Array','array'),(1528,'shuffle-string','String','string'),(1529,'minimum-suffix-flips','String','string'),(1529,'minimum-suffix-flips','Greedy','greedy'),(1530,'number-of-good-leaf-nodes-pairs','Tree','tree'),(1530,'number-of-good-leaf-nodes-pairs','Depth-First Search','depth-first-search'),(1530,'number-of-good-leaf-nodes-pairs','Binary Tree','binary-tree'),(1531,'string-compression-ii','String','string'),(1531,'string-compression-ii','Dynamic Programming','dynamic-programming'),(1532,'the-most-recent-three-orders','Database','database'),(1533,'find-the-index-of-the-large-integer','Array','array'),(1533,'find-the-index-of-the-large-integer','Binary Search','binary-search'),(1533,'find-the-index-of-the-large-integer','Interactive','interactive'),(1534,'count-good-triplets','Array','array'),(1534,'count-good-triplets','Enumeration','enumeration'),(1535,'find-the-winner-of-an-array-game','Array','array'),(1535,'find-the-winner-of-an-array-game','Simulation','simulation'),(1536,'minimum-swaps-to-arrange-a-binary-grid','Array','array'),(1536,'minimum-swaps-to-arrange-a-binary-grid','Greedy','greedy'),(1536,'minimum-swaps-to-arrange-a-binary-grid','Matrix','matrix'),(1537,'get-the-maximum-score','Array','array'),(1537,'get-the-maximum-score','Two Pointers','two-pointers'),(1537,'get-the-maximum-score','Dynamic Programming','dynamic-programming'),(1537,'get-the-maximum-score','Greedy','greedy'),(1538,'guess-the-majority-in-a-hidden-array','Array','array'),(1538,'guess-the-majority-in-a-hidden-array','Math','math'),(1538,'guess-the-majority-in-a-hidden-array','Interactive','interactive'),(1539,'kth-missing-positive-number','Array','array'),(1539,'kth-missing-positive-number','Binary Search','binary-search'),(1540,'can-convert-string-in-k-moves','Hash Table','hash-table'),(1540,'can-convert-string-in-k-moves','String','string'),(1541,'minimum-insertions-to-balance-a-parentheses-string','String','string'),(1541,'minimum-insertions-to-balance-a-parentheses-string','Stack','stack'),(1541,'minimum-insertions-to-balance-a-parentheses-string','Greedy','greedy'),(1542,'find-longest-awesome-substring','Hash Table','hash-table'),(1542,'find-longest-awesome-substring','String','string'),(1542,'find-longest-awesome-substring','Bit Manipulation','bit-manipulation'),(1543,'fix-product-name-format','Database','database'),(1544,'make-the-string-great','String','string'),(1544,'make-the-string-great','Stack','stack'),(1545,'find-kth-bit-in-nth-binary-string','String','string'),(1545,'find-kth-bit-in-nth-binary-string','Recursion','recursion'),(1546,'maximum-number-of-non-overlapping-subarrays-with-sum-equals-target','Array','array'),(1546,'maximum-number-of-non-overlapping-subarrays-with-sum-equals-target','Hash Table','hash-table'),(1546,'maximum-number-of-non-overlapping-subarrays-with-sum-equals-target','Greedy','greedy'),(1546,'maximum-number-of-non-overlapping-subarrays-with-sum-equals-target','Prefix Sum','prefix-sum'),(1547,'minimum-cost-to-cut-a-stick','Array','array'),(1547,'minimum-cost-to-cut-a-stick','Dynamic Programming','dynamic-programming'),(1548,'the-most-similar-path-in-a-graph','Dynamic Programming','dynamic-programming'),(1548,'the-most-similar-path-in-a-graph','Graph','graph'),(1549,'the-most-recent-orders-for-each-product','Database','database'),(1550,'three-consecutive-odds','Array','array'),(1551,'minimum-operations-to-make-array-equal','Math','math'),(1552,'magnetic-force-between-two-balls','Array','array'),(1552,'magnetic-force-between-two-balls','Binary Search','binary-search'),(1552,'magnetic-force-between-two-balls','Sorting','sorting'),(1553,'minimum-number-of-days-to-eat-n-oranges','Dynamic Programming','dynamic-programming'),(1553,'minimum-number-of-days-to-eat-n-oranges','Memoization','memoization'),(1554,'strings-differ-by-one-character','Hash Table','hash-table'),(1554,'strings-differ-by-one-character','String','string'),(1554,'strings-differ-by-one-character','Rolling Hash','rolling-hash'),(1554,'strings-differ-by-one-character','Hash Function','hash-function'),(1555,'bank-account-summary','Database','database'),(1556,'thousand-separator','String','string'),(1557,'minimum-number-of-vertices-to-reach-all-nodes','Graph','graph'),(1558,'minimum-numbers-of-function-calls-to-make-target-array','Array','array'),(1558,'minimum-numbers-of-function-calls-to-make-target-array','Greedy','greedy'),(1558,'minimum-numbers-of-function-calls-to-make-target-array','Bit Manipulation','bit-manipulation'),(1559,'detect-cycles-in-2d-grid','Array','array'),(1559,'detect-cycles-in-2d-grid','Depth-First Search','depth-first-search'),(1559,'detect-cycles-in-2d-grid','Breadth-First Search','breadth-first-search'),(1559,'detect-cycles-in-2d-grid','Union Find','union-find'),(1559,'detect-cycles-in-2d-grid','Matrix','matrix'),(1560,'most-visited-sector-in-a-circular-track','Array','array'),(1560,'most-visited-sector-in-a-circular-track','Simulation','simulation'),(1561,'maximum-number-of-coins-you-can-get','Array','array'),(1561,'maximum-number-of-coins-you-can-get','Math','math'),(1561,'maximum-number-of-coins-you-can-get','Greedy','greedy'),(1561,'maximum-number-of-coins-you-can-get','Sorting','sorting'),(1561,'maximum-number-of-coins-you-can-get','Game Theory','game-theory'),(1562,'find-latest-group-of-size-m','Array','array'),(1562,'find-latest-group-of-size-m','Binary Search','binary-search'),(1562,'find-latest-group-of-size-m','Simulation','simulation'),(1563,'stone-game-v','Array','array'),(1563,'stone-game-v','Math','math'),(1563,'stone-game-v','Dynamic Programming','dynamic-programming'),(1563,'stone-game-v','Game Theory','game-theory'),(1564,'put-boxes-into-the-warehouse-i','Array','array'),(1564,'put-boxes-into-the-warehouse-i','Greedy','greedy'),(1564,'put-boxes-into-the-warehouse-i','Sorting','sorting'),(1565,'unique-orders-and-customers-per-month','Database','database'),(1566,'detect-pattern-of-length-m-repeated-k-or-more-times','Array','array'),(1566,'detect-pattern-of-length-m-repeated-k-or-more-times','Enumeration','enumeration'),(1567,'maximum-length-of-subarray-with-positive-product','Array','array'),(1567,'maximum-length-of-subarray-with-positive-product','Dynamic Programming','dynamic-programming'),(1567,'maximum-length-of-subarray-with-positive-product','Greedy','greedy'),(1568,'minimum-number-of-days-to-disconnect-island','Array','array'),(1568,'minimum-number-of-days-to-disconnect-island','Depth-First Search','depth-first-search'),(1568,'minimum-number-of-days-to-disconnect-island','Breadth-First Search','breadth-first-search'),(1568,'minimum-number-of-days-to-disconnect-island','Matrix','matrix'),(1568,'minimum-number-of-days-to-disconnect-island','Strongly Connected Component','strongly-connected-component'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Array','array'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Math','math'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Divide and Conquer','divide-and-conquer'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Dynamic Programming','dynamic-programming'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Tree','tree'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Union Find','union-find'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Binary Search Tree','binary-search-tree'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Memoization','memoization'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Combinatorics','combinatorics'),(1569,'number-of-ways-to-reorder-array-to-get-same-bst','Binary Tree','binary-tree'),(1570,'dot-product-of-two-sparse-vectors','Array','array'),(1570,'dot-product-of-two-sparse-vectors','Hash Table','hash-table'),(1570,'dot-product-of-two-sparse-vectors','Two Pointers','two-pointers'),(1570,'dot-product-of-two-sparse-vectors','Design','design'),(1571,'warehouse-manager','Database','database'),(1572,'matrix-diagonal-sum','Array','array'),(1572,'matrix-diagonal-sum','Matrix','matrix'),(1573,'number-of-ways-to-split-a-string','Math','math'),(1573,'number-of-ways-to-split-a-string','String','string'),(1574,'shortest-subarray-to-be-removed-to-make-array-sorted','Array','array'),(1574,'shortest-subarray-to-be-removed-to-make-array-sorted','Two Pointers','two-pointers'),(1574,'shortest-subarray-to-be-removed-to-make-array-sorted','Binary Search','binary-search'),(1574,'shortest-subarray-to-be-removed-to-make-array-sorted','Stack','stack'),(1574,'shortest-subarray-to-be-removed-to-make-array-sorted','Monotonic Stack','monotonic-stack'),(1575,'count-all-possible-routes','Array','array'),(1575,'count-all-possible-routes','Dynamic Programming','dynamic-programming'),(1575,'count-all-possible-routes','Memoization','memoization'),(1576,'replace-all-s-to-avoid-consecutive-repeating-characters','String','string'),(1577,'number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers','Array','array'),(1577,'number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers','Hash Table','hash-table'),(1577,'number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers','Math','math'),(1577,'number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers','Two Pointers','two-pointers'),(1578,'minimum-time-to-make-rope-colorful','Array','array'),(1578,'minimum-time-to-make-rope-colorful','String','string'),(1578,'minimum-time-to-make-rope-colorful','Dynamic Programming','dynamic-programming'),(1578,'minimum-time-to-make-rope-colorful','Greedy','greedy'),(1579,'remove-max-number-of-edges-to-keep-graph-fully-traversable','Union Find','union-find'),(1579,'remove-max-number-of-edges-to-keep-graph-fully-traversable','Graph','graph'),(1580,'put-boxes-into-the-warehouse-ii','Array','array'),(1580,'put-boxes-into-the-warehouse-ii','Greedy','greedy'),(1580,'put-boxes-into-the-warehouse-ii','Sorting','sorting'),(1581,'customer-who-visited-but-did-not-make-any-transactions','Database','database'),(1582,'special-positions-in-a-binary-matrix','Array','array'),(1582,'special-positions-in-a-binary-matrix','Matrix','matrix'),(1583,'count-unhappy-friends','Array','array'),(1583,'count-unhappy-friends','Simulation','simulation'),(1584,'min-cost-to-connect-all-points','Array','array'),(1584,'min-cost-to-connect-all-points','Union Find','union-find'),(1584,'min-cost-to-connect-all-points','Graph','graph'),(1584,'min-cost-to-connect-all-points','Minimum Spanning Tree','minimum-spanning-tree'),(1585,'check-if-string-is-transformable-with-substring-sort-operations','String','string'),(1585,'check-if-string-is-transformable-with-substring-sort-operations','Greedy','greedy'),(1585,'check-if-string-is-transformable-with-substring-sort-operations','Sorting','sorting'),(1586,'binary-search-tree-iterator-ii','Stack','stack'),(1586,'binary-search-tree-iterator-ii','Tree','tree'),(1586,'binary-search-tree-iterator-ii','Design','design'),(1586,'binary-search-tree-iterator-ii','Binary Search Tree','binary-search-tree'),(1586,'binary-search-tree-iterator-ii','Binary Tree','binary-tree'),(1586,'binary-search-tree-iterator-ii','Iterator','iterator'),(1587,'bank-account-summary-ii','Database','database'),(1588,'sum-of-all-odd-length-subarrays','Array','array'),(1588,'sum-of-all-odd-length-subarrays','Math','math'),(1588,'sum-of-all-odd-length-subarrays','Prefix Sum','prefix-sum'),(1589,'maximum-sum-obtained-of-any-permutation','Array','array'),(1589,'maximum-sum-obtained-of-any-permutation','Greedy','greedy'),(1589,'maximum-sum-obtained-of-any-permutation','Sorting','sorting'),(1589,'maximum-sum-obtained-of-any-permutation','Prefix Sum','prefix-sum'),(1590,'make-sum-divisible-by-p','Array','array'),(1590,'make-sum-divisible-by-p','Hash Table','hash-table'),(1590,'make-sum-divisible-by-p','Prefix Sum','prefix-sum'),(1591,'strange-printer-ii','Array','array'),(1591,'strange-printer-ii','Graph','graph'),(1591,'strange-printer-ii','Topological Sort','topological-sort'),(1591,'strange-printer-ii','Matrix','matrix'),(1592,'rearrange-spaces-between-words','String','string'),(1593,'split-a-string-into-the-max-number-of-unique-substrings','Hash Table','hash-table'),(1593,'split-a-string-into-the-max-number-of-unique-substrings','String','string'),(1593,'split-a-string-into-the-max-number-of-unique-substrings','Backtracking','backtracking'),(1594,'maximum-non-negative-product-in-a-matrix','Array','array'),(1594,'maximum-non-negative-product-in-a-matrix','Dynamic Programming','dynamic-programming'),(1594,'maximum-non-negative-product-in-a-matrix','Matrix','matrix'),(1595,'minimum-cost-to-connect-two-groups-of-points','Array','array'),(1595,'minimum-cost-to-connect-two-groups-of-points','Dynamic Programming','dynamic-programming'),(1595,'minimum-cost-to-connect-two-groups-of-points','Bit Manipulation','bit-manipulation'),(1595,'minimum-cost-to-connect-two-groups-of-points','Matrix','matrix'),(1595,'minimum-cost-to-connect-two-groups-of-points','Bitmask','bitmask'),(1596,'the-most-frequently-ordered-products-for-each-customer','Database','database'),(1597,'build-binary-expression-tree-from-infix-expression','String','string'),(1597,'build-binary-expression-tree-from-infix-expression','Stack','stack'),(1597,'build-binary-expression-tree-from-infix-expression','Tree','tree'),(1597,'build-binary-expression-tree-from-infix-expression','Binary Tree','binary-tree'),(1598,'crawler-log-folder','Array','array'),(1598,'crawler-log-folder','String','string'),(1598,'crawler-log-folder','Stack','stack'),(1599,'maximum-profit-of-operating-a-centennial-wheel','Array','array'),(1599,'maximum-profit-of-operating-a-centennial-wheel','Simulation','simulation'),(1600,'throne-inheritance','Hash Table','hash-table'),(1600,'throne-inheritance','Tree','tree'),(1600,'throne-inheritance','Depth-First Search','depth-first-search'),(1600,'throne-inheritance','Design','design'),(1601,'maximum-number-of-achievable-transfer-requests','Array','array'),(1601,'maximum-number-of-achievable-transfer-requests','Backtracking','backtracking'),(1601,'maximum-number-of-achievable-transfer-requests','Bit Manipulation','bit-manipulation'),(1601,'maximum-number-of-achievable-transfer-requests','Enumeration','enumeration'),(1602,'find-nearest-right-node-in-binary-tree','Tree','tree'),(1602,'find-nearest-right-node-in-binary-tree','Breadth-First Search','breadth-first-search'),(1602,'find-nearest-right-node-in-binary-tree','Binary Tree','binary-tree'),(1603,'design-parking-system','Design','design'),(1603,'design-parking-system','Simulation','simulation'),(1603,'design-parking-system','Counting','counting'),(1604,'alert-using-same-key-card-three-or-more-times-in-a-one-hour-period','Array','array'),(1604,'alert-using-same-key-card-three-or-more-times-in-a-one-hour-period','Hash Table','hash-table'),(1604,'alert-using-same-key-card-three-or-more-times-in-a-one-hour-period','String','string'),(1604,'alert-using-same-key-card-three-or-more-times-in-a-one-hour-period','Sorting','sorting'),(1605,'find-valid-matrix-given-row-and-column-sums','Array','array'),(1605,'find-valid-matrix-given-row-and-column-sums','Greedy','greedy'),(1605,'find-valid-matrix-given-row-and-column-sums','Matrix','matrix'),(1606,'find-servers-that-handled-most-number-of-requests','Array','array'),(1606,'find-servers-that-handled-most-number-of-requests','Greedy','greedy'),(1606,'find-servers-that-handled-most-number-of-requests','Heap (Priority Queue)','heap-priority-queue'),(1606,'find-servers-that-handled-most-number-of-requests','Ordered Set','ordered-set'),(1607,'sellers-with-no-sales','Database','database'),(1608,'special-array-with-x-elements-greater-than-or-equal-x','Array','array'),(1608,'special-array-with-x-elements-greater-than-or-equal-x','Binary Search','binary-search'),(1608,'special-array-with-x-elements-greater-than-or-equal-x','Sorting','sorting'),(1609,'even-odd-tree','Tree','tree'),(1609,'even-odd-tree','Breadth-First Search','breadth-first-search'),(1609,'even-odd-tree','Binary Tree','binary-tree'),(1610,'maximum-number-of-visible-points','Array','array'),(1610,'maximum-number-of-visible-points','Math','math'),(1610,'maximum-number-of-visible-points','Geometry','geometry'),(1610,'maximum-number-of-visible-points','Sliding Window','sliding-window'),(1610,'maximum-number-of-visible-points','Sorting','sorting'),(1611,'minimum-one-bit-operations-to-make-integers-zero','Dynamic Programming','dynamic-programming'),(1611,'minimum-one-bit-operations-to-make-integers-zero','Bit Manipulation','bit-manipulation'),(1611,'minimum-one-bit-operations-to-make-integers-zero','Memoization','memoization'),(1612,'check-if-two-expression-trees-are-equivalent','Tree','tree'),(1612,'check-if-two-expression-trees-are-equivalent','Depth-First Search','depth-first-search'),(1612,'check-if-two-expression-trees-are-equivalent','Binary Tree','binary-tree'),(1613,'find-the-missing-ids','Database','database'),(1614,'maximum-nesting-depth-of-the-parentheses','String','string'),(1614,'maximum-nesting-depth-of-the-parentheses','Stack','stack'),(1615,'maximal-network-rank','Graph','graph'),(1616,'split-two-strings-to-make-palindrome','Two Pointers','two-pointers'),(1616,'split-two-strings-to-make-palindrome','String','string'),(1617,'count-subtrees-with-max-distance-between-cities','Dynamic Programming','dynamic-programming'),(1617,'count-subtrees-with-max-distance-between-cities','Bit Manipulation','bit-manipulation'),(1617,'count-subtrees-with-max-distance-between-cities','Tree','tree'),(1617,'count-subtrees-with-max-distance-between-cities','Enumeration','enumeration'),(1617,'count-subtrees-with-max-distance-between-cities','Bitmask','bitmask'),(1618,'maximum-font-to-fit-a-sentence-in-a-screen','Array','array'),(1618,'maximum-font-to-fit-a-sentence-in-a-screen','String','string'),(1618,'maximum-font-to-fit-a-sentence-in-a-screen','Binary Search','binary-search'),(1618,'maximum-font-to-fit-a-sentence-in-a-screen','Interactive','interactive'),(1619,'mean-of-array-after-removing-some-elements','Array','array'),(1619,'mean-of-array-after-removing-some-elements','Sorting','sorting'),(1620,'coordinate-with-maximum-network-quality','Array','array'),(1620,'coordinate-with-maximum-network-quality','Enumeration','enumeration'),(1621,'number-of-sets-of-k-non-overlapping-line-segments','Math','math'),(1621,'number-of-sets-of-k-non-overlapping-line-segments','Dynamic Programming','dynamic-programming'),(1622,'fancy-sequence','Math','math'),(1622,'fancy-sequence','Design','design'),(1622,'fancy-sequence','Segment Tree','segment-tree'),(1623,'all-valid-triplets-that-can-represent-a-country','Database','database'),(1624,'largest-substring-between-two-equal-characters','Hash Table','hash-table'),(1624,'largest-substring-between-two-equal-characters','String','string'),(1625,'lexicographically-smallest-string-after-applying-operations','String','string'),(1625,'lexicographically-smallest-string-after-applying-operations','Breadth-First Search','breadth-first-search'),(1626,'best-team-with-no-conflicts','Array','array'),(1626,'best-team-with-no-conflicts','Dynamic Programming','dynamic-programming'),(1626,'best-team-with-no-conflicts','Sorting','sorting'),(1627,'graph-connectivity-with-threshold','Array','array'),(1627,'graph-connectivity-with-threshold','Math','math'),(1627,'graph-connectivity-with-threshold','Union Find','union-find'),(1628,'design-an-expression-tree-with-evaluate-function','Math','math'),(1628,'design-an-expression-tree-with-evaluate-function','Stack','stack'),(1628,'design-an-expression-tree-with-evaluate-function','Tree','tree'),(1628,'design-an-expression-tree-with-evaluate-function','Design','design'),(1628,'design-an-expression-tree-with-evaluate-function','Binary Tree','binary-tree'),(1629,'slowest-key','Array','array'),(1629,'slowest-key','String','string'),(1630,'arithmetic-subarrays','Array','array'),(1630,'arithmetic-subarrays','Sorting','sorting'),(1631,'path-with-minimum-effort','Array','array'),(1631,'path-with-minimum-effort','Binary Search','binary-search'),(1631,'path-with-minimum-effort','Depth-First Search','depth-first-search'),(1631,'path-with-minimum-effort','Breadth-First Search','breadth-first-search'),(1631,'path-with-minimum-effort','Union Find','union-find'),(1631,'path-with-minimum-effort','Heap (Priority Queue)','heap-priority-queue'),(1631,'path-with-minimum-effort','Matrix','matrix'),(1632,'rank-transform-of-a-matrix','Array','array'),(1632,'rank-transform-of-a-matrix','Greedy','greedy'),(1632,'rank-transform-of-a-matrix','Union Find','union-find'),(1632,'rank-transform-of-a-matrix','Graph','graph'),(1632,'rank-transform-of-a-matrix','Topological Sort','topological-sort'),(1632,'rank-transform-of-a-matrix','Matrix','matrix'),(1633,'percentage-of-users-attended-a-contest','Database','database'),(1634,'add-two-polynomials-represented-as-linked-lists','Linked List','linked-list'),(1634,'add-two-polynomials-represented-as-linked-lists','Math','math'),(1634,'add-two-polynomials-represented-as-linked-lists','Two Pointers','two-pointers'),(1635,'hopper-company-queries-i','Database','database'),(1636,'sort-array-by-increasing-frequency','Array','array'),(1636,'sort-array-by-increasing-frequency','Hash Table','hash-table'),(1636,'sort-array-by-increasing-frequency','Sorting','sorting'),(1637,'widest-vertical-area-between-two-points-containing-no-points','Array','array'),(1637,'widest-vertical-area-between-two-points-containing-no-points','Sorting','sorting'),(1638,'count-substrings-that-differ-by-one-character','Hash Table','hash-table'),(1638,'count-substrings-that-differ-by-one-character','String','string'),(1638,'count-substrings-that-differ-by-one-character','Dynamic Programming','dynamic-programming'),(1639,'number-of-ways-to-form-a-target-string-given-a-dictionary','Array','array'),(1639,'number-of-ways-to-form-a-target-string-given-a-dictionary','String','string'),(1639,'number-of-ways-to-form-a-target-string-given-a-dictionary','Dynamic Programming','dynamic-programming'),(1640,'check-array-formation-through-concatenation','Array','array'),(1640,'check-array-formation-through-concatenation','Hash Table','hash-table'),(1641,'count-sorted-vowel-strings','Math','math'),(1641,'count-sorted-vowel-strings','Dynamic Programming','dynamic-programming'),(1641,'count-sorted-vowel-strings','Combinatorics','combinatorics'),(1642,'furthest-building-you-can-reach','Array','array'),(1642,'furthest-building-you-can-reach','Greedy','greedy'),(1642,'furthest-building-you-can-reach','Heap (Priority Queue)','heap-priority-queue'),(1643,'kth-smallest-instructions','Array','array'),(1643,'kth-smallest-instructions','Math','math'),(1643,'kth-smallest-instructions','Dynamic Programming','dynamic-programming'),(1643,'kth-smallest-instructions','Combinatorics','combinatorics'),(1644,'lowest-common-ancestor-of-a-binary-tree-ii','Tree','tree'),(1644,'lowest-common-ancestor-of-a-binary-tree-ii','Depth-First Search','depth-first-search'),(1644,'lowest-common-ancestor-of-a-binary-tree-ii','Binary Tree','binary-tree'),(1645,'hopper-company-queries-ii','Database','database'),(1646,'get-maximum-in-generated-array','Array','array'),(1646,'get-maximum-in-generated-array','Dynamic Programming','dynamic-programming'),(1646,'get-maximum-in-generated-array','Simulation','simulation'),(1647,'minimum-deletions-to-make-character-frequencies-unique','Hash Table','hash-table'),(1647,'minimum-deletions-to-make-character-frequencies-unique','String','string'),(1647,'minimum-deletions-to-make-character-frequencies-unique','Greedy','greedy'),(1647,'minimum-deletions-to-make-character-frequencies-unique','Sorting','sorting'),(1648,'sell-diminishing-valued-colored-balls','Array','array'),(1648,'sell-diminishing-valued-colored-balls','Math','math'),(1648,'sell-diminishing-valued-colored-balls','Binary Search','binary-search'),(1648,'sell-diminishing-valued-colored-balls','Greedy','greedy'),(1648,'sell-diminishing-valued-colored-balls','Sorting','sorting'),(1648,'sell-diminishing-valued-colored-balls','Heap (Priority Queue)','heap-priority-queue'),(1649,'create-sorted-array-through-instructions','Array','array'),(1649,'create-sorted-array-through-instructions','Binary Search','binary-search'),(1649,'create-sorted-array-through-instructions','Divide and Conquer','divide-and-conquer'),(1649,'create-sorted-array-through-instructions','Binary Indexed Tree','binary-indexed-tree'),(1649,'create-sorted-array-through-instructions','Segment Tree','segment-tree'),(1649,'create-sorted-array-through-instructions','Merge Sort','merge-sort'),(1649,'create-sorted-array-through-instructions','Ordered Set','ordered-set'),(1650,'lowest-common-ancestor-of-a-binary-tree-iii','Hash Table','hash-table'),(1650,'lowest-common-ancestor-of-a-binary-tree-iii','Tree','tree'),(1650,'lowest-common-ancestor-of-a-binary-tree-iii','Binary Tree','binary-tree'),(1651,'hopper-company-queries-iii','Database','database'),(1652,'defuse-the-bomb','Array','array'),(1653,'minimum-deletions-to-make-string-balanced','String','string'),(1653,'minimum-deletions-to-make-string-balanced','Dynamic Programming','dynamic-programming'),(1653,'minimum-deletions-to-make-string-balanced','Stack','stack'),(1654,'minimum-jumps-to-reach-home','Array','array'),(1654,'minimum-jumps-to-reach-home','Dynamic Programming','dynamic-programming'),(1654,'minimum-jumps-to-reach-home','Breadth-First Search','breadth-first-search'),(1655,'distribute-repeating-integers','Array','array'),(1655,'distribute-repeating-integers','Dynamic Programming','dynamic-programming'),(1655,'distribute-repeating-integers','Backtracking','backtracking'),(1655,'distribute-repeating-integers','Bit Manipulation','bit-manipulation'),(1655,'distribute-repeating-integers','Bitmask','bitmask'),(1656,'design-an-ordered-stream','Array','array'),(1656,'design-an-ordered-stream','Hash Table','hash-table'),(1656,'design-an-ordered-stream','Design','design'),(1656,'design-an-ordered-stream','Data Stream','data-stream'),(1657,'determine-if-two-strings-are-close','Hash Table','hash-table'),(1657,'determine-if-two-strings-are-close','String','string'),(1657,'determine-if-two-strings-are-close','Sorting','sorting'),(1658,'minimum-operations-to-reduce-x-to-zero','Array','array'),(1658,'minimum-operations-to-reduce-x-to-zero','Hash Table','hash-table'),(1658,'minimum-operations-to-reduce-x-to-zero','Binary Search','binary-search'),(1658,'minimum-operations-to-reduce-x-to-zero','Sliding Window','sliding-window'),(1658,'minimum-operations-to-reduce-x-to-zero','Prefix Sum','prefix-sum'),(1659,'maximize-grid-happiness','Dynamic Programming','dynamic-programming'),(1659,'maximize-grid-happiness','Bit Manipulation','bit-manipulation'),(1659,'maximize-grid-happiness','Memoization','memoization'),(1659,'maximize-grid-happiness','Bitmask','bitmask'),(1660,'correct-a-binary-tree','Hash Table','hash-table'),(1660,'correct-a-binary-tree','Tree','tree'),(1660,'correct-a-binary-tree','Depth-First Search','depth-first-search'),(1660,'correct-a-binary-tree','Breadth-First Search','breadth-first-search'),(1660,'correct-a-binary-tree','Binary Tree','binary-tree'),(1661,'average-time-of-process-per-machine','Database','database'),(1662,'check-if-two-string-arrays-are-equivalent','Array','array'),(1662,'check-if-two-string-arrays-are-equivalent','String','string'),(1663,'smallest-string-with-a-given-numeric-value','String','string'),(1663,'smallest-string-with-a-given-numeric-value','Greedy','greedy'),(1664,'ways-to-make-a-fair-array','Array','array'),(1664,'ways-to-make-a-fair-array','Dynamic Programming','dynamic-programming'),(1665,'minimum-initial-energy-to-finish-tasks','Array','array'),(1665,'minimum-initial-energy-to-finish-tasks','Greedy','greedy'),(1665,'minimum-initial-energy-to-finish-tasks','Sorting','sorting'),(1666,'change-the-root-of-a-binary-tree','Tree','tree'),(1666,'change-the-root-of-a-binary-tree','Depth-First Search','depth-first-search'),(1666,'change-the-root-of-a-binary-tree','Binary Tree','binary-tree'),(1667,'fix-names-in-a-table','Database','database'),(1668,'maximum-repeating-substring','String','string'),(1668,'maximum-repeating-substring','String Matching','string-matching'),(1669,'merge-in-between-linked-lists','Linked List','linked-list'),(1670,'design-front-middle-back-queue','Array','array'),(1670,'design-front-middle-back-queue','Linked List','linked-list'),(1670,'design-front-middle-back-queue','Design','design'),(1670,'design-front-middle-back-queue','Queue','queue'),(1670,'design-front-middle-back-queue','Data Stream','data-stream'),(1671,'minimum-number-of-removals-to-make-mountain-array','Array','array'),(1671,'minimum-number-of-removals-to-make-mountain-array','Binary Search','binary-search'),(1671,'minimum-number-of-removals-to-make-mountain-array','Dynamic Programming','dynamic-programming'),(1671,'minimum-number-of-removals-to-make-mountain-array','Greedy','greedy'),(1672,'richest-customer-wealth','Array','array'),(1672,'richest-customer-wealth','Matrix','matrix'),(1673,'find-the-most-competitive-subsequence','Array','array'),(1673,'find-the-most-competitive-subsequence','Stack','stack'),(1673,'find-the-most-competitive-subsequence','Greedy','greedy'),(1673,'find-the-most-competitive-subsequence','Monotonic Stack','monotonic-stack'),(1674,'minimum-moves-to-make-array-complementary','Array','array'),(1674,'minimum-moves-to-make-array-complementary','Hash Table','hash-table'),(1674,'minimum-moves-to-make-array-complementary','Prefix Sum','prefix-sum'),(1675,'minimize-deviation-in-array','Array','array'),(1675,'minimize-deviation-in-array','Greedy','greedy'),(1675,'minimize-deviation-in-array','Heap (Priority Queue)','heap-priority-queue'),(1675,'minimize-deviation-in-array','Ordered Set','ordered-set'),(1676,'lowest-common-ancestor-of-a-binary-tree-iv','Tree','tree'),(1676,'lowest-common-ancestor-of-a-binary-tree-iv','Depth-First Search','depth-first-search'),(1676,'lowest-common-ancestor-of-a-binary-tree-iv','Binary Tree','binary-tree'),(1677,'products-worth-over-invoices','Database','database'),(1678,'goal-parser-interpretation','String','string'),(1679,'max-number-of-k-sum-pairs','Array','array'),(1679,'max-number-of-k-sum-pairs','Hash Table','hash-table'),(1679,'max-number-of-k-sum-pairs','Two Pointers','two-pointers'),(1679,'max-number-of-k-sum-pairs','Sorting','sorting'),(1680,'concatenation-of-consecutive-binary-numbers','Math','math'),(1680,'concatenation-of-consecutive-binary-numbers','Bit Manipulation','bit-manipulation'),(1680,'concatenation-of-consecutive-binary-numbers','Simulation','simulation'),(1681,'minimum-incompatibility','Array','array'),(1681,'minimum-incompatibility','Dynamic Programming','dynamic-programming'),(1681,'minimum-incompatibility','Bit Manipulation','bit-manipulation'),(1681,'minimum-incompatibility','Bitmask','bitmask'),(1682,'longest-palindromic-subsequence-ii','String','string'),(1682,'longest-palindromic-subsequence-ii','Dynamic Programming','dynamic-programming'),(1683,'invalid-tweets','Database','database'),(1684,'count-the-number-of-consistent-strings','Array','array'),(1684,'count-the-number-of-consistent-strings','Hash Table','hash-table'),(1684,'count-the-number-of-consistent-strings','String','string'),(1684,'count-the-number-of-consistent-strings','Bit Manipulation','bit-manipulation'),(1685,'sum-of-absolute-differences-in-a-sorted-array','Array','array'),(1685,'sum-of-absolute-differences-in-a-sorted-array','Math','math'),(1685,'sum-of-absolute-differences-in-a-sorted-array','Prefix Sum','prefix-sum'),(1686,'stone-game-vi','Array','array'),(1686,'stone-game-vi','Math','math'),(1686,'stone-game-vi','Greedy','greedy'),(1686,'stone-game-vi','Sorting','sorting'),(1686,'stone-game-vi','Heap (Priority Queue)','heap-priority-queue'),(1686,'stone-game-vi','Game Theory','game-theory'),(1687,'delivering-boxes-from-storage-to-ports','Array','array'),(1687,'delivering-boxes-from-storage-to-ports','Dynamic Programming','dynamic-programming'),(1687,'delivering-boxes-from-storage-to-ports','Segment Tree','segment-tree'),(1687,'delivering-boxes-from-storage-to-ports','Queue','queue'),(1687,'delivering-boxes-from-storage-to-ports','Heap (Priority Queue)','heap-priority-queue'),(1687,'delivering-boxes-from-storage-to-ports','Monotonic Queue','monotonic-queue'),(1688,'count-of-matches-in-tournament','Math','math'),(1688,'count-of-matches-in-tournament','Simulation','simulation'),(1689,'partitioning-into-minimum-number-of-deci-binary-numbers','String','string'),(1689,'partitioning-into-minimum-number-of-deci-binary-numbers','Greedy','greedy'),(1690,'stone-game-vii','Array','array'),(1690,'stone-game-vii','Math','math'),(1690,'stone-game-vii','Dynamic Programming','dynamic-programming'),(1690,'stone-game-vii','Game Theory','game-theory'),(1691,'maximum-height-by-stacking-cuboids','Array','array'),(1691,'maximum-height-by-stacking-cuboids','Dynamic Programming','dynamic-programming'),(1691,'maximum-height-by-stacking-cuboids','Sorting','sorting'),(1692,'count-ways-to-distribute-candies','Dynamic Programming','dynamic-programming'),(1693,'daily-leads-and-partners','Database','database'),(1694,'reformat-phone-number','String','string'),(1695,'maximum-erasure-value','Array','array'),(1695,'maximum-erasure-value','Hash Table','hash-table'),(1695,'maximum-erasure-value','Sliding Window','sliding-window'),(1696,'jump-game-vi','Array','array'),(1696,'jump-game-vi','Dynamic Programming','dynamic-programming'),(1696,'jump-game-vi','Queue','queue'),(1696,'jump-game-vi','Sliding Window','sliding-window'),(1696,'jump-game-vi','Heap (Priority Queue)','heap-priority-queue'),(1696,'jump-game-vi','Monotonic Queue','monotonic-queue'),(1697,'checking-existence-of-edge-length-limited-paths','Array','array'),(1697,'checking-existence-of-edge-length-limited-paths','Union Find','union-find'),(1697,'checking-existence-of-edge-length-limited-paths','Graph','graph'),(1697,'checking-existence-of-edge-length-limited-paths','Sorting','sorting'),(1698,'number-of-distinct-substrings-in-a-string','String','string'),(1698,'number-of-distinct-substrings-in-a-string','Trie','trie'),(1698,'number-of-distinct-substrings-in-a-string','Rolling Hash','rolling-hash'),(1698,'number-of-distinct-substrings-in-a-string','Suffix Array','suffix-array'),(1698,'number-of-distinct-substrings-in-a-string','Hash Function','hash-function'),(1699,'number-of-calls-between-two-persons','Database','database'),(1700,'number-of-students-unable-to-eat-lunch','Array','array'),(1700,'number-of-students-unable-to-eat-lunch','Stack','stack'),(1700,'number-of-students-unable-to-eat-lunch','Queue','queue'),(1700,'number-of-students-unable-to-eat-lunch','Simulation','simulation'),(1701,'average-waiting-time','Array','array'),(1701,'average-waiting-time','Simulation','simulation'),(1702,'maximum-binary-string-after-change','String','string'),(1702,'maximum-binary-string-after-change','Greedy','greedy'),(1703,'minimum-adjacent-swaps-for-k-consecutive-ones','Array','array'),(1703,'minimum-adjacent-swaps-for-k-consecutive-ones','Greedy','greedy'),(1703,'minimum-adjacent-swaps-for-k-consecutive-ones','Sliding Window','sliding-window'),(1703,'minimum-adjacent-swaps-for-k-consecutive-ones','Prefix Sum','prefix-sum'),(1704,'determine-if-string-halves-are-alike','String','string'),(1704,'determine-if-string-halves-are-alike','Counting','counting'),(1705,'maximum-number-of-eaten-apples','Array','array'),(1705,'maximum-number-of-eaten-apples','Greedy','greedy'),(1705,'maximum-number-of-eaten-apples','Heap (Priority Queue)','heap-priority-queue'),(1706,'where-will-the-ball-fall','Array','array'),(1706,'where-will-the-ball-fall','Dynamic Programming','dynamic-programming'),(1706,'where-will-the-ball-fall','Depth-First Search','depth-first-search'),(1706,'where-will-the-ball-fall','Matrix','matrix'),(1706,'where-will-the-ball-fall','Simulation','simulation'),(1707,'maximum-xor-with-an-element-from-array','Array','array'),(1707,'maximum-xor-with-an-element-from-array','Bit Manipulation','bit-manipulation'),(1707,'maximum-xor-with-an-element-from-array','Trie','trie'),(1708,'largest-subarray-length-k','Array','array'),(1708,'largest-subarray-length-k','Greedy','greedy'),(1709,'biggest-window-between-visits','Database','database'),(1710,'maximum-units-on-a-truck','Array','array'),(1710,'maximum-units-on-a-truck','Greedy','greedy'),(1710,'maximum-units-on-a-truck','Sorting','sorting'),(1711,'count-good-meals','Array','array'),(1711,'count-good-meals','Hash Table','hash-table'),(1712,'ways-to-split-array-into-three-subarrays','Array','array'),(1712,'ways-to-split-array-into-three-subarrays','Two Pointers','two-pointers'),(1712,'ways-to-split-array-into-three-subarrays','Binary Search','binary-search'),(1712,'ways-to-split-array-into-three-subarrays','Prefix Sum','prefix-sum'),(1713,'minimum-operations-to-make-a-subsequence','Array','array'),(1713,'minimum-operations-to-make-a-subsequence','Hash Table','hash-table'),(1713,'minimum-operations-to-make-a-subsequence','Binary Search','binary-search'),(1713,'minimum-operations-to-make-a-subsequence','Greedy','greedy'),(1714,'sum-of-special-evenly-spaced-elements-in-array','Array','array'),(1714,'sum-of-special-evenly-spaced-elements-in-array','Dynamic Programming','dynamic-programming'),(1715,'count-apples-and-oranges','Database','database'),(1716,'calculate-money-in-leetcode-bank','Math','math'),(1717,'maximum-score-from-removing-substrings','String','string'),(1717,'maximum-score-from-removing-substrings','Stack','stack'),(1717,'maximum-score-from-removing-substrings','Greedy','greedy'),(1718,'construct-the-lexicographically-largest-valid-sequence','Array','array'),(1718,'construct-the-lexicographically-largest-valid-sequence','Backtracking','backtracking'),(1719,'number-of-ways-to-reconstruct-a-tree','Tree','tree'),(1719,'number-of-ways-to-reconstruct-a-tree','Graph','graph'),(1720,'decode-xored-array','Array','array'),(1720,'decode-xored-array','Bit Manipulation','bit-manipulation'),(1721,'swapping-nodes-in-a-linked-list','Linked List','linked-list'),(1721,'swapping-nodes-in-a-linked-list','Two Pointers','two-pointers'),(1722,'minimize-hamming-distance-after-swap-operations','Array','array'),(1722,'minimize-hamming-distance-after-swap-operations','Depth-First Search','depth-first-search'),(1722,'minimize-hamming-distance-after-swap-operations','Union Find','union-find'),(1723,'find-minimum-time-to-finish-all-jobs','Array','array'),(1723,'find-minimum-time-to-finish-all-jobs','Dynamic Programming','dynamic-programming'),(1723,'find-minimum-time-to-finish-all-jobs','Backtracking','backtracking'),(1723,'find-minimum-time-to-finish-all-jobs','Bit Manipulation','bit-manipulation'),(1723,'find-minimum-time-to-finish-all-jobs','Bitmask','bitmask'),(1724,'checking-existence-of-edge-length-limited-paths-ii','Union Find','union-find'),(1724,'checking-existence-of-edge-length-limited-paths-ii','Graph','graph'),(1724,'checking-existence-of-edge-length-limited-paths-ii','Minimum Spanning Tree','minimum-spanning-tree'),(1725,'number-of-rectangles-that-can-form-the-largest-square','Array','array'),(1726,'tuple-with-same-product','Array','array'),(1726,'tuple-with-same-product','Hash Table','hash-table'),(1727,'largest-submatrix-with-rearrangements','Array','array'),(1727,'largest-submatrix-with-rearrangements','Greedy','greedy'),(1727,'largest-submatrix-with-rearrangements','Sorting','sorting'),(1727,'largest-submatrix-with-rearrangements','Matrix','matrix'),(1728,'cat-and-mouse-ii','Array','array'),(1728,'cat-and-mouse-ii','Math','math'),(1728,'cat-and-mouse-ii','Dynamic Programming','dynamic-programming'),(1728,'cat-and-mouse-ii','Graph','graph'),(1728,'cat-and-mouse-ii','Topological Sort','topological-sort'),(1728,'cat-and-mouse-ii','Memoization','memoization'),(1728,'cat-and-mouse-ii','Matrix','matrix'),(1728,'cat-and-mouse-ii','Game Theory','game-theory'),(1729,'find-followers-count','Database','database'),(1730,'shortest-path-to-get-food','Array','array'),(1730,'shortest-path-to-get-food','Breadth-First Search','breadth-first-search'),(1730,'shortest-path-to-get-food','Matrix','matrix'),(1731,'the-number-of-employees-which-report-to-each-employee','Database','database'),(1732,'find-the-highest-altitude','Array','array'),(1732,'find-the-highest-altitude','Prefix Sum','prefix-sum'),(1733,'minimum-number-of-people-to-teach','Array','array'),(1733,'minimum-number-of-people-to-teach','Greedy','greedy'),(1734,'decode-xored-permutation','Array','array'),(1734,'decode-xored-permutation','Bit Manipulation','bit-manipulation'),(1735,'count-ways-to-make-array-with-product','Array','array'),(1735,'count-ways-to-make-array-with-product','Math','math'),(1735,'count-ways-to-make-array-with-product','Dynamic Programming','dynamic-programming'),(1735,'count-ways-to-make-array-with-product','Combinatorics','combinatorics'),(1735,'count-ways-to-make-array-with-product','Number Theory','number-theory'),(1736,'latest-time-by-replacing-hidden-digits','String','string'),(1736,'latest-time-by-replacing-hidden-digits','Greedy','greedy'),(1737,'change-minimum-characters-to-satisfy-one-of-three-conditions','Hash Table','hash-table'),(1737,'change-minimum-characters-to-satisfy-one-of-three-conditions','String','string'),(1737,'change-minimum-characters-to-satisfy-one-of-three-conditions','Counting','counting'),(1737,'change-minimum-characters-to-satisfy-one-of-three-conditions','Prefix Sum','prefix-sum'),(1738,'find-kth-largest-xor-coordinate-value','Array','array'),(1738,'find-kth-largest-xor-coordinate-value','Divide and Conquer','divide-and-conquer'),(1738,'find-kth-largest-xor-coordinate-value','Bit Manipulation','bit-manipulation'),(1738,'find-kth-largest-xor-coordinate-value','Heap (Priority Queue)','heap-priority-queue'),(1738,'find-kth-largest-xor-coordinate-value','Matrix','matrix'),(1738,'find-kth-largest-xor-coordinate-value','Prefix Sum','prefix-sum'),(1738,'find-kth-largest-xor-coordinate-value','Quickselect','quickselect'),(1739,'building-boxes','Math','math'),(1739,'building-boxes','Binary Search','binary-search'),(1739,'building-boxes','Greedy','greedy'),(1740,'find-distance-in-a-binary-tree','Hash Table','hash-table'),(1740,'find-distance-in-a-binary-tree','Tree','tree'),(1740,'find-distance-in-a-binary-tree','Depth-First Search','depth-first-search'),(1740,'find-distance-in-a-binary-tree','Breadth-First Search','breadth-first-search'),(1740,'find-distance-in-a-binary-tree','Binary Tree','binary-tree'),(1741,'find-total-time-spent-by-each-employee','Database','database'),(1742,'maximum-number-of-balls-in-a-box','Hash Table','hash-table'),(1742,'maximum-number-of-balls-in-a-box','Math','math'),(1742,'maximum-number-of-balls-in-a-box','Counting','counting'),(1743,'restore-the-array-from-adjacent-pairs','Array','array'),(1743,'restore-the-array-from-adjacent-pairs','Hash Table','hash-table'),(1744,'can-you-eat-your-favorite-candy-on-your-favorite-day','Array','array'),(1744,'can-you-eat-your-favorite-candy-on-your-favorite-day','Prefix Sum','prefix-sum'),(1745,'palindrome-partitioning-iv','String','string'),(1745,'palindrome-partitioning-iv','Dynamic Programming','dynamic-programming'),(1746,'maximum-subarray-sum-after-one-operation','Array','array'),(1746,'maximum-subarray-sum-after-one-operation','Dynamic Programming','dynamic-programming'),(1747,'leetflex-banned-accounts','Database','database'),(1748,'sum-of-unique-elements','Array','array'),(1748,'sum-of-unique-elements','Hash Table','hash-table'),(1748,'sum-of-unique-elements','Counting','counting'),(1749,'maximum-absolute-sum-of-any-subarray','Array','array'),(1749,'maximum-absolute-sum-of-any-subarray','Dynamic Programming','dynamic-programming'),(1750,'minimum-length-of-string-after-deleting-similar-ends','Two Pointers','two-pointers'),(1750,'minimum-length-of-string-after-deleting-similar-ends','String','string'),(1751,'maximum-number-of-events-that-can-be-attended-ii','Array','array'),(1751,'maximum-number-of-events-that-can-be-attended-ii','Binary Search','binary-search'),(1751,'maximum-number-of-events-that-can-be-attended-ii','Dynamic Programming','dynamic-programming'),(1752,'check-if-array-is-sorted-and-rotated','Array','array'),(1753,'maximum-score-from-removing-stones','Math','math'),(1753,'maximum-score-from-removing-stones','Greedy','greedy'),(1753,'maximum-score-from-removing-stones','Heap (Priority Queue)','heap-priority-queue'),(1754,'largest-merge-of-two-strings','Two Pointers','two-pointers'),(1754,'largest-merge-of-two-strings','String','string'),(1754,'largest-merge-of-two-strings','Greedy','greedy'),(1755,'closest-subsequence-sum','Array','array'),(1755,'closest-subsequence-sum','Two Pointers','two-pointers'),(1755,'closest-subsequence-sum','Dynamic Programming','dynamic-programming'),(1755,'closest-subsequence-sum','Bit Manipulation','bit-manipulation'),(1755,'closest-subsequence-sum','Bitmask','bitmask'),(1756,'design-most-recently-used-queue','Array','array'),(1756,'design-most-recently-used-queue','Hash Table','hash-table'),(1756,'design-most-recently-used-queue','Stack','stack'),(1756,'design-most-recently-used-queue','Design','design'),(1756,'design-most-recently-used-queue','Binary Indexed Tree','binary-indexed-tree'),(1756,'design-most-recently-used-queue','Ordered Set','ordered-set'),(1757,'recyclable-and-low-fat-products','Database','database'),(1758,'minimum-changes-to-make-alternating-binary-string','String','string'),(1759,'count-number-of-homogenous-substrings','Math','math'),(1759,'count-number-of-homogenous-substrings','String','string'),(1760,'minimum-limit-of-balls-in-a-bag','Array','array'),(1760,'minimum-limit-of-balls-in-a-bag','Binary Search','binary-search'),(1761,'minimum-degree-of-a-connected-trio-in-a-graph','Graph','graph'),(1762,'buildings-with-an-ocean-view','Array','array'),(1762,'buildings-with-an-ocean-view','Stack','stack'),(1762,'buildings-with-an-ocean-view','Monotonic Stack','monotonic-stack'),(1763,'longest-nice-substring','Hash Table','hash-table'),(1763,'longest-nice-substring','String','string'),(1763,'longest-nice-substring','Divide and Conquer','divide-and-conquer'),(1763,'longest-nice-substring','Bit Manipulation','bit-manipulation'),(1763,'longest-nice-substring','Sliding Window','sliding-window'),(1764,'form-array-by-concatenating-subarrays-of-another-array','Array','array'),(1764,'form-array-by-concatenating-subarrays-of-another-array','Greedy','greedy'),(1764,'form-array-by-concatenating-subarrays-of-another-array','String Matching','string-matching'),(1765,'map-of-highest-peak','Array','array'),(1765,'map-of-highest-peak','Breadth-First Search','breadth-first-search'),(1765,'map-of-highest-peak','Matrix','matrix'),(1766,'tree-of-coprimes','Math','math'),(1766,'tree-of-coprimes','Tree','tree'),(1766,'tree-of-coprimes','Depth-First Search','depth-first-search'),(1766,'tree-of-coprimes','Breadth-First Search','breadth-first-search'),(1767,'find-the-subtasks-that-did-not-execute','Database','database'),(1768,'merge-strings-alternately','Two Pointers','two-pointers'),(1768,'merge-strings-alternately','String','string'),(1769,'minimum-number-of-operations-to-move-all-balls-to-each-box','Array','array'),(1769,'minimum-number-of-operations-to-move-all-balls-to-each-box','String','string'),(1770,'maximum-score-from-performing-multiplication-operations','Array','array'),(1770,'maximum-score-from-performing-multiplication-operations','Dynamic Programming','dynamic-programming'),(1771,'maximize-palindrome-length-from-subsequences','String','string'),(1771,'maximize-palindrome-length-from-subsequences','Dynamic Programming','dynamic-programming'),(1772,'sort-features-by-popularity','Array','array'),(1772,'sort-features-by-popularity','Hash Table','hash-table'),(1772,'sort-features-by-popularity','String','string'),(1772,'sort-features-by-popularity','Sorting','sorting'),(1773,'count-items-matching-a-rule','Array','array'),(1773,'count-items-matching-a-rule','String','string'),(1774,'closest-dessert-cost','Array','array'),(1774,'closest-dessert-cost','Dynamic Programming','dynamic-programming'),(1774,'closest-dessert-cost','Backtracking','backtracking'),(1775,'equal-sum-arrays-with-minimum-number-of-operations','Array','array'),(1775,'equal-sum-arrays-with-minimum-number-of-operations','Hash Table','hash-table'),(1775,'equal-sum-arrays-with-minimum-number-of-operations','Greedy','greedy'),(1775,'equal-sum-arrays-with-minimum-number-of-operations','Counting','counting'),(1776,'car-fleet-ii','Array','array'),(1776,'car-fleet-ii','Math','math'),(1776,'car-fleet-ii','Stack','stack'),(1776,'car-fleet-ii','Heap (Priority Queue)','heap-priority-queue'),(1776,'car-fleet-ii','Monotonic Stack','monotonic-stack'),(1777,'products-price-for-each-store','Database','database'),(1778,'shortest-path-in-a-hidden-grid','Depth-First Search','depth-first-search'),(1778,'shortest-path-in-a-hidden-grid','Breadth-First Search','breadth-first-search'),(1778,'shortest-path-in-a-hidden-grid','Graph','graph'),(1778,'shortest-path-in-a-hidden-grid','Interactive','interactive'),(1779,'find-nearest-point-that-has-the-same-x-or-y-coordinate','Array','array'),(1780,'check-if-number-is-a-sum-of-powers-of-three','Math','math'),(1781,'sum-of-beauty-of-all-substrings','Hash Table','hash-table'),(1781,'sum-of-beauty-of-all-substrings','String','string'),(1781,'sum-of-beauty-of-all-substrings','Counting','counting'),(1782,'count-pairs-of-nodes','Two Pointers','two-pointers'),(1782,'count-pairs-of-nodes','Binary Search','binary-search'),(1782,'count-pairs-of-nodes','Graph','graph'),(1783,'grand-slam-titles','Database','database'),(1784,'check-if-binary-string-has-at-most-one-segment-of-ones','String','string'),(1785,'minimum-elements-to-add-to-form-a-given-sum','Array','array'),(1785,'minimum-elements-to-add-to-form-a-given-sum','Greedy','greedy'),(1786,'number-of-restricted-paths-from-first-to-last-node','Dynamic Programming','dynamic-programming'),(1786,'number-of-restricted-paths-from-first-to-last-node','Graph','graph'),(1786,'number-of-restricted-paths-from-first-to-last-node','Topological Sort','topological-sort'),(1786,'number-of-restricted-paths-from-first-to-last-node','Heap (Priority Queue)','heap-priority-queue'),(1786,'number-of-restricted-paths-from-first-to-last-node','Shortest Path','shortest-path'),(1787,'make-the-xor-of-all-segments-equal-to-zero','Array','array'),(1787,'make-the-xor-of-all-segments-equal-to-zero','Dynamic Programming','dynamic-programming'),(1787,'make-the-xor-of-all-segments-equal-to-zero','Bit Manipulation','bit-manipulation'),(1788,'maximize-the-beauty-of-the-garden','Array','array'),(1788,'maximize-the-beauty-of-the-garden','Greedy','greedy'),(1788,'maximize-the-beauty-of-the-garden','Prefix Sum','prefix-sum'),(1789,'primary-department-for-each-employee','Database','database'),(1790,'check-if-one-string-swap-can-make-strings-equal','Hash Table','hash-table'),(1790,'check-if-one-string-swap-can-make-strings-equal','String','string'),(1790,'check-if-one-string-swap-can-make-strings-equal','Counting','counting'),(1791,'find-center-of-star-graph','Graph','graph'),(1792,'maximum-average-pass-ratio','Array','array'),(1792,'maximum-average-pass-ratio','Greedy','greedy'),(1792,'maximum-average-pass-ratio','Heap (Priority Queue)','heap-priority-queue'),(1793,'maximum-score-of-a-good-subarray','Array','array'),(1793,'maximum-score-of-a-good-subarray','Two Pointers','two-pointers'),(1793,'maximum-score-of-a-good-subarray','Binary Search','binary-search'),(1793,'maximum-score-of-a-good-subarray','Stack','stack'),(1793,'maximum-score-of-a-good-subarray','Monotonic Stack','monotonic-stack'),(1794,'count-pairs-of-equal-substrings-with-minimum-difference','Hash Table','hash-table'),(1794,'count-pairs-of-equal-substrings-with-minimum-difference','String','string'),(1794,'count-pairs-of-equal-substrings-with-minimum-difference','Greedy','greedy'),(1795,'rearrange-products-table','Database','database'),(1796,'second-largest-digit-in-a-string','Hash Table','hash-table'),(1796,'second-largest-digit-in-a-string','String','string'),(1797,'design-authentication-manager','Hash Table','hash-table'),(1797,'design-authentication-manager','Design','design'),(1798,'maximum-number-of-consecutive-values-you-can-make','Array','array'),(1798,'maximum-number-of-consecutive-values-you-can-make','Greedy','greedy'),(1799,'maximize-score-after-n-operations','Array','array'),(1799,'maximize-score-after-n-operations','Math','math'),(1799,'maximize-score-after-n-operations','Dynamic Programming','dynamic-programming'),(1799,'maximize-score-after-n-operations','Backtracking','backtracking'),(1799,'maximize-score-after-n-operations','Bit Manipulation','bit-manipulation'),(1799,'maximize-score-after-n-operations','Number Theory','number-theory'),(1799,'maximize-score-after-n-operations','Bitmask','bitmask'),(1800,'maximum-ascending-subarray-sum','Array','array'),(1801,'number-of-orders-in-the-backlog','Array','array'),(1801,'number-of-orders-in-the-backlog','Heap (Priority Queue)','heap-priority-queue'),(1801,'number-of-orders-in-the-backlog','Simulation','simulation'),(1802,'maximum-value-at-a-given-index-in-a-bounded-array','Binary Search','binary-search'),(1802,'maximum-value-at-a-given-index-in-a-bounded-array','Greedy','greedy'),(1803,'count-pairs-with-xor-in-a-range','Array','array'),(1803,'count-pairs-with-xor-in-a-range','Bit Manipulation','bit-manipulation'),(1803,'count-pairs-with-xor-in-a-range','Trie','trie'),(1804,'implement-trie-ii-prefix-tree','Hash Table','hash-table'),(1804,'implement-trie-ii-prefix-tree','String','string'),(1804,'implement-trie-ii-prefix-tree','Design','design'),(1804,'implement-trie-ii-prefix-tree','Trie','trie'),(1805,'number-of-different-integers-in-a-string','Hash Table','hash-table'),(1805,'number-of-different-integers-in-a-string','String','string'),(1806,'minimum-number-of-operations-to-reinitialize-a-permutation','Array','array'),(1806,'minimum-number-of-operations-to-reinitialize-a-permutation','Math','math'),(1806,'minimum-number-of-operations-to-reinitialize-a-permutation','Simulation','simulation'),(1807,'evaluate-the-bracket-pairs-of-a-string','Array','array'),(1807,'evaluate-the-bracket-pairs-of-a-string','Hash Table','hash-table'),(1807,'evaluate-the-bracket-pairs-of-a-string','String','string'),(1808,'maximize-number-of-nice-divisors','Math','math'),(1808,'maximize-number-of-nice-divisors','Recursion','recursion'),(1809,'ad-free-sessions','Database','database'),(1810,'minimum-path-cost-in-a-hidden-grid','Depth-First Search','depth-first-search'),(1810,'minimum-path-cost-in-a-hidden-grid','Breadth-First Search','breadth-first-search'),(1810,'minimum-path-cost-in-a-hidden-grid','Graph','graph'),(1810,'minimum-path-cost-in-a-hidden-grid','Heap (Priority Queue)','heap-priority-queue'),(1810,'minimum-path-cost-in-a-hidden-grid','Interactive','interactive'),(1811,'find-interview-candidates','Database','database'),(1812,'determine-color-of-a-chessboard-square','Math','math'),(1812,'determine-color-of-a-chessboard-square','String','string'),(1813,'sentence-similarity-iii','Array','array'),(1813,'sentence-similarity-iii','Two Pointers','two-pointers'),(1813,'sentence-similarity-iii','String','string'),(1814,'count-nice-pairs-in-an-array','Array','array'),(1814,'count-nice-pairs-in-an-array','Hash Table','hash-table'),(1814,'count-nice-pairs-in-an-array','Math','math'),(1814,'count-nice-pairs-in-an-array','Counting','counting'),(1815,'maximum-number-of-groups-getting-fresh-donuts','Array','array'),(1815,'maximum-number-of-groups-getting-fresh-donuts','Dynamic Programming','dynamic-programming'),(1815,'maximum-number-of-groups-getting-fresh-donuts','Bit Manipulation','bit-manipulation'),(1815,'maximum-number-of-groups-getting-fresh-donuts','Memoization','memoization'),(1815,'maximum-number-of-groups-getting-fresh-donuts','Bitmask','bitmask'),(1816,'truncate-sentence','Array','array'),(1816,'truncate-sentence','String','string'),(1817,'finding-the-users-active-minutes','Array','array'),(1817,'finding-the-users-active-minutes','Hash Table','hash-table'),(1818,'minimum-absolute-sum-difference','Array','array'),(1818,'minimum-absolute-sum-difference','Binary Search','binary-search'),(1818,'minimum-absolute-sum-difference','Sorting','sorting'),(1818,'minimum-absolute-sum-difference','Ordered Set','ordered-set'),(1819,'number-of-different-subsequences-gcds','Array','array'),(1819,'number-of-different-subsequences-gcds','Math','math'),(1819,'number-of-different-subsequences-gcds','Counting','counting'),(1819,'number-of-different-subsequences-gcds','Number Theory','number-theory'),(1820,'maximum-number-of-accepted-invitations','Array','array'),(1820,'maximum-number-of-accepted-invitations','Backtracking','backtracking'),(1820,'maximum-number-of-accepted-invitations','Matrix','matrix'),(1821,'find-customers-with-positive-revenue-this-year','Database','database'),(1822,'sign-of-the-product-of-an-array','Array','array'),(1822,'sign-of-the-product-of-an-array','Math','math'),(1823,'find-the-winner-of-the-circular-game','Array','array'),(1823,'find-the-winner-of-the-circular-game','Math','math'),(1823,'find-the-winner-of-the-circular-game','Recursion','recursion'),(1823,'find-the-winner-of-the-circular-game','Queue','queue'),(1823,'find-the-winner-of-the-circular-game','Simulation','simulation'),(1824,'minimum-sideway-jumps','Array','array'),(1824,'minimum-sideway-jumps','Dynamic Programming','dynamic-programming'),(1824,'minimum-sideway-jumps','Greedy','greedy'),(1825,'finding-mk-average','Design','design'),(1825,'finding-mk-average','Queue','queue'),(1825,'finding-mk-average','Heap (Priority Queue)','heap-priority-queue'),(1825,'finding-mk-average','Data Stream','data-stream'),(1825,'finding-mk-average','Ordered Set','ordered-set'),(1826,'faulty-sensor','Array','array'),(1826,'faulty-sensor','Two Pointers','two-pointers'),(1827,'minimum-operations-to-make-the-array-increasing','Array','array'),(1827,'minimum-operations-to-make-the-array-increasing','Greedy','greedy'),(1828,'queries-on-number-of-points-inside-a-circle','Array','array'),(1828,'queries-on-number-of-points-inside-a-circle','Math','math'),(1828,'queries-on-number-of-points-inside-a-circle','Geometry','geometry'),(1829,'maximum-xor-for-each-query','Array','array'),(1829,'maximum-xor-for-each-query','Bit Manipulation','bit-manipulation'),(1829,'maximum-xor-for-each-query','Prefix Sum','prefix-sum'),(1830,'minimum-number-of-operations-to-make-string-sorted','Math','math'),(1830,'minimum-number-of-operations-to-make-string-sorted','String','string'),(1830,'minimum-number-of-operations-to-make-string-sorted','Combinatorics','combinatorics'),(1831,'maximum-transaction-each-day','Database','database'),(1832,'check-if-the-sentence-is-pangram','Hash Table','hash-table'),(1832,'check-if-the-sentence-is-pangram','String','string'),(1833,'maximum-ice-cream-bars','Array','array'),(1833,'maximum-ice-cream-bars','Greedy','greedy'),(1833,'maximum-ice-cream-bars','Sorting','sorting'),(1834,'single-threaded-cpu','Array','array'),(1834,'single-threaded-cpu','Sorting','sorting'),(1834,'single-threaded-cpu','Heap (Priority Queue)','heap-priority-queue'),(1835,'find-xor-sum-of-all-pairs-bitwise-and','Array','array'),(1835,'find-xor-sum-of-all-pairs-bitwise-and','Math','math'),(1835,'find-xor-sum-of-all-pairs-bitwise-and','Bit Manipulation','bit-manipulation'),(1836,'remove-duplicates-from-an-unsorted-linked-list','Hash Table','hash-table'),(1836,'remove-duplicates-from-an-unsorted-linked-list','Linked List','linked-list'),(1837,'sum-of-digits-in-base-k','Math','math'),(1838,'frequency-of-the-most-frequent-element','Array','array'),(1838,'frequency-of-the-most-frequent-element','Binary Search','binary-search'),(1838,'frequency-of-the-most-frequent-element','Greedy','greedy'),(1838,'frequency-of-the-most-frequent-element','Sliding Window','sliding-window'),(1838,'frequency-of-the-most-frequent-element','Sorting','sorting'),(1838,'frequency-of-the-most-frequent-element','Prefix Sum','prefix-sum'),(1839,'longest-substring-of-all-vowels-in-order','String','string'),(1839,'longest-substring-of-all-vowels-in-order','Sliding Window','sliding-window'),(1840,'maximum-building-height','Array','array'),(1840,'maximum-building-height','Math','math'),(1841,'league-statistics','Database','database'),(1842,'next-palindrome-using-same-digits','Two Pointers','two-pointers'),(1842,'next-palindrome-using-same-digits','String','string'),(1843,'suspicious-bank-accounts','Database','database'),(1844,'replace-all-digits-with-characters','String','string'),(1845,'seat-reservation-manager','Design','design'),(1845,'seat-reservation-manager','Heap (Priority Queue)','heap-priority-queue'),(1846,'maximum-element-after-decreasing-and-rearranging','Array','array'),(1846,'maximum-element-after-decreasing-and-rearranging','Greedy','greedy'),(1846,'maximum-element-after-decreasing-and-rearranging','Sorting','sorting'),(1847,'closest-room','Array','array'),(1847,'closest-room','Binary Search','binary-search'),(1847,'closest-room','Sorting','sorting'),(1848,'minimum-distance-to-the-target-element','Array','array'),(1849,'splitting-a-string-into-descending-consecutive-values','String','string'),(1849,'splitting-a-string-into-descending-consecutive-values','Backtracking','backtracking'),(1850,'minimum-adjacent-swaps-to-reach-the-kth-smallest-number','Two Pointers','two-pointers'),(1850,'minimum-adjacent-swaps-to-reach-the-kth-smallest-number','String','string'),(1850,'minimum-adjacent-swaps-to-reach-the-kth-smallest-number','Greedy','greedy'),(1851,'minimum-interval-to-include-each-query','Array','array'),(1851,'minimum-interval-to-include-each-query','Binary Search','binary-search'),(1851,'minimum-interval-to-include-each-query','Line Sweep','line-sweep'),(1851,'minimum-interval-to-include-each-query','Sorting','sorting'),(1851,'minimum-interval-to-include-each-query','Heap (Priority Queue)','heap-priority-queue'),(1852,'distinct-numbers-in-each-subarray','Array','array'),(1852,'distinct-numbers-in-each-subarray','Hash Table','hash-table'),(1852,'distinct-numbers-in-each-subarray','Sliding Window','sliding-window'),(1853,'convert-date-format','Database','database'),(1854,'maximum-population-year','Array','array'),(1854,'maximum-population-year','Counting','counting'),(1855,'maximum-distance-between-a-pair-of-values','Array','array'),(1855,'maximum-distance-between-a-pair-of-values','Two Pointers','two-pointers'),(1855,'maximum-distance-between-a-pair-of-values','Binary Search','binary-search'),(1855,'maximum-distance-between-a-pair-of-values','Greedy','greedy'),(1856,'maximum-subarray-min-product','Array','array'),(1856,'maximum-subarray-min-product','Stack','stack'),(1856,'maximum-subarray-min-product','Monotonic Stack','monotonic-stack'),(1856,'maximum-subarray-min-product','Prefix Sum','prefix-sum'),(1857,'largest-color-value-in-a-directed-graph','Hash Table','hash-table'),(1857,'largest-color-value-in-a-directed-graph','Dynamic Programming','dynamic-programming'),(1857,'largest-color-value-in-a-directed-graph','Graph','graph'),(1857,'largest-color-value-in-a-directed-graph','Topological Sort','topological-sort'),(1857,'largest-color-value-in-a-directed-graph','Memoization','memoization'),(1857,'largest-color-value-in-a-directed-graph','Counting','counting'),(1858,'longest-word-with-all-prefixes','Depth-First Search','depth-first-search'),(1858,'longest-word-with-all-prefixes','Trie','trie'),(1859,'sorting-the-sentence','String','string'),(1859,'sorting-the-sentence','Sorting','sorting'),(1860,'incremental-memory-leak','Simulation','simulation'),(1861,'rotating-the-box','Array','array'),(1861,'rotating-the-box','Two Pointers','two-pointers'),(1861,'rotating-the-box','Matrix','matrix'),(1862,'sum-of-floored-pairs','Array','array'),(1862,'sum-of-floored-pairs','Math','math'),(1862,'sum-of-floored-pairs','Binary Search','binary-search'),(1862,'sum-of-floored-pairs','Prefix Sum','prefix-sum'),(1863,'sum-of-all-subset-xor-totals','Array','array'),(1863,'sum-of-all-subset-xor-totals','Math','math'),(1863,'sum-of-all-subset-xor-totals','Backtracking','backtracking'),(1863,'sum-of-all-subset-xor-totals','Bit Manipulation','bit-manipulation'),(1863,'sum-of-all-subset-xor-totals','Combinatorics','combinatorics'),(1864,'minimum-number-of-swaps-to-make-the-binary-string-alternating','String','string'),(1864,'minimum-number-of-swaps-to-make-the-binary-string-alternating','Greedy','greedy'),(1865,'finding-pairs-with-a-certain-sum','Array','array'),(1865,'finding-pairs-with-a-certain-sum','Hash Table','hash-table'),(1865,'finding-pairs-with-a-certain-sum','Design','design'),(1866,'number-of-ways-to-rearrange-sticks-with-k-sticks-visible','Math','math'),(1866,'number-of-ways-to-rearrange-sticks-with-k-sticks-visible','Dynamic Programming','dynamic-programming'),(1866,'number-of-ways-to-rearrange-sticks-with-k-sticks-visible','Combinatorics','combinatorics'),(1867,'orders-with-maximum-quantity-above-average','Database','database'),(1868,'product-of-two-run-length-encoded-arrays','Array','array'),(1868,'product-of-two-run-length-encoded-arrays','Two Pointers','two-pointers'),(1869,'longer-contiguous-segments-of-ones-than-zeros','String','string'),(1870,'minimum-speed-to-arrive-on-time','Array','array'),(1870,'minimum-speed-to-arrive-on-time','Binary Search','binary-search'),(1871,'jump-game-vii','Two Pointers','two-pointers'),(1871,'jump-game-vii','String','string'),(1871,'jump-game-vii','Prefix Sum','prefix-sum'),(1872,'stone-game-viii','Array','array'),(1872,'stone-game-viii','Math','math'),(1872,'stone-game-viii','Dynamic Programming','dynamic-programming'),(1872,'stone-game-viii','Prefix Sum','prefix-sum'),(1872,'stone-game-viii','Game Theory','game-theory'),(1873,'calculate-special-bonus','Database','database'),(1874,'minimize-product-sum-of-two-arrays','Array','array'),(1874,'minimize-product-sum-of-two-arrays','Greedy','greedy'),(1874,'minimize-product-sum-of-two-arrays','Sorting','sorting'),(1875,'group-employees-of-the-same-salary','Database','database'),(1876,'substrings-of-size-three-with-distinct-characters','Hash Table','hash-table'),(1876,'substrings-of-size-three-with-distinct-characters','String','string'),(1876,'substrings-of-size-three-with-distinct-characters','Sliding Window','sliding-window'),(1876,'substrings-of-size-three-with-distinct-characters','Counting','counting'),(1877,'minimize-maximum-pair-sum-in-array','Array','array'),(1877,'minimize-maximum-pair-sum-in-array','Two Pointers','two-pointers'),(1877,'minimize-maximum-pair-sum-in-array','Greedy','greedy'),(1877,'minimize-maximum-pair-sum-in-array','Sorting','sorting'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Array','array'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Math','math'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Sorting','sorting'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Heap (Priority Queue)','heap-priority-queue'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Matrix','matrix'),(1878,'get-biggest-three-rhombus-sums-in-a-grid','Prefix Sum','prefix-sum'),(1879,'minimum-xor-sum-of-two-arrays','Array','array'),(1879,'minimum-xor-sum-of-two-arrays','Dynamic Programming','dynamic-programming'),(1879,'minimum-xor-sum-of-two-arrays','Bit Manipulation','bit-manipulation'),(1879,'minimum-xor-sum-of-two-arrays','Bitmask','bitmask'),(1880,'check-if-word-equals-summation-of-two-words','String','string'),(1881,'maximum-value-after-insertion','String','string'),(1881,'maximum-value-after-insertion','Greedy','greedy'),(1882,'process-tasks-using-servers','Array','array'),(1882,'process-tasks-using-servers','Heap (Priority Queue)','heap-priority-queue'),(1883,'minimum-skips-to-arrive-at-meeting-on-time','Array','array'),(1883,'minimum-skips-to-arrive-at-meeting-on-time','Dynamic Programming','dynamic-programming'),(1884,'egg-drop-with-2-eggs-and-n-floors','Math','math'),(1884,'egg-drop-with-2-eggs-and-n-floors','Dynamic Programming','dynamic-programming'),(1885,'count-pairs-in-two-arrays','Array','array'),(1885,'count-pairs-in-two-arrays','Binary Search','binary-search'),(1885,'count-pairs-in-two-arrays','Sorting','sorting'),(1886,'determine-whether-matrix-can-be-obtained-by-rotation','Array','array'),(1886,'determine-whether-matrix-can-be-obtained-by-rotation','Matrix','matrix'),(1887,'reduction-operations-to-make-the-array-elements-equal','Array','array'),(1887,'reduction-operations-to-make-the-array-elements-equal','Sorting','sorting'),(1888,'minimum-number-of-flips-to-make-the-binary-string-alternating','String','string'),(1888,'minimum-number-of-flips-to-make-the-binary-string-alternating','Dynamic Programming','dynamic-programming'),(1888,'minimum-number-of-flips-to-make-the-binary-string-alternating','Greedy','greedy'),(1888,'minimum-number-of-flips-to-make-the-binary-string-alternating','Sliding Window','sliding-window'),(1889,'minimum-space-wasted-from-packaging','Array','array'),(1889,'minimum-space-wasted-from-packaging','Binary Search','binary-search'),(1889,'minimum-space-wasted-from-packaging','Sorting','sorting'),(1889,'minimum-space-wasted-from-packaging','Prefix Sum','prefix-sum'),(1890,'the-latest-login-in-2020','Database','database'),(1891,'cutting-ribbons','Array','array'),(1891,'cutting-ribbons','Binary Search','binary-search'),(1892,'page-recommendations-ii','Database','database'),(1893,'check-if-all-the-integers-in-a-range-are-covered','Array','array'),(1893,'check-if-all-the-integers-in-a-range-are-covered','Hash Table','hash-table'),(1893,'check-if-all-the-integers-in-a-range-are-covered','Prefix Sum','prefix-sum'),(1894,'find-the-student-that-will-replace-the-chalk','Array','array'),(1894,'find-the-student-that-will-replace-the-chalk','Binary Search','binary-search'),(1894,'find-the-student-that-will-replace-the-chalk','Simulation','simulation'),(1894,'find-the-student-that-will-replace-the-chalk','Prefix Sum','prefix-sum'),(1895,'largest-magic-square','Array','array'),(1895,'largest-magic-square','Matrix','matrix'),(1895,'largest-magic-square','Prefix Sum','prefix-sum'),(1896,'minimum-cost-to-change-the-final-value-of-expression','Math','math'),(1896,'minimum-cost-to-change-the-final-value-of-expression','String','string'),(1896,'minimum-cost-to-change-the-final-value-of-expression','Dynamic Programming','dynamic-programming'),(1896,'minimum-cost-to-change-the-final-value-of-expression','Stack','stack'),(1897,'redistribute-characters-to-make-all-strings-equal','Hash Table','hash-table'),(1897,'redistribute-characters-to-make-all-strings-equal','String','string'),(1897,'redistribute-characters-to-make-all-strings-equal','Counting','counting'),(1898,'maximum-number-of-removable-characters','Array','array'),(1898,'maximum-number-of-removable-characters','String','string'),(1898,'maximum-number-of-removable-characters','Binary Search','binary-search'),(1899,'merge-triplets-to-form-target-triplet','Array','array'),(1899,'merge-triplets-to-form-target-triplet','Greedy','greedy'),(1900,'the-earliest-and-latest-rounds-where-players-compete','Dynamic Programming','dynamic-programming'),(1900,'the-earliest-and-latest-rounds-where-players-compete','Memoization','memoization'),(1901,'find-a-peak-element-ii','Array','array'),(1901,'find-a-peak-element-ii','Binary Search','binary-search'),(1901,'find-a-peak-element-ii','Matrix','matrix'),(1902,'depth-of-bst-given-insertion-order','Tree','tree'),(1902,'depth-of-bst-given-insertion-order','Binary Search Tree','binary-search-tree'),(1902,'depth-of-bst-given-insertion-order','Binary Tree','binary-tree'),(1902,'depth-of-bst-given-insertion-order','Ordered Set','ordered-set'),(1903,'largest-odd-number-in-string','Math','math'),(1903,'largest-odd-number-in-string','String','string'),(1903,'largest-odd-number-in-string','Greedy','greedy'),(1904,'the-number-of-full-rounds-you-have-played','Math','math'),(1904,'the-number-of-full-rounds-you-have-played','String','string'),(1905,'count-sub-islands','Array','array'),(1905,'count-sub-islands','Depth-First Search','depth-first-search'),(1905,'count-sub-islands','Breadth-First Search','breadth-first-search'),(1905,'count-sub-islands','Union Find','union-find'),(1905,'count-sub-islands','Matrix','matrix'),(1906,'minimum-absolute-difference-queries','Array','array'),(1906,'minimum-absolute-difference-queries','Hash Table','hash-table'),(1907,'count-salary-categories','Database','database'),(1908,'game-of-nim','Array','array'),(1908,'game-of-nim','Math','math'),(1908,'game-of-nim','Dynamic Programming','dynamic-programming'),(1908,'game-of-nim','Bit Manipulation','bit-manipulation'),(1908,'game-of-nim','Brainteaser','brainteaser'),(1908,'game-of-nim','Game Theory','game-theory'),(1909,'remove-one-element-to-make-the-array-strictly-increasing','Array','array'),(1910,'remove-all-occurrences-of-a-substring','String','string'),(1911,'maximum-alternating-subsequence-sum','Array','array'),(1911,'maximum-alternating-subsequence-sum','Dynamic Programming','dynamic-programming'),(1912,'design-movie-rental-system','Array','array'),(1912,'design-movie-rental-system','Hash Table','hash-table'),(1912,'design-movie-rental-system','Design','design'),(1912,'design-movie-rental-system','Heap (Priority Queue)','heap-priority-queue'),(1912,'design-movie-rental-system','Ordered Set','ordered-set'),(1913,'maximum-product-difference-between-two-pairs','Array','array'),(1913,'maximum-product-difference-between-two-pairs','Sorting','sorting'),(1914,'cyclically-rotating-a-grid','Array','array'),(1914,'cyclically-rotating-a-grid','Matrix','matrix'),(1914,'cyclically-rotating-a-grid','Simulation','simulation'),(1915,'number-of-wonderful-substrings','Hash Table','hash-table'),(1915,'number-of-wonderful-substrings','String','string'),(1915,'number-of-wonderful-substrings','Bit Manipulation','bit-manipulation'),(1915,'number-of-wonderful-substrings','Prefix Sum','prefix-sum'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Math','math'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Dynamic Programming','dynamic-programming'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Tree','tree'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Graph','graph'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Topological Sort','topological-sort'),(1916,'count-ways-to-build-rooms-in-an-ant-colony','Combinatorics','combinatorics'),(1917,'leetcodify-friends-recommendations','Database','database'),(1918,'kth-smallest-subarray-sum','Array','array'),(1918,'kth-smallest-subarray-sum','Binary Search','binary-search'),(1918,'kth-smallest-subarray-sum','Sliding Window','sliding-window'),(1919,'leetcodify-similar-friends','Database','database'),(1920,'build-array-from-permutation','Array','array'),(1920,'build-array-from-permutation','Simulation','simulation'),(1921,'eliminate-maximum-number-of-monsters','Array','array'),(1921,'eliminate-maximum-number-of-monsters','Greedy','greedy'),(1921,'eliminate-maximum-number-of-monsters','Sorting','sorting'),(1922,'count-good-numbers','Math','math'),(1922,'count-good-numbers','Recursion','recursion'),(1923,'longest-common-subpath','Array','array'),(1923,'longest-common-subpath','Binary Search','binary-search'),(1923,'longest-common-subpath','Rolling Hash','rolling-hash'),(1923,'longest-common-subpath','Suffix Array','suffix-array'),(1923,'longest-common-subpath','Hash Function','hash-function'),(1924,'erect-the-fence-ii','Array','array'),(1924,'erect-the-fence-ii','Math','math'),(1924,'erect-the-fence-ii','Geometry','geometry'),(1925,'count-square-sum-triples','Math','math'),(1925,'count-square-sum-triples','Enumeration','enumeration'),(1926,'nearest-exit-from-entrance-in-maze','Array','array'),(1926,'nearest-exit-from-entrance-in-maze','Breadth-First Search','breadth-first-search'),(1926,'nearest-exit-from-entrance-in-maze','Matrix','matrix'),(1927,'sum-game','Math','math'),(1927,'sum-game','Greedy','greedy'),(1927,'sum-game','Game Theory','game-theory'),(1928,'minimum-cost-to-reach-destination-in-time','Dynamic Programming','dynamic-programming'),(1928,'minimum-cost-to-reach-destination-in-time','Graph','graph'),(1929,'concatenation-of-array','Array','array'),(1930,'unique-length-3-palindromic-subsequences','Hash Table','hash-table'),(1930,'unique-length-3-palindromic-subsequences','String','string'),(1930,'unique-length-3-palindromic-subsequences','Prefix Sum','prefix-sum'),(1931,'painting-a-grid-with-three-different-colors','Dynamic Programming','dynamic-programming'),(1932,'merge-bsts-to-create-single-bst','Hash Table','hash-table'),(1932,'merge-bsts-to-create-single-bst','Binary Search','binary-search'),(1932,'merge-bsts-to-create-single-bst','Tree','tree'),(1932,'merge-bsts-to-create-single-bst','Depth-First Search','depth-first-search'),(1932,'merge-bsts-to-create-single-bst','Binary Tree','binary-tree'),(1933,'check-if-string-is-decomposable-into-value-equal-substrings','String','string'),(1934,'confirmation-rate','Database','database'),(1935,'maximum-number-of-words-you-can-type','Hash Table','hash-table'),(1935,'maximum-number-of-words-you-can-type','String','string'),(1936,'add-minimum-number-of-rungs','Array','array'),(1936,'add-minimum-number-of-rungs','Greedy','greedy'),(1937,'maximum-number-of-points-with-cost','Array','array'),(1937,'maximum-number-of-points-with-cost','Dynamic Programming','dynamic-programming'),(1938,'maximum-genetic-difference-query','Array','array'),(1938,'maximum-genetic-difference-query','Bit Manipulation','bit-manipulation'),(1938,'maximum-genetic-difference-query','Trie','trie'),(1939,'users-that-actively-request-confirmation-messages','Database','database'),(1940,'longest-common-subsequence-between-sorted-arrays','Array','array'),(1940,'longest-common-subsequence-between-sorted-arrays','Hash Table','hash-table'),(1940,'longest-common-subsequence-between-sorted-arrays','Counting','counting'),(1941,'check-if-all-characters-have-equal-number-of-occurrences','Hash Table','hash-table'),(1941,'check-if-all-characters-have-equal-number-of-occurrences','String','string'),(1941,'check-if-all-characters-have-equal-number-of-occurrences','Counting','counting'),(1942,'the-number-of-the-smallest-unoccupied-chair','Array','array'),(1942,'the-number-of-the-smallest-unoccupied-chair','Heap (Priority Queue)','heap-priority-queue'),(1942,'the-number-of-the-smallest-unoccupied-chair','Ordered Set','ordered-set'),(1943,'describe-the-painting','Array','array'),(1943,'describe-the-painting','Prefix Sum','prefix-sum'),(1944,'number-of-visible-people-in-a-queue','Array','array'),(1944,'number-of-visible-people-in-a-queue','Stack','stack'),(1944,'number-of-visible-people-in-a-queue','Monotonic Stack','monotonic-stack'),(1945,'sum-of-digits-of-string-after-convert','String','string'),(1945,'sum-of-digits-of-string-after-convert','Simulation','simulation'),(1946,'largest-number-after-mutating-substring','Array','array'),(1946,'largest-number-after-mutating-substring','String','string'),(1946,'largest-number-after-mutating-substring','Greedy','greedy'),(1947,'maximum-compatibility-score-sum','Array','array'),(1947,'maximum-compatibility-score-sum','Dynamic Programming','dynamic-programming'),(1947,'maximum-compatibility-score-sum','Backtracking','backtracking'),(1947,'maximum-compatibility-score-sum','Bit Manipulation','bit-manipulation'),(1947,'maximum-compatibility-score-sum','Bitmask','bitmask'),(1948,'delete-duplicate-folders-in-system','Array','array'),(1948,'delete-duplicate-folders-in-system','Hash Table','hash-table'),(1948,'delete-duplicate-folders-in-system','String','string'),(1948,'delete-duplicate-folders-in-system','Trie','trie'),(1948,'delete-duplicate-folders-in-system','Hash Function','hash-function'),(1949,'strong-friendship','Database','database'),(1950,'maximum-of-minimum-values-in-all-subarrays','Array','array'),(1950,'maximum-of-minimum-values-in-all-subarrays','Stack','stack'),(1950,'maximum-of-minimum-values-in-all-subarrays','Monotonic Stack','monotonic-stack'),(1951,'all-the-pairs-with-the-maximum-number-of-common-followers','Database','database'),(1952,'three-divisors','Math','math'),(1953,'maximum-number-of-weeks-for-which-you-can-work','Array','array'),(1953,'maximum-number-of-weeks-for-which-you-can-work','Greedy','greedy'),(1954,'minimum-garden-perimeter-to-collect-enough-apples','Math','math'),(1954,'minimum-garden-perimeter-to-collect-enough-apples','Binary Search','binary-search'),(1955,'count-number-of-special-subsequences','Array','array'),(1955,'count-number-of-special-subsequences','Dynamic Programming','dynamic-programming'),(1956,'minimum-time-for-k-virus-variants-to-spread','Array','array'),(1956,'minimum-time-for-k-virus-variants-to-spread','Math','math'),(1956,'minimum-time-for-k-virus-variants-to-spread','Binary Search','binary-search'),(1956,'minimum-time-for-k-virus-variants-to-spread','Geometry','geometry'),(1956,'minimum-time-for-k-virus-variants-to-spread','Enumeration','enumeration'),(1957,'delete-characters-to-make-fancy-string','String','string'),(1958,'check-if-move-is-legal','Array','array'),(1958,'check-if-move-is-legal','Matrix','matrix'),(1958,'check-if-move-is-legal','Enumeration','enumeration'),(1959,'minimum-total-space-wasted-with-k-resizing-operations','Array','array'),(1959,'minimum-total-space-wasted-with-k-resizing-operations','Dynamic Programming','dynamic-programming'),(1960,'maximum-product-of-the-length-of-two-palindromic-substrings','String','string'),(1960,'maximum-product-of-the-length-of-two-palindromic-substrings','Rolling Hash','rolling-hash'),(1960,'maximum-product-of-the-length-of-two-palindromic-substrings','Hash Function','hash-function'),(1961,'check-if-string-is-a-prefix-of-array','Array','array'),(1961,'check-if-string-is-a-prefix-of-array','String','string'),(1962,'remove-stones-to-minimize-the-total','Array','array'),(1962,'remove-stones-to-minimize-the-total','Heap (Priority Queue)','heap-priority-queue'),(1963,'minimum-number-of-swaps-to-make-the-string-balanced','Two Pointers','two-pointers'),(1963,'minimum-number-of-swaps-to-make-the-string-balanced','String','string'),(1963,'minimum-number-of-swaps-to-make-the-string-balanced','Stack','stack'),(1963,'minimum-number-of-swaps-to-make-the-string-balanced','Greedy','greedy'),(1964,'find-the-longest-valid-obstacle-course-at-each-position','Array','array'),(1964,'find-the-longest-valid-obstacle-course-at-each-position','Binary Search','binary-search'),(1964,'find-the-longest-valid-obstacle-course-at-each-position','Binary Indexed Tree','binary-indexed-tree'),(1965,'employees-with-missing-information','Database','database'),(1966,'binary-searchable-numbers-in-an-unsorted-array','Array','array'),(1966,'binary-searchable-numbers-in-an-unsorted-array','Binary Search','binary-search'),(1967,'number-of-strings-that-appear-as-substrings-in-word','String','string'),(1968,'array-with-elements-not-equal-to-average-of-neighbors','Array','array'),(1968,'array-with-elements-not-equal-to-average-of-neighbors','Greedy','greedy'),(1968,'array-with-elements-not-equal-to-average-of-neighbors','Sorting','sorting'),(1969,'minimum-non-zero-product-of-the-array-elements','Math','math'),(1969,'minimum-non-zero-product-of-the-array-elements','Greedy','greedy'),(1969,'minimum-non-zero-product-of-the-array-elements','Recursion','recursion'),(1970,'last-day-where-you-can-still-cross','Array','array'),(1970,'last-day-where-you-can-still-cross','Binary Search','binary-search'),(1970,'last-day-where-you-can-still-cross','Depth-First Search','depth-first-search'),(1970,'last-day-where-you-can-still-cross','Breadth-First Search','breadth-first-search'),(1970,'last-day-where-you-can-still-cross','Union Find','union-find'),(1970,'last-day-where-you-can-still-cross','Matrix','matrix'),(1971,'find-if-path-exists-in-graph','Depth-First Search','depth-first-search'),(1971,'find-if-path-exists-in-graph','Breadth-First Search','breadth-first-search'),(1971,'find-if-path-exists-in-graph','Union Find','union-find'),(1971,'find-if-path-exists-in-graph','Graph','graph'),(1972,'first-and-last-call-on-the-same-day','Database','database'),(1973,'count-nodes-equal-to-sum-of-descendants','Tree','tree'),(1973,'count-nodes-equal-to-sum-of-descendants','Depth-First Search','depth-first-search'),(1973,'count-nodes-equal-to-sum-of-descendants','Binary Search Tree','binary-search-tree'),(1973,'count-nodes-equal-to-sum-of-descendants','Binary Tree','binary-tree'),(1974,'minimum-time-to-type-word-using-special-typewriter','String','string'),(1974,'minimum-time-to-type-word-using-special-typewriter','Greedy','greedy'),(1975,'maximum-matrix-sum','Array','array'),(1975,'maximum-matrix-sum','Greedy','greedy'),(1975,'maximum-matrix-sum','Matrix','matrix'),(1976,'number-of-ways-to-arrive-at-destination','Dynamic Programming','dynamic-programming'),(1976,'number-of-ways-to-arrive-at-destination','Graph','graph'),(1976,'number-of-ways-to-arrive-at-destination','Topological Sort','topological-sort'),(1976,'number-of-ways-to-arrive-at-destination','Shortest Path','shortest-path'),(1977,'number-of-ways-to-separate-numbers','String','string'),(1977,'number-of-ways-to-separate-numbers','Dynamic Programming','dynamic-programming'),(1977,'number-of-ways-to-separate-numbers','Suffix Array','suffix-array'),(1978,'employees-whose-manager-left-the-company','Database','database'),(1979,'find-greatest-common-divisor-of-array','Array','array'),(1979,'find-greatest-common-divisor-of-array','Math','math'),(1979,'find-greatest-common-divisor-of-array','Number Theory','number-theory'),(1980,'find-unique-binary-string','Array','array'),(1980,'find-unique-binary-string','String','string'),(1980,'find-unique-binary-string','Backtracking','backtracking'),(1981,'minimize-the-difference-between-target-and-chosen-elements','Array','array'),(1981,'minimize-the-difference-between-target-and-chosen-elements','Dynamic Programming','dynamic-programming'),(1981,'minimize-the-difference-between-target-and-chosen-elements','Matrix','matrix'),(1982,'find-array-given-subset-sums','Array','array'),(1982,'find-array-given-subset-sums','Divide and Conquer','divide-and-conquer'),(1983,'widest-pair-of-indices-with-equal-range-sum','Array','array'),(1983,'widest-pair-of-indices-with-equal-range-sum','Hash Table','hash-table'),(1983,'widest-pair-of-indices-with-equal-range-sum','Prefix Sum','prefix-sum'),(1984,'minimum-difference-between-highest-and-lowest-of-k-scores','Array','array'),(1984,'minimum-difference-between-highest-and-lowest-of-k-scores','Sliding Window','sliding-window'),(1984,'minimum-difference-between-highest-and-lowest-of-k-scores','Sorting','sorting'),(1985,'find-the-kth-largest-integer-in-the-array','Array','array'),(1985,'find-the-kth-largest-integer-in-the-array','String','string'),(1985,'find-the-kth-largest-integer-in-the-array','Divide and Conquer','divide-and-conquer'),(1985,'find-the-kth-largest-integer-in-the-array','Sorting','sorting'),(1985,'find-the-kth-largest-integer-in-the-array','Heap (Priority Queue)','heap-priority-queue'),(1985,'find-the-kth-largest-integer-in-the-array','Quickselect','quickselect'),(1986,'minimum-number-of-work-sessions-to-finish-the-tasks','Array','array'),(1986,'minimum-number-of-work-sessions-to-finish-the-tasks','Dynamic Programming','dynamic-programming'),(1986,'minimum-number-of-work-sessions-to-finish-the-tasks','Backtracking','backtracking'),(1986,'minimum-number-of-work-sessions-to-finish-the-tasks','Bit Manipulation','bit-manipulation'),(1986,'minimum-number-of-work-sessions-to-finish-the-tasks','Bitmask','bitmask'),(1987,'number-of-unique-good-subsequences','String','string'),(1987,'number-of-unique-good-subsequences','Dynamic Programming','dynamic-programming'),(1988,'find-cutoff-score-for-each-school','Database','database'),(1989,'maximum-number-of-people-that-can-be-caught-in-tag','Array','array'),(1989,'maximum-number-of-people-that-can-be-caught-in-tag','Greedy','greedy'),(1990,'count-the-number-of-experiments','Database','database'),(1991,'find-the-middle-index-in-array','Array','array'),(1991,'find-the-middle-index-in-array','Prefix Sum','prefix-sum'),(1992,'find-all-groups-of-farmland','Array','array'),(1992,'find-all-groups-of-farmland','Depth-First Search','depth-first-search'),(1992,'find-all-groups-of-farmland','Breadth-First Search','breadth-first-search'),(1992,'find-all-groups-of-farmland','Matrix','matrix'),(1993,'operations-on-tree','Hash Table','hash-table'),(1993,'operations-on-tree','Tree','tree'),(1993,'operations-on-tree','Depth-First Search','depth-first-search'),(1993,'operations-on-tree','Breadth-First Search','breadth-first-search'),(1993,'operations-on-tree','Design','design'),(1994,'the-number-of-good-subsets','Array','array'),(1994,'the-number-of-good-subsets','Math','math'),(1994,'the-number-of-good-subsets','Dynamic Programming','dynamic-programming'),(1994,'the-number-of-good-subsets','Bit Manipulation','bit-manipulation'),(1994,'the-number-of-good-subsets','Bitmask','bitmask'),(1995,'count-special-quadruplets','Array','array'),(1995,'count-special-quadruplets','Enumeration','enumeration'),(1996,'the-number-of-weak-characters-in-the-game','Array','array'),(1996,'the-number-of-weak-characters-in-the-game','Stack','stack'),(1996,'the-number-of-weak-characters-in-the-game','Greedy','greedy'),(1996,'the-number-of-weak-characters-in-the-game','Sorting','sorting'),(1996,'the-number-of-weak-characters-in-the-game','Monotonic Stack','monotonic-stack'),(1997,'first-day-where-you-have-been-in-all-the-rooms','Array','array'),(1997,'first-day-where-you-have-been-in-all-the-rooms','Dynamic Programming','dynamic-programming'),(1998,'gcd-sort-of-an-array','Array','array'),(1998,'gcd-sort-of-an-array','Math','math'),(1998,'gcd-sort-of-an-array','Union Find','union-find'),(1998,'gcd-sort-of-an-array','Sorting','sorting'),(1999,'smallest-greater-multiple-made-of-two-digits','Math','math'),(1999,'smallest-greater-multiple-made-of-two-digits','Enumeration','enumeration'),(2000,'reverse-prefix-of-word','Two Pointers','two-pointers'),(2000,'reverse-prefix-of-word','String','string'),(2001,'number-of-pairs-of-interchangeable-rectangles','Array','array'),(2001,'number-of-pairs-of-interchangeable-rectangles','Hash Table','hash-table'),(2001,'number-of-pairs-of-interchangeable-rectangles','Math','math'),(2001,'number-of-pairs-of-interchangeable-rectangles','Counting','counting'),(2001,'number-of-pairs-of-interchangeable-rectangles','Number Theory','number-theory'),(2002,'maximum-product-of-the-length-of-two-palindromic-subsequences','String','string'),(2002,'maximum-product-of-the-length-of-two-palindromic-subsequences','Dynamic Programming','dynamic-programming'),(2002,'maximum-product-of-the-length-of-two-palindromic-subsequences','Backtracking','backtracking'),(2002,'maximum-product-of-the-length-of-two-palindromic-subsequences','Bit Manipulation','bit-manipulation'),(2002,'maximum-product-of-the-length-of-two-palindromic-subsequences','Bitmask','bitmask'),(2003,'smallest-missing-genetic-value-in-each-subtree','Dynamic Programming','dynamic-programming'),(2003,'smallest-missing-genetic-value-in-each-subtree','Tree','tree'),(2003,'smallest-missing-genetic-value-in-each-subtree','Depth-First Search','depth-first-search'),(2003,'smallest-missing-genetic-value-in-each-subtree','Union Find','union-find'),(2004,'the-number-of-seniors-and-juniors-to-join-the-company','Database','database'),(2005,'subtree-removal-game-with-fibonacci-tree','Math','math'),(2005,'subtree-removal-game-with-fibonacci-tree','Dynamic Programming','dynamic-programming'),(2005,'subtree-removal-game-with-fibonacci-tree','Tree','tree'),(2005,'subtree-removal-game-with-fibonacci-tree','Binary Tree','binary-tree'),(2005,'subtree-removal-game-with-fibonacci-tree','Game Theory','game-theory'),(2006,'count-number-of-pairs-with-absolute-difference-k','Array','array'),(2006,'count-number-of-pairs-with-absolute-difference-k','Hash Table','hash-table'),(2006,'count-number-of-pairs-with-absolute-difference-k','Counting','counting'),(2007,'find-original-array-from-doubled-array','Array','array'),(2007,'find-original-array-from-doubled-array','Hash Table','hash-table'),(2007,'find-original-array-from-doubled-array','Greedy','greedy'),(2007,'find-original-array-from-doubled-array','Sorting','sorting'),(2008,'maximum-earnings-from-taxi','Array','array'),(2008,'maximum-earnings-from-taxi','Binary Search','binary-search'),(2008,'maximum-earnings-from-taxi','Dynamic Programming','dynamic-programming'),(2008,'maximum-earnings-from-taxi','Sorting','sorting'),(2009,'minimum-number-of-operations-to-make-array-continuous','Array','array'),(2009,'minimum-number-of-operations-to-make-array-continuous','Binary Search','binary-search'),(2010,'the-number-of-seniors-and-juniors-to-join-the-company-ii','Database','database'),(2011,'final-value-of-variable-after-performing-operations','Array','array'),(2011,'final-value-of-variable-after-performing-operations','String','string'),(2011,'final-value-of-variable-after-performing-operations','Simulation','simulation'),(2012,'sum-of-beauty-in-the-array','Array','array'),(2013,'detect-squares','Array','array'),(2013,'detect-squares','Hash Table','hash-table'),(2013,'detect-squares','Design','design'),(2013,'detect-squares','Counting','counting'),(2014,'longest-subsequence-repeated-k-times','String','string'),(2014,'longest-subsequence-repeated-k-times','Backtracking','backtracking'),(2014,'longest-subsequence-repeated-k-times','Greedy','greedy'),(2014,'longest-subsequence-repeated-k-times','Counting','counting'),(2014,'longest-subsequence-repeated-k-times','Enumeration','enumeration'),(2015,'average-height-of-buildings-in-each-segment','Array','array'),(2015,'average-height-of-buildings-in-each-segment','Greedy','greedy'),(2015,'average-height-of-buildings-in-each-segment','Sorting','sorting'),(2015,'average-height-of-buildings-in-each-segment','Heap (Priority Queue)','heap-priority-queue'),(2016,'maximum-difference-between-increasing-elements','Array','array'),(2017,'grid-game','Array','array'),(2017,'grid-game','Matrix','matrix'),(2017,'grid-game','Prefix Sum','prefix-sum'),(2018,'check-if-word-can-be-placed-in-crossword','Array','array'),(2018,'check-if-word-can-be-placed-in-crossword','Matrix','matrix'),(2018,'check-if-word-can-be-placed-in-crossword','Enumeration','enumeration'),(2019,'the-score-of-students-solving-math-expression','Array','array'),(2019,'the-score-of-students-solving-math-expression','Math','math'),(2019,'the-score-of-students-solving-math-expression','String','string'),(2019,'the-score-of-students-solving-math-expression','Dynamic Programming','dynamic-programming'),(2019,'the-score-of-students-solving-math-expression','Stack','stack'),(2019,'the-score-of-students-solving-math-expression','Memoization','memoization'),(2020,'number-of-accounts-that-did-not-stream','Database','database'),(2021,'brightest-position-on-street','Array','array'),(2021,'brightest-position-on-street','Prefix Sum','prefix-sum'),(2021,'brightest-position-on-street','Ordered Set','ordered-set'),(2022,'convert-1d-array-into-2d-array','Array','array'),(2022,'convert-1d-array-into-2d-array','Matrix','matrix'),(2022,'convert-1d-array-into-2d-array','Simulation','simulation'),(2023,'number-of-pairs-of-strings-with-concatenation-equal-to-target','Array','array'),(2023,'number-of-pairs-of-strings-with-concatenation-equal-to-target','String','string'),(2024,'maximize-the-confusion-of-an-exam','String','string'),(2024,'maximize-the-confusion-of-an-exam','Binary Search','binary-search'),(2024,'maximize-the-confusion-of-an-exam','Sliding Window','sliding-window'),(2024,'maximize-the-confusion-of-an-exam','Prefix Sum','prefix-sum'),(2025,'maximum-number-of-ways-to-partition-an-array','Array','array'),(2025,'maximum-number-of-ways-to-partition-an-array','Hash Table','hash-table'),(2025,'maximum-number-of-ways-to-partition-an-array','Counting','counting'),(2025,'maximum-number-of-ways-to-partition-an-array','Enumeration','enumeration'),(2025,'maximum-number-of-ways-to-partition-an-array','Prefix Sum','prefix-sum'),(2026,'low-quality-problems','Database','database'),(2027,'minimum-moves-to-convert-string','String','string'),(2027,'minimum-moves-to-convert-string','Greedy','greedy'),(2028,'find-missing-observations','Array','array'),(2028,'find-missing-observations','Math','math'),(2028,'find-missing-observations','Simulation','simulation'),(2029,'stone-game-ix','Array','array'),(2029,'stone-game-ix','Math','math'),(2029,'stone-game-ix','Greedy','greedy'),(2029,'stone-game-ix','Counting','counting'),(2029,'stone-game-ix','Game Theory','game-theory'),(2030,'smallest-k-length-subsequence-with-occurrences-of-a-letter','String','string'),(2030,'smallest-k-length-subsequence-with-occurrences-of-a-letter','Stack','stack'),(2030,'smallest-k-length-subsequence-with-occurrences-of-a-letter','Greedy','greedy'),(2030,'smallest-k-length-subsequence-with-occurrences-of-a-letter','Monotonic Stack','monotonic-stack'),(2031,'count-subarrays-with-more-ones-than-zeros','Array','array'),(2031,'count-subarrays-with-more-ones-than-zeros','Binary Search','binary-search'),(2031,'count-subarrays-with-more-ones-than-zeros','Divide and Conquer','divide-and-conquer'),(2031,'count-subarrays-with-more-ones-than-zeros','Binary Indexed Tree','binary-indexed-tree'),(2031,'count-subarrays-with-more-ones-than-zeros','Segment Tree','segment-tree'),(2031,'count-subarrays-with-more-ones-than-zeros','Merge Sort','merge-sort'),(2031,'count-subarrays-with-more-ones-than-zeros','Ordered Set','ordered-set'),(2032,'two-out-of-three','Array','array'),(2032,'two-out-of-three','Hash Table','hash-table'),(2033,'minimum-operations-to-make-a-uni-value-grid','Array','array'),(2033,'minimum-operations-to-make-a-uni-value-grid','Math','math'),(2033,'minimum-operations-to-make-a-uni-value-grid','Sorting','sorting'),(2033,'minimum-operations-to-make-a-uni-value-grid','Matrix','matrix'),(2034,'stock-price-fluctuation','Hash Table','hash-table'),(2034,'stock-price-fluctuation','Design','design'),(2034,'stock-price-fluctuation','Heap (Priority Queue)','heap-priority-queue'),(2034,'stock-price-fluctuation','Data Stream','data-stream'),(2034,'stock-price-fluctuation','Ordered Set','ordered-set'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Array','array'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Two Pointers','two-pointers'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Binary Search','binary-search'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Dynamic Programming','dynamic-programming'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Bit Manipulation','bit-manipulation'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Ordered Set','ordered-set'),(2035,'partition-array-into-two-arrays-to-minimize-sum-difference','Bitmask','bitmask'),(2036,'maximum-alternating-subarray-sum','Array','array'),(2036,'maximum-alternating-subarray-sum','Dynamic Programming','dynamic-programming'),(2037,'minimum-number-of-moves-to-seat-everyone','Array','array'),(2037,'minimum-number-of-moves-to-seat-everyone','Sorting','sorting'),(2038,'remove-colored-pieces-if-both-neighbors-are-the-same-color','Math','math'),(2038,'remove-colored-pieces-if-both-neighbors-are-the-same-color','String','string'),(2038,'remove-colored-pieces-if-both-neighbors-are-the-same-color','Greedy','greedy'),(2038,'remove-colored-pieces-if-both-neighbors-are-the-same-color','Game Theory','game-theory'),(2039,'the-time-when-the-network-becomes-idle','Array','array'),(2039,'the-time-when-the-network-becomes-idle','Breadth-First Search','breadth-first-search'),(2039,'the-time-when-the-network-becomes-idle','Graph','graph'),(2040,'kth-smallest-product-of-two-sorted-arrays','Array','array'),(2040,'kth-smallest-product-of-two-sorted-arrays','Binary Search','binary-search'),(2041,'accepted-candidates-from-the-interviews','Database','database'),(2042,'check-if-numbers-are-ascending-in-a-sentence','String','string'),(2043,'simple-bank-system','Array','array'),(2043,'simple-bank-system','Hash Table','hash-table'),(2043,'simple-bank-system','Design','design'),(2043,'simple-bank-system','Simulation','simulation'),(2044,'count-number-of-maximum-bitwise-or-subsets','Array','array'),(2044,'count-number-of-maximum-bitwise-or-subsets','Backtracking','backtracking'),(2044,'count-number-of-maximum-bitwise-or-subsets','Bit Manipulation','bit-manipulation'),(2045,'second-minimum-time-to-reach-destination','Breadth-First Search','breadth-first-search'),(2045,'second-minimum-time-to-reach-destination','Graph','graph'),(2045,'second-minimum-time-to-reach-destination','Shortest Path','shortest-path'),(2046,'sort-linked-list-already-sorted-using-absolute-values','Linked List','linked-list'),(2046,'sort-linked-list-already-sorted-using-absolute-values','Two Pointers','two-pointers'),(2046,'sort-linked-list-already-sorted-using-absolute-values','Sorting','sorting'),(2047,'number-of-valid-words-in-a-sentence','String','string'),(2048,'next-greater-numerically-balanced-number','Math','math'),(2048,'next-greater-numerically-balanced-number','Backtracking','backtracking'),(2048,'next-greater-numerically-balanced-number','Enumeration','enumeration'),(2049,'count-nodes-with-the-highest-score','Array','array'),(2049,'count-nodes-with-the-highest-score','Tree','tree'),(2049,'count-nodes-with-the-highest-score','Depth-First Search','depth-first-search'),(2049,'count-nodes-with-the-highest-score','Binary Tree','binary-tree'),(2050,'parallel-courses-iii','Dynamic Programming','dynamic-programming'),(2050,'parallel-courses-iii','Graph','graph'),(2050,'parallel-courses-iii','Topological Sort','topological-sort'),(2051,'the-category-of-each-member-in-the-store','Database','database'),(2052,'minimum-cost-to-separate-sentence-into-rows','Array','array'),(2052,'minimum-cost-to-separate-sentence-into-rows','Dynamic Programming','dynamic-programming'),(2053,'kth-distinct-string-in-an-array','Array','array'),(2053,'kth-distinct-string-in-an-array','Hash Table','hash-table'),(2053,'kth-distinct-string-in-an-array','String','string'),(2053,'kth-distinct-string-in-an-array','Counting','counting'),(2054,'two-best-non-overlapping-events','Array','array'),(2054,'two-best-non-overlapping-events','Binary Search','binary-search'),(2054,'two-best-non-overlapping-events','Dynamic Programming','dynamic-programming'),(2054,'two-best-non-overlapping-events','Sorting','sorting'),(2054,'two-best-non-overlapping-events','Heap (Priority Queue)','heap-priority-queue'),(2055,'plates-between-candles','Array','array'),(2055,'plates-between-candles','String','string'),(2055,'plates-between-candles','Binary Search','binary-search'),(2055,'plates-between-candles','Prefix Sum','prefix-sum'),(2056,'number-of-valid-move-combinations-on-chessboard','Array','array'),(2056,'number-of-valid-move-combinations-on-chessboard','String','string'),(2056,'number-of-valid-move-combinations-on-chessboard','Backtracking','backtracking'),(2056,'number-of-valid-move-combinations-on-chessboard','Simulation','simulation'),(2057,'smallest-index-with-equal-value','Array','array'),(2058,'find-the-minimum-and-maximum-number-of-nodes-between-critical-points','Linked List','linked-list'),(2059,'minimum-operations-to-convert-number','Array','array'),(2059,'minimum-operations-to-convert-number','Breadth-First Search','breadth-first-search'),(2060,'check-if-an-original-string-exists-given-two-encoded-strings','String','string'),(2060,'check-if-an-original-string-exists-given-two-encoded-strings','Dynamic Programming','dynamic-programming'),(2061,'number-of-spaces-cleaning-robot-cleaned','Array','array'),(2061,'number-of-spaces-cleaning-robot-cleaned','Matrix','matrix'),(2061,'number-of-spaces-cleaning-robot-cleaned','Simulation','simulation'),(2062,'count-vowel-substrings-of-a-string','Hash Table','hash-table'),(2062,'count-vowel-substrings-of-a-string','String','string'),(2063,'vowels-of-all-substrings','Math','math'),(2063,'vowels-of-all-substrings','String','string'),(2063,'vowels-of-all-substrings','Dynamic Programming','dynamic-programming'),(2063,'vowels-of-all-substrings','Combinatorics','combinatorics'),(2064,'minimized-maximum-of-products-distributed-to-any-store','Array','array'),(2064,'minimized-maximum-of-products-distributed-to-any-store','Binary Search','binary-search'),(2065,'maximum-path-quality-of-a-graph','Array','array'),(2065,'maximum-path-quality-of-a-graph','Backtracking','backtracking'),(2065,'maximum-path-quality-of-a-graph','Graph','graph'),(2066,'account-balance','Database','database'),(2067,'number-of-equal-count-substrings','String','string'),(2067,'number-of-equal-count-substrings','Counting','counting'),(2067,'number-of-equal-count-substrings','Prefix Sum','prefix-sum'),(2068,'check-whether-two-strings-are-almost-equivalent','Hash Table','hash-table'),(2068,'check-whether-two-strings-are-almost-equivalent','String','string'),(2068,'check-whether-two-strings-are-almost-equivalent','Counting','counting'),(2069,'walking-robot-simulation-ii','Design','design'),(2069,'walking-robot-simulation-ii','Simulation','simulation'),(2070,'most-beautiful-item-for-each-query','Array','array'),(2070,'most-beautiful-item-for-each-query','Binary Search','binary-search'),(2070,'most-beautiful-item-for-each-query','Sorting','sorting'),(2071,'maximum-number-of-tasks-you-can-assign','Array','array'),(2071,'maximum-number-of-tasks-you-can-assign','Binary Search','binary-search'),(2071,'maximum-number-of-tasks-you-can-assign','Greedy','greedy'),(2071,'maximum-number-of-tasks-you-can-assign','Queue','queue'),(2071,'maximum-number-of-tasks-you-can-assign','Sorting','sorting'),(2071,'maximum-number-of-tasks-you-can-assign','Monotonic Queue','monotonic-queue'),(2072,'the-winner-university','Database','database'),(2073,'time-needed-to-buy-tickets','Array','array'),(2073,'time-needed-to-buy-tickets','Queue','queue'),(2073,'time-needed-to-buy-tickets','Simulation','simulation'),(2074,'reverse-nodes-in-even-length-groups','Linked List','linked-list'),(2075,'decode-the-slanted-ciphertext','String','string'),(2075,'decode-the-slanted-ciphertext','Simulation','simulation'),(2076,'process-restricted-friend-requests','Union Find','union-find'),(2076,'process-restricted-friend-requests','Graph','graph'),(2077,'paths-in-maze-that-lead-to-same-room','Graph','graph'),(2078,'two-furthest-houses-with-different-colors','Array','array'),(2078,'two-furthest-houses-with-different-colors','Greedy','greedy'),(2079,'watering-plants','Array','array'),(2080,'range-frequency-queries','Array','array'),(2080,'range-frequency-queries','Hash Table','hash-table'),(2080,'range-frequency-queries','Binary Search','binary-search'),(2080,'range-frequency-queries','Design','design'),(2080,'range-frequency-queries','Segment Tree','segment-tree'),(2081,'sum-of-k-mirror-numbers','Math','math'),(2081,'sum-of-k-mirror-numbers','Enumeration','enumeration'),(2082,'the-number-of-rich-customers','Database','database'),(2083,'substrings-that-begin-and-end-with-the-same-letter','Hash Table','hash-table'),(2083,'substrings-that-begin-and-end-with-the-same-letter','Math','math'),(2083,'substrings-that-begin-and-end-with-the-same-letter','String','string'),(2083,'substrings-that-begin-and-end-with-the-same-letter','Counting','counting'),(2083,'substrings-that-begin-and-end-with-the-same-letter','Prefix Sum','prefix-sum'),(2084,'drop-type-1-orders-for-customers-with-type-0-orders','Database','database'),(2085,'count-common-words-with-one-occurrence','Array','array'),(2085,'count-common-words-with-one-occurrence','Hash Table','hash-table'),(2085,'count-common-words-with-one-occurrence','String','string'),(2085,'count-common-words-with-one-occurrence','Counting','counting'),(2086,'minimum-number-of-food-buckets-to-feed-the-hamsters','String','string'),(2086,'minimum-number-of-food-buckets-to-feed-the-hamsters','Dynamic Programming','dynamic-programming'),(2086,'minimum-number-of-food-buckets-to-feed-the-hamsters','Greedy','greedy'),(2087,'minimum-cost-homecoming-of-a-robot-in-a-grid','Array','array'),(2087,'minimum-cost-homecoming-of-a-robot-in-a-grid','Greedy','greedy'),(2087,'minimum-cost-homecoming-of-a-robot-in-a-grid','Matrix','matrix'),(2088,'count-fertile-pyramids-in-a-land','Array','array'),(2088,'count-fertile-pyramids-in-a-land','Dynamic Programming','dynamic-programming'),(2088,'count-fertile-pyramids-in-a-land','Matrix','matrix'),(2089,'find-target-indices-after-sorting-array','Array','array'),(2089,'find-target-indices-after-sorting-array','Binary Search','binary-search'),(2089,'find-target-indices-after-sorting-array','Sorting','sorting'),(2090,'k-radius-subarray-averages','Array','array'),(2090,'k-radius-subarray-averages','Sliding Window','sliding-window'),(2091,'removing-minimum-and-maximum-from-array','Array','array'),(2091,'removing-minimum-and-maximum-from-array','Greedy','greedy'),(2092,'find-all-people-with-secret','Depth-First Search','depth-first-search'),(2092,'find-all-people-with-secret','Breadth-First Search','breadth-first-search'),(2092,'find-all-people-with-secret','Union Find','union-find'),(2092,'find-all-people-with-secret','Graph','graph'),(2092,'find-all-people-with-secret','Sorting','sorting'),(2093,'minimum-cost-to-reach-city-with-discounts','Graph','graph'),(2093,'minimum-cost-to-reach-city-with-discounts','Shortest Path','shortest-path'),(2094,'finding-3-digit-even-numbers','Array','array'),(2094,'finding-3-digit-even-numbers','Hash Table','hash-table'),(2094,'finding-3-digit-even-numbers','Sorting','sorting'),(2094,'finding-3-digit-even-numbers','Enumeration','enumeration'),(2095,'delete-the-middle-node-of-a-linked-list','Linked List','linked-list'),(2095,'delete-the-middle-node-of-a-linked-list','Two Pointers','two-pointers'),(2096,'step-by-step-directions-from-a-binary-tree-node-to-another','String','string'),(2096,'step-by-step-directions-from-a-binary-tree-node-to-another','Tree','tree'),(2096,'step-by-step-directions-from-a-binary-tree-node-to-another','Depth-First Search','depth-first-search'),(2096,'step-by-step-directions-from-a-binary-tree-node-to-another','Binary Tree','binary-tree'),(2097,'valid-arrangement-of-pairs','Depth-First Search','depth-first-search'),(2097,'valid-arrangement-of-pairs','Graph','graph'),(2097,'valid-arrangement-of-pairs','Eulerian Circuit','eulerian-circuit'),(2098,'subsequence-of-size-k-with-the-largest-even-sum','Array','array'),(2098,'subsequence-of-size-k-with-the-largest-even-sum','Greedy','greedy'),(2098,'subsequence-of-size-k-with-the-largest-even-sum','Sorting','sorting'),(2099,'find-subsequence-of-length-k-with-the-largest-sum','Array','array'),(2099,'find-subsequence-of-length-k-with-the-largest-sum','Hash Table','hash-table'),(2099,'find-subsequence-of-length-k-with-the-largest-sum','Sorting','sorting'),(2099,'find-subsequence-of-length-k-with-the-largest-sum','Heap (Priority Queue)','heap-priority-queue'),(2100,'find-good-days-to-rob-the-bank','Array','array'),(2100,'find-good-days-to-rob-the-bank','Dynamic Programming','dynamic-programming'),(2100,'find-good-days-to-rob-the-bank','Prefix Sum','prefix-sum'),(2101,'detonate-the-maximum-bombs','Array','array'),(2101,'detonate-the-maximum-bombs','Math','math'),(2101,'detonate-the-maximum-bombs','Depth-First Search','depth-first-search'),(2101,'detonate-the-maximum-bombs','Breadth-First Search','breadth-first-search'),(2101,'detonate-the-maximum-bombs','Graph','graph'),(2101,'detonate-the-maximum-bombs','Geometry','geometry'),(2102,'sequentially-ordinal-rank-tracker','Design','design'),(2102,'sequentially-ordinal-rank-tracker','Heap (Priority Queue)','heap-priority-queue'),(2102,'sequentially-ordinal-rank-tracker','Data Stream','data-stream'),(2102,'sequentially-ordinal-rank-tracker','Ordered Set','ordered-set'),(2103,'rings-and-rods','Hash Table','hash-table'),(2103,'rings-and-rods','String','string'),(2104,'sum-of-subarray-ranges','Array','array'),(2104,'sum-of-subarray-ranges','Stack','stack'),(2104,'sum-of-subarray-ranges','Monotonic Stack','monotonic-stack'),(2105,'watering-plants-ii','Array','array'),(2105,'watering-plants-ii','Two Pointers','two-pointers'),(2105,'watering-plants-ii','Simulation','simulation'),(2106,'maximum-fruits-harvested-after-at-most-k-steps','Array','array'),(2106,'maximum-fruits-harvested-after-at-most-k-steps','Binary Search','binary-search'),(2106,'maximum-fruits-harvested-after-at-most-k-steps','Sliding Window','sliding-window'),(2106,'maximum-fruits-harvested-after-at-most-k-steps','Prefix Sum','prefix-sum'),(2107,'number-of-unique-flavors-after-sharing-k-candies','Array','array'),(2107,'number-of-unique-flavors-after-sharing-k-candies','Hash Table','hash-table'),(2107,'number-of-unique-flavors-after-sharing-k-candies','Sliding Window','sliding-window'),(2108,'find-first-palindromic-string-in-the-array','Array','array'),(2108,'find-first-palindromic-string-in-the-array','Two Pointers','two-pointers'),(2108,'find-first-palindromic-string-in-the-array','String','string'),(2109,'adding-spaces-to-a-string','Array','array'),(2109,'adding-spaces-to-a-string','String','string'),(2109,'adding-spaces-to-a-string','Simulation','simulation'),(2110,'number-of-smooth-descent-periods-of-a-stock','Array','array'),(2110,'number-of-smooth-descent-periods-of-a-stock','Math','math'),(2110,'number-of-smooth-descent-periods-of-a-stock','Dynamic Programming','dynamic-programming'),(2111,'minimum-operations-to-make-the-array-k-increasing','Array','array'),(2111,'minimum-operations-to-make-the-array-k-increasing','Binary Search','binary-search'),(2112,'the-airport-with-the-most-traffic','Database','database'),(2113,'elements-in-array-after-removing-and-replacing-elements','Array','array'),(2114,'maximum-number-of-words-found-in-sentences','Array','array'),(2114,'maximum-number-of-words-found-in-sentences','String','string'),(2115,'find-all-possible-recipes-from-given-supplies','Array','array'),(2115,'find-all-possible-recipes-from-given-supplies','Hash Table','hash-table'),(2115,'find-all-possible-recipes-from-given-supplies','String','string'),(2115,'find-all-possible-recipes-from-given-supplies','Graph','graph'),(2115,'find-all-possible-recipes-from-given-supplies','Topological Sort','topological-sort'),(2116,'check-if-a-parentheses-string-can-be-valid','String','string'),(2116,'check-if-a-parentheses-string-can-be-valid','Stack','stack'),(2116,'check-if-a-parentheses-string-can-be-valid','Greedy','greedy'),(2117,'abbreviating-the-product-of-a-range','Math','math'),(2118,'build-the-equation','Database','database'),(2119,'a-number-after-a-double-reversal','Math','math'),(2120,'execution-of-all-suffix-instructions-staying-in-a-grid','String','string'),(2120,'execution-of-all-suffix-instructions-staying-in-a-grid','Simulation','simulation'),(2121,'intervals-between-identical-elements','Array','array'),(2121,'intervals-between-identical-elements','Hash Table','hash-table'),(2121,'intervals-between-identical-elements','Prefix Sum','prefix-sum'),(2122,'recover-the-original-array','Array','array'),(2122,'recover-the-original-array','Hash Table','hash-table'),(2122,'recover-the-original-array','Sorting','sorting'),(2122,'recover-the-original-array','Enumeration','enumeration'),(2123,'minimum-operations-to-remove-adjacent-ones-in-matrix','Array','array'),(2123,'minimum-operations-to-remove-adjacent-ones-in-matrix','Graph','graph'),(2123,'minimum-operations-to-remove-adjacent-ones-in-matrix','Matrix','matrix'),(2124,'check-if-all-as-appears-before-all-bs','String','string'),(2125,'number-of-laser-beams-in-a-bank','Array','array'),(2125,'number-of-laser-beams-in-a-bank','Math','math'),(2125,'number-of-laser-beams-in-a-bank','String','string'),(2125,'number-of-laser-beams-in-a-bank','Matrix','matrix'),(2126,'destroying-asteroids','Array','array'),(2126,'destroying-asteroids','Greedy','greedy'),(2126,'destroying-asteroids','Sorting','sorting'),(2127,'maximum-employees-to-be-invited-to-a-meeting','Depth-First Search','depth-first-search'),(2127,'maximum-employees-to-be-invited-to-a-meeting','Graph','graph'),(2127,'maximum-employees-to-be-invited-to-a-meeting','Topological Sort','topological-sort'),(2128,'remove-all-ones-with-row-and-column-flips','Array','array'),(2128,'remove-all-ones-with-row-and-column-flips','Math','math'),(2128,'remove-all-ones-with-row-and-column-flips','Bit Manipulation','bit-manipulation'),(2128,'remove-all-ones-with-row-and-column-flips','Matrix','matrix'),(2129,'capitalize-the-title','String','string'),(2130,'maximum-twin-sum-of-a-linked-list','Linked List','linked-list'),(2130,'maximum-twin-sum-of-a-linked-list','Two Pointers','two-pointers'),(2130,'maximum-twin-sum-of-a-linked-list','Stack','stack'),(2131,'longest-palindrome-by-concatenating-two-letter-words','Array','array'),(2131,'longest-palindrome-by-concatenating-two-letter-words','Hash Table','hash-table'),(2131,'longest-palindrome-by-concatenating-two-letter-words','String','string'),(2131,'longest-palindrome-by-concatenating-two-letter-words','Greedy','greedy'),(2131,'longest-palindrome-by-concatenating-two-letter-words','Counting','counting'),(2132,'stamping-the-grid','Array','array'),(2132,'stamping-the-grid','Greedy','greedy'),(2132,'stamping-the-grid','Matrix','matrix'),(2132,'stamping-the-grid','Prefix Sum','prefix-sum'),(2133,'check-if-every-row-and-column-contains-all-numbers','Array','array'),(2133,'check-if-every-row-and-column-contains-all-numbers','Hash Table','hash-table'),(2133,'check-if-every-row-and-column-contains-all-numbers','Matrix','matrix'),(2134,'minimum-swaps-to-group-all-1s-together-ii','Array','array'),(2134,'minimum-swaps-to-group-all-1s-together-ii','Sliding Window','sliding-window'),(2135,'count-words-obtained-after-adding-a-letter','Array','array'),(2135,'count-words-obtained-after-adding-a-letter','Hash Table','hash-table'),(2135,'count-words-obtained-after-adding-a-letter','String','string'),(2135,'count-words-obtained-after-adding-a-letter','Bit Manipulation','bit-manipulation'),(2135,'count-words-obtained-after-adding-a-letter','Sorting','sorting'),(2136,'earliest-possible-day-of-full-bloom','Array','array'),(2136,'earliest-possible-day-of-full-bloom','Greedy','greedy'),(2136,'earliest-possible-day-of-full-bloom','Sorting','sorting'),(2137,'pour-water-between-buckets-to-make-water-levels-equal','Array','array'),(2137,'pour-water-between-buckets-to-make-water-levels-equal','Binary Search','binary-search'),(2138,'divide-a-string-into-groups-of-size-k','String','string'),(2138,'divide-a-string-into-groups-of-size-k','Simulation','simulation'),(2139,'minimum-moves-to-reach-target-score','Math','math'),(2139,'minimum-moves-to-reach-target-score','Greedy','greedy'),(2140,'solving-questions-with-brainpower','Array','array'),(2140,'solving-questions-with-brainpower','Dynamic Programming','dynamic-programming'),(2141,'maximum-running-time-of-n-computers','Array','array'),(2141,'maximum-running-time-of-n-computers','Binary Search','binary-search'),(2141,'maximum-running-time-of-n-computers','Greedy','greedy'),(2141,'maximum-running-time-of-n-computers','Sorting','sorting'),(2142,'the-number-of-passengers-in-each-bus-i','Database','database'),(2143,'choose-numbers-from-two-arrays-in-range','Array','array'),(2143,'choose-numbers-from-two-arrays-in-range','Dynamic Programming','dynamic-programming'),(2144,'minimum-cost-of-buying-candies-with-discount','Array','array'),(2144,'minimum-cost-of-buying-candies-with-discount','Greedy','greedy'),(2144,'minimum-cost-of-buying-candies-with-discount','Sorting','sorting'),(2145,'count-the-hidden-sequences','Array','array'),(2145,'count-the-hidden-sequences','Prefix Sum','prefix-sum'),(2146,'k-highest-ranked-items-within-a-price-range','Array','array'),(2146,'k-highest-ranked-items-within-a-price-range','Breadth-First Search','breadth-first-search'),(2146,'k-highest-ranked-items-within-a-price-range','Sorting','sorting'),(2146,'k-highest-ranked-items-within-a-price-range','Heap (Priority Queue)','heap-priority-queue'),(2146,'k-highest-ranked-items-within-a-price-range','Matrix','matrix'),(2147,'number-of-ways-to-divide-a-long-corridor','Math','math'),(2147,'number-of-ways-to-divide-a-long-corridor','String','string'),(2147,'number-of-ways-to-divide-a-long-corridor','Dynamic Programming','dynamic-programming'),(2148,'count-elements-with-strictly-smaller-and-greater-elements','Array','array'),(2148,'count-elements-with-strictly-smaller-and-greater-elements','Sorting','sorting'),(2149,'rearrange-array-elements-by-sign','Array','array'),(2149,'rearrange-array-elements-by-sign','Two Pointers','two-pointers'),(2149,'rearrange-array-elements-by-sign','Simulation','simulation'),(2150,'find-all-lonely-numbers-in-the-array','Array','array'),(2150,'find-all-lonely-numbers-in-the-array','Hash Table','hash-table'),(2150,'find-all-lonely-numbers-in-the-array','Counting','counting'),(2151,'maximum-good-people-based-on-statements','Array','array'),(2151,'maximum-good-people-based-on-statements','Backtracking','backtracking'),(2151,'maximum-good-people-based-on-statements','Bit Manipulation','bit-manipulation'),(2151,'maximum-good-people-based-on-statements','Enumeration','enumeration'),(2152,'minimum-number-of-lines-to-cover-points','Array','array'),(2152,'minimum-number-of-lines-to-cover-points','Hash Table','hash-table'),(2152,'minimum-number-of-lines-to-cover-points','Math','math'),(2152,'minimum-number-of-lines-to-cover-points','Dynamic Programming','dynamic-programming'),(2152,'minimum-number-of-lines-to-cover-points','Backtracking','backtracking'),(2152,'minimum-number-of-lines-to-cover-points','Bit Manipulation','bit-manipulation'),(2152,'minimum-number-of-lines-to-cover-points','Geometry','geometry'),(2152,'minimum-number-of-lines-to-cover-points','Bitmask','bitmask'),(2153,'the-number-of-passengers-in-each-bus-ii','Database','database'),(2154,'keep-multiplying-found-values-by-two','Array','array'),(2154,'keep-multiplying-found-values-by-two','Hash Table','hash-table'),(2154,'keep-multiplying-found-values-by-two','Sorting','sorting'),(2154,'keep-multiplying-found-values-by-two','Simulation','simulation'),(2155,'all-divisions-with-the-highest-score-of-a-binary-array','Array','array'),(2156,'find-substring-with-given-hash-value','String','string'),(2156,'find-substring-with-given-hash-value','Sliding Window','sliding-window'),(2156,'find-substring-with-given-hash-value','Rolling Hash','rolling-hash'),(2156,'find-substring-with-given-hash-value','Hash Function','hash-function'),(2157,'groups-of-strings','String','string'),(2157,'groups-of-strings','Bit Manipulation','bit-manipulation'),(2157,'groups-of-strings','Union Find','union-find'),(2158,'amount-of-new-area-painted-each-day','Array','array'),(2158,'amount-of-new-area-painted-each-day','Segment Tree','segment-tree'),(2158,'amount-of-new-area-painted-each-day','Ordered Set','ordered-set'),(2159,'order-two-columns-independently','Database','database'),(2160,'minimum-sum-of-four-digit-number-after-splitting-digits','Math','math'),(2160,'minimum-sum-of-four-digit-number-after-splitting-digits','Greedy','greedy'),(2160,'minimum-sum-of-four-digit-number-after-splitting-digits','Sorting','sorting'),(2161,'partition-array-according-to-given-pivot','Array','array'),(2161,'partition-array-according-to-given-pivot','Two Pointers','two-pointers'),(2161,'partition-array-according-to-given-pivot','Simulation','simulation'),(2162,'minimum-cost-to-set-cooking-time','Math','math'),(2162,'minimum-cost-to-set-cooking-time','Enumeration','enumeration'),(2163,'minimum-difference-in-sums-after-removal-of-elements','Array','array'),(2163,'minimum-difference-in-sums-after-removal-of-elements','Dynamic Programming','dynamic-programming'),(2163,'minimum-difference-in-sums-after-removal-of-elements','Heap (Priority Queue)','heap-priority-queue'),(2164,'sort-even-and-odd-indices-independently','Array','array'),(2164,'sort-even-and-odd-indices-independently','Sorting','sorting'),(2165,'smallest-value-of-the-rearranged-number','Math','math'),(2165,'smallest-value-of-the-rearranged-number','Sorting','sorting'),(2166,'design-bitset','Array','array'),(2166,'design-bitset','Hash Table','hash-table'),(2166,'design-bitset','Design','design'),(2167,'minimum-time-to-remove-all-cars-containing-illegal-goods','String','string'),(2167,'minimum-time-to-remove-all-cars-containing-illegal-goods','Dynamic Programming','dynamic-programming'),(2168,'unique-substrings-with-equal-digit-frequency','Hash Table','hash-table'),(2168,'unique-substrings-with-equal-digit-frequency','String','string'),(2168,'unique-substrings-with-equal-digit-frequency','Rolling Hash','rolling-hash'),(2168,'unique-substrings-with-equal-digit-frequency','Counting','counting'),(2168,'unique-substrings-with-equal-digit-frequency','Hash Function','hash-function'),(2169,'count-operations-to-obtain-zero','Math','math'),(2169,'count-operations-to-obtain-zero','Simulation','simulation'),(2170,'minimum-operations-to-make-the-array-alternating','Array','array'),(2170,'minimum-operations-to-make-the-array-alternating','Hash Table','hash-table'),(2170,'minimum-operations-to-make-the-array-alternating','Greedy','greedy'),(2170,'minimum-operations-to-make-the-array-alternating','Counting','counting'),(2171,'removing-minimum-number-of-magic-beans','Array','array'),(2171,'removing-minimum-number-of-magic-beans','Sorting','sorting'),(2171,'removing-minimum-number-of-magic-beans','Prefix Sum','prefix-sum'),(2172,'maximum-and-sum-of-array','Array','array'),(2172,'maximum-and-sum-of-array','Dynamic Programming','dynamic-programming'),(2172,'maximum-and-sum-of-array','Bit Manipulation','bit-manipulation'),(2172,'maximum-and-sum-of-array','Bitmask','bitmask'),(2173,'longest-winning-streak','Database','database'),(2174,'remove-all-ones-with-row-and-column-flips-ii','Array','array'),(2174,'remove-all-ones-with-row-and-column-flips-ii','Bit Manipulation','bit-manipulation'),(2174,'remove-all-ones-with-row-and-column-flips-ii','Breadth-First Search','breadth-first-search'),(2174,'remove-all-ones-with-row-and-column-flips-ii','Matrix','matrix'),(2175,'the-change-in-global-rankings','Database','database'),(2176,'count-equal-and-divisible-pairs-in-an-array','Array','array'),(2177,'find-three-consecutive-integers-that-sum-to-a-given-number','Math','math'),(2177,'find-three-consecutive-integers-that-sum-to-a-given-number','Simulation','simulation'),(2178,'maximum-split-of-positive-even-integers','Math','math'),(2178,'maximum-split-of-positive-even-integers','Backtracking','backtracking'),(2178,'maximum-split-of-positive-even-integers','Greedy','greedy'),(2179,'count-good-triplets-in-an-array','Array','array'),(2179,'count-good-triplets-in-an-array','Binary Search','binary-search'),(2179,'count-good-triplets-in-an-array','Divide and Conquer','divide-and-conquer'),(2179,'count-good-triplets-in-an-array','Binary Indexed Tree','binary-indexed-tree'),(2179,'count-good-triplets-in-an-array','Segment Tree','segment-tree'),(2179,'count-good-triplets-in-an-array','Merge Sort','merge-sort'),(2179,'count-good-triplets-in-an-array','Ordered Set','ordered-set'),(2180,'count-integers-with-even-digit-sum','Math','math'),(2180,'count-integers-with-even-digit-sum','Simulation','simulation'),(2181,'merge-nodes-in-between-zeros','Linked List','linked-list'),(2181,'merge-nodes-in-between-zeros','Simulation','simulation'),(2182,'construct-string-with-repeat-limit','String','string'),(2182,'construct-string-with-repeat-limit','Greedy','greedy'),(2182,'construct-string-with-repeat-limit','Heap (Priority Queue)','heap-priority-queue'),(2182,'construct-string-with-repeat-limit','Counting','counting'),(2183,'count-array-pairs-divisible-by-k','Array','array'),(2183,'count-array-pairs-divisible-by-k','Math','math'),(2183,'count-array-pairs-divisible-by-k','Number Theory','number-theory'),(2184,'number-of-ways-to-build-sturdy-brick-wall','Array','array'),(2184,'number-of-ways-to-build-sturdy-brick-wall','Dynamic Programming','dynamic-programming'),(2184,'number-of-ways-to-build-sturdy-brick-wall','Bit Manipulation','bit-manipulation'),(2184,'number-of-ways-to-build-sturdy-brick-wall','Bitmask','bitmask'),(2185,'counting-words-with-a-given-prefix','Array','array'),(2185,'counting-words-with-a-given-prefix','String','string'),(2186,'minimum-number-of-steps-to-make-two-strings-anagram-ii','Hash Table','hash-table'),(2186,'minimum-number-of-steps-to-make-two-strings-anagram-ii','String','string'),(2186,'minimum-number-of-steps-to-make-two-strings-anagram-ii','Counting','counting'),(2187,'minimum-time-to-complete-trips','Array','array'),(2187,'minimum-time-to-complete-trips','Binary Search','binary-search'),(2188,'minimum-time-to-finish-the-race','Array','array'),(2188,'minimum-time-to-finish-the-race','Dynamic Programming','dynamic-programming'),(2189,'number-of-ways-to-build-house-of-cards','Math','math'),(2189,'number-of-ways-to-build-house-of-cards','Dynamic Programming','dynamic-programming'),(2190,'most-frequent-number-following-key-in-an-array','Array','array'),(2190,'most-frequent-number-following-key-in-an-array','Hash Table','hash-table'),(2190,'most-frequent-number-following-key-in-an-array','Counting','counting'),(2191,'sort-the-jumbled-numbers','Array','array'),(2191,'sort-the-jumbled-numbers','Sorting','sorting'),(2192,'all-ancestors-of-a-node-in-a-directed-acyclic-graph','Depth-First Search','depth-first-search'),(2192,'all-ancestors-of-a-node-in-a-directed-acyclic-graph','Breadth-First Search','breadth-first-search'),(2192,'all-ancestors-of-a-node-in-a-directed-acyclic-graph','Graph','graph'),(2192,'all-ancestors-of-a-node-in-a-directed-acyclic-graph','Topological Sort','topological-sort'),(2193,'minimum-number-of-moves-to-make-palindrome','Two Pointers','two-pointers'),(2193,'minimum-number-of-moves-to-make-palindrome','String','string'),(2193,'minimum-number-of-moves-to-make-palindrome','Greedy','greedy'),(2193,'minimum-number-of-moves-to-make-palindrome','Binary Indexed Tree','binary-indexed-tree'),(2194,'cells-in-a-range-on-an-excel-sheet','String','string'),(2195,'append-k-integers-with-minimal-sum','Array','array'),(2195,'append-k-integers-with-minimal-sum','Math','math'),(2195,'append-k-integers-with-minimal-sum','Greedy','greedy'),(2195,'append-k-integers-with-minimal-sum','Sorting','sorting'),(2196,'create-binary-tree-from-descriptions','Array','array'),(2196,'create-binary-tree-from-descriptions','Hash Table','hash-table'),(2196,'create-binary-tree-from-descriptions','Tree','tree'),(2196,'create-binary-tree-from-descriptions','Depth-First Search','depth-first-search'),(2196,'create-binary-tree-from-descriptions','Breadth-First Search','breadth-first-search'),(2196,'create-binary-tree-from-descriptions','Binary Tree','binary-tree'),(2197,'replace-non-coprime-numbers-in-array','Array','array'),(2197,'replace-non-coprime-numbers-in-array','Math','math'),(2197,'replace-non-coprime-numbers-in-array','Stack','stack'),(2197,'replace-non-coprime-numbers-in-array','Number Theory','number-theory'),(2198,'number-of-single-divisor-triplets','Math','math'),(2199,'finding-the-topic-of-each-post','Database','database'),(2200,'find-all-k-distant-indices-in-an-array','Array','array'),(2201,'count-artifacts-that-can-be-extracted','Array','array'),(2201,'count-artifacts-that-can-be-extracted','Hash Table','hash-table'),(2201,'count-artifacts-that-can-be-extracted','Simulation','simulation'),(2202,'maximize-the-topmost-element-after-k-moves','Array','array'),(2202,'maximize-the-topmost-element-after-k-moves','Greedy','greedy'),(2203,'minimum-weighted-subgraph-with-the-required-paths','Graph','graph'),(2203,'minimum-weighted-subgraph-with-the-required-paths','Shortest Path','shortest-path'),(2204,'distance-to-a-cycle-in-undirected-graph','Depth-First Search','depth-first-search'),(2204,'distance-to-a-cycle-in-undirected-graph','Breadth-First Search','breadth-first-search'),(2204,'distance-to-a-cycle-in-undirected-graph','Union Find','union-find'),(2204,'distance-to-a-cycle-in-undirected-graph','Graph','graph'),(2205,'the-number-of-users-that-are-eligible-for-discount','Database','database'),(2206,'divide-array-into-equal-pairs','Array','array'),(2206,'divide-array-into-equal-pairs','Hash Table','hash-table'),(2206,'divide-array-into-equal-pairs','Bit Manipulation','bit-manipulation'),(2206,'divide-array-into-equal-pairs','Counting','counting'),(2207,'maximize-number-of-subsequences-in-a-string','String','string'),(2207,'maximize-number-of-subsequences-in-a-string','Greedy','greedy'),(2207,'maximize-number-of-subsequences-in-a-string','Prefix Sum','prefix-sum'),(2208,'minimum-operations-to-halve-array-sum','Array','array'),(2208,'minimum-operations-to-halve-array-sum','Greedy','greedy'),(2208,'minimum-operations-to-halve-array-sum','Heap (Priority Queue)','heap-priority-queue'),(2209,'minimum-white-tiles-after-covering-with-carpets','String','string'),(2209,'minimum-white-tiles-after-covering-with-carpets','Dynamic Programming','dynamic-programming'),(2209,'minimum-white-tiles-after-covering-with-carpets','Prefix Sum','prefix-sum'),(2210,'count-hills-and-valleys-in-an-array','Array','array'),(2211,'count-collisions-on-a-road','String','string'),(2211,'count-collisions-on-a-road','Stack','stack'),(2212,'maximum-points-in-an-archery-competition','Array','array'),(2212,'maximum-points-in-an-archery-competition','Bit Manipulation','bit-manipulation'),(2212,'maximum-points-in-an-archery-competition','Recursion','recursion'),(2212,'maximum-points-in-an-archery-competition','Enumeration','enumeration'),(2213,'longest-substring-of-one-repeating-character','Array','array'),(2213,'longest-substring-of-one-repeating-character','String','string'),(2213,'longest-substring-of-one-repeating-character','Segment Tree','segment-tree'),(2213,'longest-substring-of-one-repeating-character','Ordered Set','ordered-set'),(2214,'minimum-health-to-beat-game','Array','array'),(2214,'minimum-health-to-beat-game','Greedy','greedy'),(2214,'minimum-health-to-beat-game','Prefix Sum','prefix-sum'),(2215,'find-the-difference-of-two-arrays','Array','array'),(2215,'find-the-difference-of-two-arrays','Hash Table','hash-table'),(2216,'minimum-deletions-to-make-array-beautiful','Array','array'),(2216,'minimum-deletions-to-make-array-beautiful','Stack','stack'),(2216,'minimum-deletions-to-make-array-beautiful','Greedy','greedy'),(2217,'find-palindrome-with-fixed-length','Array','array'),(2217,'find-palindrome-with-fixed-length','Math','math'),(2218,'maximum-value-of-k-coins-from-piles','Array','array'),(2218,'maximum-value-of-k-coins-from-piles','Dynamic Programming','dynamic-programming'),(2218,'maximum-value-of-k-coins-from-piles','Prefix Sum','prefix-sum'),(2219,'maximum-sum-score-of-array','Array','array'),(2219,'maximum-sum-score-of-array','Prefix Sum','prefix-sum'),(2220,'minimum-bit-flips-to-convert-number','Bit Manipulation','bit-manipulation'),(2221,'find-triangular-sum-of-an-array','Array','array'),(2221,'find-triangular-sum-of-an-array','Math','math'),(2221,'find-triangular-sum-of-an-array','Simulation','simulation'),(2221,'find-triangular-sum-of-an-array','Combinatorics','combinatorics'),(2222,'number-of-ways-to-select-buildings','String','string'),(2222,'number-of-ways-to-select-buildings','Dynamic Programming','dynamic-programming'),(2222,'number-of-ways-to-select-buildings','Prefix Sum','prefix-sum'),(2223,'sum-of-scores-of-built-strings','String','string'),(2223,'sum-of-scores-of-built-strings','Binary Search','binary-search'),(2223,'sum-of-scores-of-built-strings','Rolling Hash','rolling-hash'),(2223,'sum-of-scores-of-built-strings','Suffix Array','suffix-array'),(2223,'sum-of-scores-of-built-strings','String Matching','string-matching'),(2223,'sum-of-scores-of-built-strings','Hash Function','hash-function'),(2224,'minimum-number-of-operations-to-convert-time','String','string'),(2224,'minimum-number-of-operations-to-convert-time','Greedy','greedy'),(2225,'find-players-with-zero-or-one-losses','Array','array'),(2225,'find-players-with-zero-or-one-losses','Hash Table','hash-table'),(2225,'find-players-with-zero-or-one-losses','Sorting','sorting'),(2225,'find-players-with-zero-or-one-losses','Counting','counting'),(2226,'maximum-candies-allocated-to-k-children','Array','array'),(2226,'maximum-candies-allocated-to-k-children','Binary Search','binary-search'),(2227,'encrypt-and-decrypt-strings','Array','array'),(2227,'encrypt-and-decrypt-strings','Hash Table','hash-table'),(2227,'encrypt-and-decrypt-strings','String','string'),(2227,'encrypt-and-decrypt-strings','Design','design'),(2227,'encrypt-and-decrypt-strings','Trie','trie'),(2228,'users-with-two-purchases-within-seven-days','Database','database'),(2229,'check-if-an-array-is-consecutive','Array','array'),(2230,'the-users-that-are-eligible-for-discount','Database','database'),(2231,'largest-number-after-digit-swaps-by-parity','Sorting','sorting'),(2231,'largest-number-after-digit-swaps-by-parity','Heap (Priority Queue)','heap-priority-queue'),(2232,'minimize-result-by-adding-parentheses-to-expression','String','string'),(2232,'minimize-result-by-adding-parentheses-to-expression','Enumeration','enumeration'),(2233,'maximum-product-after-k-increments','Array','array'),(2233,'maximum-product-after-k-increments','Greedy','greedy'),(2233,'maximum-product-after-k-increments','Heap (Priority Queue)','heap-priority-queue'),(2234,'maximum-total-beauty-of-the-gardens','Array','array'),(2234,'maximum-total-beauty-of-the-gardens','Two Pointers','two-pointers'),(2234,'maximum-total-beauty-of-the-gardens','Binary Search','binary-search'),(2234,'maximum-total-beauty-of-the-gardens','Greedy','greedy'),(2234,'maximum-total-beauty-of-the-gardens','Sorting','sorting'),(2235,'add-two-integers','Math','math'),(2236,'root-equals-sum-of-children','Tree','tree'),(2236,'root-equals-sum-of-children','Binary Tree','binary-tree'),(2237,'count-positions-on-street-with-required-brightness','Array','array'),(2237,'count-positions-on-street-with-required-brightness','Prefix Sum','prefix-sum'),(2238,'number-of-times-a-driver-was-a-passenger','Database','database'),(2239,'find-closest-number-to-zero','Array','array'),(2240,'number-of-ways-to-buy-pens-and-pencils','Math','math'),(2240,'number-of-ways-to-buy-pens-and-pencils','Enumeration','enumeration'),(2241,'design-an-atm-machine','Array','array'),(2241,'design-an-atm-machine','Greedy','greedy'),(2241,'design-an-atm-machine','Design','design'),(2242,'maximum-score-of-a-node-sequence','Array','array'),(2242,'maximum-score-of-a-node-sequence','Graph','graph'),(2242,'maximum-score-of-a-node-sequence','Sorting','sorting'),(2242,'maximum-score-of-a-node-sequence','Enumeration','enumeration'),(2243,'calculate-digit-sum-of-a-string','String','string'),(2243,'calculate-digit-sum-of-a-string','Simulation','simulation'),(2244,'minimum-rounds-to-complete-all-tasks','Array','array'),(2244,'minimum-rounds-to-complete-all-tasks','Hash Table','hash-table'),(2244,'minimum-rounds-to-complete-all-tasks','Greedy','greedy'),(2244,'minimum-rounds-to-complete-all-tasks','Counting','counting'),(2245,'maximum-trailing-zeros-in-a-cornered-path','Array','array'),(2245,'maximum-trailing-zeros-in-a-cornered-path','Matrix','matrix'),(2245,'maximum-trailing-zeros-in-a-cornered-path','Prefix Sum','prefix-sum'),(2246,'longest-path-with-different-adjacent-characters','Array','array'),(2246,'longest-path-with-different-adjacent-characters','String','string'),(2246,'longest-path-with-different-adjacent-characters','Tree','tree'),(2246,'longest-path-with-different-adjacent-characters','Depth-First Search','depth-first-search'),(2246,'longest-path-with-different-adjacent-characters','Graph','graph'),(2246,'longest-path-with-different-adjacent-characters','Topological Sort','topological-sort'),(2247,'maximum-cost-of-trip-with-k-highways','Dynamic Programming','dynamic-programming'),(2247,'maximum-cost-of-trip-with-k-highways','Bit Manipulation','bit-manipulation'),(2247,'maximum-cost-of-trip-with-k-highways','Graph','graph'),(2247,'maximum-cost-of-trip-with-k-highways','Bitmask','bitmask'),(2248,'intersection-of-multiple-arrays','Array','array'),(2248,'intersection-of-multiple-arrays','Hash Table','hash-table'),(2248,'intersection-of-multiple-arrays','Counting','counting'),(2249,'count-lattice-points-inside-a-circle','Array','array'),(2249,'count-lattice-points-inside-a-circle','Hash Table','hash-table'),(2249,'count-lattice-points-inside-a-circle','Math','math'),(2249,'count-lattice-points-inside-a-circle','Geometry','geometry'),(2249,'count-lattice-points-inside-a-circle','Enumeration','enumeration'),(2250,'count-number-of-rectangles-containing-each-point','Array','array'),(2250,'count-number-of-rectangles-containing-each-point','Binary Search','binary-search'),(2250,'count-number-of-rectangles-containing-each-point','Binary Indexed Tree','binary-indexed-tree'),(2250,'count-number-of-rectangles-containing-each-point','Sorting','sorting'),(2251,'number-of-flowers-in-full-bloom','Array','array'),(2251,'number-of-flowers-in-full-bloom','Hash Table','hash-table'),(2251,'number-of-flowers-in-full-bloom','Binary Search','binary-search'),(2251,'number-of-flowers-in-full-bloom','Sorting','sorting'),(2251,'number-of-flowers-in-full-bloom','Prefix Sum','prefix-sum'),(2251,'number-of-flowers-in-full-bloom','Ordered Set','ordered-set'),(2252,'dynamic-pivoting-of-a-table','Database','database'),(2253,'dynamic-unpivoting-of-a-table','Database','database'),(2254,'design-video-sharing-platform','Hash Table','hash-table'),(2254,'design-video-sharing-platform','Stack','stack'),(2254,'design-video-sharing-platform','Design','design'),(2254,'design-video-sharing-platform','Ordered Set','ordered-set'),(2255,'count-prefixes-of-a-given-string','Array','array'),(2255,'count-prefixes-of-a-given-string','String','string'),(2256,'minimum-average-difference','Array','array'),(2256,'minimum-average-difference','Prefix Sum','prefix-sum'),(2257,'count-unguarded-cells-in-the-grid','Array','array'),(2257,'count-unguarded-cells-in-the-grid','Matrix','matrix'),(2257,'count-unguarded-cells-in-the-grid','Simulation','simulation'),(2258,'escape-the-spreading-fire','Array','array'),(2258,'escape-the-spreading-fire','Binary Search','binary-search'),(2258,'escape-the-spreading-fire','Breadth-First Search','breadth-first-search'),(2258,'escape-the-spreading-fire','Matrix','matrix'),(2259,'remove-digit-from-number-to-maximize-result','String','string'),(2259,'remove-digit-from-number-to-maximize-result','Greedy','greedy'),(2259,'remove-digit-from-number-to-maximize-result','Enumeration','enumeration'),(2260,'minimum-consecutive-cards-to-pick-up','Array','array'),(2260,'minimum-consecutive-cards-to-pick-up','Hash Table','hash-table'),(2260,'minimum-consecutive-cards-to-pick-up','Sliding Window','sliding-window'),(2261,'k-divisible-elements-subarrays','Array','array'),(2261,'k-divisible-elements-subarrays','Hash Table','hash-table'),(2261,'k-divisible-elements-subarrays','Trie','trie'),(2261,'k-divisible-elements-subarrays','Rolling Hash','rolling-hash'),(2261,'k-divisible-elements-subarrays','Hash Function','hash-function'),(2261,'k-divisible-elements-subarrays','Enumeration','enumeration'),(2262,'total-appeal-of-a-string','Hash Table','hash-table'),(2262,'total-appeal-of-a-string','String','string'),(2262,'total-appeal-of-a-string','Dynamic Programming','dynamic-programming'),(2263,'make-array-non-decreasing-or-non-increasing','Dynamic Programming','dynamic-programming'),(2263,'make-array-non-decreasing-or-non-increasing','Greedy','greedy'),(2264,'largest-3-same-digit-number-in-string','String','string'),(2265,'count-nodes-equal-to-average-of-subtree','Tree','tree'),(2265,'count-nodes-equal-to-average-of-subtree','Depth-First Search','depth-first-search'),(2265,'count-nodes-equal-to-average-of-subtree','Binary Tree','binary-tree'),(2266,'count-number-of-texts','Hash Table','hash-table'),(2266,'count-number-of-texts','Math','math'),(2266,'count-number-of-texts','String','string'),(2266,'count-number-of-texts','Dynamic Programming','dynamic-programming'),(2267,'check-if-there-is-a-valid-parentheses-string-path','Array','array'),(2267,'check-if-there-is-a-valid-parentheses-string-path','Dynamic Programming','dynamic-programming'),(2267,'check-if-there-is-a-valid-parentheses-string-path','Matrix','matrix'),(2268,'minimum-number-of-keypresses','Array','array'),(2268,'minimum-number-of-keypresses','String','string'),(2268,'minimum-number-of-keypresses','Greedy','greedy'),(2268,'minimum-number-of-keypresses','Sorting','sorting'),(2268,'minimum-number-of-keypresses','Counting','counting'),(2269,'find-the-k-beauty-of-a-number','Math','math'),(2269,'find-the-k-beauty-of-a-number','String','string'),(2269,'find-the-k-beauty-of-a-number','Sliding Window','sliding-window'),(2270,'number-of-ways-to-split-array','Array','array'),(2270,'number-of-ways-to-split-array','Prefix Sum','prefix-sum'),(2271,'maximum-white-tiles-covered-by-a-carpet','Array','array'),(2271,'maximum-white-tiles-covered-by-a-carpet','Binary Search','binary-search'),(2271,'maximum-white-tiles-covered-by-a-carpet','Greedy','greedy'),(2271,'maximum-white-tiles-covered-by-a-carpet','Sorting','sorting'),(2271,'maximum-white-tiles-covered-by-a-carpet','Prefix Sum','prefix-sum'),(2272,'substring-with-largest-variance','Array','array'),(2272,'substring-with-largest-variance','Dynamic Programming','dynamic-programming'),(2273,'find-resultant-array-after-removing-anagrams','Array','array'),(2273,'find-resultant-array-after-removing-anagrams','Hash Table','hash-table'),(2273,'find-resultant-array-after-removing-anagrams','String','string'),(2273,'find-resultant-array-after-removing-anagrams','Sorting','sorting'),(2274,'maximum-consecutive-floors-without-special-floors','Array','array'),(2274,'maximum-consecutive-floors-without-special-floors','Sorting','sorting'),(2275,'largest-combination-with-bitwise-and-greater-than-zero','Array','array'),(2275,'largest-combination-with-bitwise-and-greater-than-zero','Hash Table','hash-table'),(2275,'largest-combination-with-bitwise-and-greater-than-zero','Bit Manipulation','bit-manipulation'),(2275,'largest-combination-with-bitwise-and-greater-than-zero','Counting','counting'),(2276,'count-integers-in-intervals','Design','design'),(2276,'count-integers-in-intervals','Segment Tree','segment-tree'),(2276,'count-integers-in-intervals','Ordered Set','ordered-set'),(2277,'closest-node-to-path-in-tree','Array','array'),(2277,'closest-node-to-path-in-tree','Tree','tree'),(2277,'closest-node-to-path-in-tree','Depth-First Search','depth-first-search'),(2277,'closest-node-to-path-in-tree','Breadth-First Search','breadth-first-search'),(2278,'percentage-of-letter-in-string','String','string'),(2279,'maximum-bags-with-full-capacity-of-rocks','Array','array'),(2279,'maximum-bags-with-full-capacity-of-rocks','Greedy','greedy'),(2279,'maximum-bags-with-full-capacity-of-rocks','Sorting','sorting'),(2280,'minimum-lines-to-represent-a-line-chart','Array','array'),(2280,'minimum-lines-to-represent-a-line-chart','Math','math'),(2280,'minimum-lines-to-represent-a-line-chart','Geometry','geometry'),(2280,'minimum-lines-to-represent-a-line-chart','Sorting','sorting'),(2280,'minimum-lines-to-represent-a-line-chart','Number Theory','number-theory'),(2281,'sum-of-total-strength-of-wizards','Array','array'),(2281,'sum-of-total-strength-of-wizards','Stack','stack'),(2281,'sum-of-total-strength-of-wizards','Monotonic Stack','monotonic-stack'),(2281,'sum-of-total-strength-of-wizards','Prefix Sum','prefix-sum'),(2282,'number-of-people-that-can-be-seen-in-a-grid','Array','array'),(2282,'number-of-people-that-can-be-seen-in-a-grid','Stack','stack'),(2282,'number-of-people-that-can-be-seen-in-a-grid','Matrix','matrix'),(2282,'number-of-people-that-can-be-seen-in-a-grid','Monotonic Stack','monotonic-stack'),(2283,'check-if-number-has-equal-digit-count-and-digit-value','Hash Table','hash-table'),(2283,'check-if-number-has-equal-digit-count-and-digit-value','String','string'),(2283,'check-if-number-has-equal-digit-count-and-digit-value','Counting','counting'),(2284,'sender-with-largest-word-count','Array','array'),(2284,'sender-with-largest-word-count','Hash Table','hash-table'),(2284,'sender-with-largest-word-count','String','string'),(2284,'sender-with-largest-word-count','Counting','counting'),(2285,'maximum-total-importance-of-roads','Greedy','greedy'),(2285,'maximum-total-importance-of-roads','Graph','graph'),(2285,'maximum-total-importance-of-roads','Sorting','sorting'),(2285,'maximum-total-importance-of-roads','Heap (Priority Queue)','heap-priority-queue'),(2286,'booking-concert-tickets-in-groups','Binary Search','binary-search'),(2286,'booking-concert-tickets-in-groups','Design','design'),(2286,'booking-concert-tickets-in-groups','Binary Indexed Tree','binary-indexed-tree'),(2286,'booking-concert-tickets-in-groups','Segment Tree','segment-tree'),(2287,'rearrange-characters-to-make-target-string','Hash Table','hash-table'),(2287,'rearrange-characters-to-make-target-string','String','string'),(2287,'rearrange-characters-to-make-target-string','Counting','counting'),(2288,'apply-discount-to-prices','String','string'),(2289,'steps-to-make-array-non-decreasing','Array','array'),(2289,'steps-to-make-array-non-decreasing','Linked List','linked-list'),(2289,'steps-to-make-array-non-decreasing','Stack','stack'),(2289,'steps-to-make-array-non-decreasing','Monotonic Stack','monotonic-stack'),(2290,'minimum-obstacle-removal-to-reach-corner','Array','array'),(2290,'minimum-obstacle-removal-to-reach-corner','Breadth-First Search','breadth-first-search'),(2290,'minimum-obstacle-removal-to-reach-corner','Graph','graph'),(2290,'minimum-obstacle-removal-to-reach-corner','Heap (Priority Queue)','heap-priority-queue'),(2290,'minimum-obstacle-removal-to-reach-corner','Matrix','matrix'),(2290,'minimum-obstacle-removal-to-reach-corner','Shortest Path','shortest-path'),(2291,'maximum-profit-from-trading-stocks','Array','array'),(2291,'maximum-profit-from-trading-stocks','Dynamic Programming','dynamic-programming'),(2292,'products-with-three-or-more-orders-in-two-consecutive-years','Database','database'),(2293,'min-max-game','Array','array'),(2293,'min-max-game','Simulation','simulation'),(2294,'partition-array-such-that-maximum-difference-is-k','Array','array'),(2294,'partition-array-such-that-maximum-difference-is-k','Greedy','greedy'),(2294,'partition-array-such-that-maximum-difference-is-k','Sorting','sorting'),(2295,'replace-elements-in-an-array','Array','array'),(2295,'replace-elements-in-an-array','Hash Table','hash-table'),(2295,'replace-elements-in-an-array','Simulation','simulation'),(2296,'design-a-text-editor','Linked List','linked-list'),(2296,'design-a-text-editor','String','string'),(2296,'design-a-text-editor','Stack','stack'),(2296,'design-a-text-editor','Design','design'),(2296,'design-a-text-editor','Simulation','simulation'),(2296,'design-a-text-editor','Doubly-Linked List','doubly-linked-list'),(2297,'jump-game-viii','Array','array'),(2297,'jump-game-viii','Dynamic Programming','dynamic-programming'),(2297,'jump-game-viii','Stack','stack'),(2297,'jump-game-viii','Graph','graph'),(2297,'jump-game-viii','Monotonic Stack','monotonic-stack'),(2297,'jump-game-viii','Shortest Path','shortest-path'),(2298,'tasks-count-in-the-weekend','Database','database'),(2299,'strong-password-checker-ii','String','string'),(2300,'successful-pairs-of-spells-and-potions','Array','array'),(2300,'successful-pairs-of-spells-and-potions','Two Pointers','two-pointers'),(2300,'successful-pairs-of-spells-and-potions','Binary Search','binary-search'),(2300,'successful-pairs-of-spells-and-potions','Sorting','sorting'),(2301,'match-substring-after-replacement','Array','array'),(2301,'match-substring-after-replacement','Hash Table','hash-table'),(2301,'match-substring-after-replacement','String','string'),(2301,'match-substring-after-replacement','String Matching','string-matching'),(2302,'count-subarrays-with-score-less-than-k','Array','array'),(2302,'count-subarrays-with-score-less-than-k','Binary Search','binary-search'),(2302,'count-subarrays-with-score-less-than-k','Sliding Window','sliding-window'),(2302,'count-subarrays-with-score-less-than-k','Prefix Sum','prefix-sum'),(2303,'calculate-amount-paid-in-taxes','Array','array'),(2303,'calculate-amount-paid-in-taxes','Simulation','simulation'),(2304,'minimum-path-cost-in-a-grid','Array','array'),(2304,'minimum-path-cost-in-a-grid','Dynamic Programming','dynamic-programming'),(2304,'minimum-path-cost-in-a-grid','Matrix','matrix'),(2305,'fair-distribution-of-cookies','Array','array'),(2305,'fair-distribution-of-cookies','Dynamic Programming','dynamic-programming'),(2305,'fair-distribution-of-cookies','Backtracking','backtracking'),(2305,'fair-distribution-of-cookies','Bit Manipulation','bit-manipulation'),(2305,'fair-distribution-of-cookies','Bitmask','bitmask'),(2306,'naming-a-company','Array','array'),(2306,'naming-a-company','Hash Table','hash-table'),(2306,'naming-a-company','String','string'),(2306,'naming-a-company','Bit Manipulation','bit-manipulation'),(2306,'naming-a-company','Enumeration','enumeration'),(2307,'check-for-contradictions-in-equations','Array','array'),(2307,'check-for-contradictions-in-equations','Depth-First Search','depth-first-search'),(2307,'check-for-contradictions-in-equations','Union Find','union-find'),(2307,'check-for-contradictions-in-equations','Graph','graph'),(2308,'arrange-table-by-gender','Database','database'),(2309,'greatest-english-letter-in-upper-and-lower-case','Hash Table','hash-table'),(2309,'greatest-english-letter-in-upper-and-lower-case','String','string'),(2309,'greatest-english-letter-in-upper-and-lower-case','Enumeration','enumeration'),(2310,'sum-of-numbers-with-units-digit-k','Math','math'),(2310,'sum-of-numbers-with-units-digit-k','Dynamic Programming','dynamic-programming'),(2310,'sum-of-numbers-with-units-digit-k','Greedy','greedy'),(2310,'sum-of-numbers-with-units-digit-k','Enumeration','enumeration'),(2311,'longest-binary-subsequence-less-than-or-equal-to-k','String','string'),(2311,'longest-binary-subsequence-less-than-or-equal-to-k','Dynamic Programming','dynamic-programming'),(2311,'longest-binary-subsequence-less-than-or-equal-to-k','Greedy','greedy'),(2311,'longest-binary-subsequence-less-than-or-equal-to-k','Memoization','memoization'),(2312,'selling-pieces-of-wood','Array','array'),(2312,'selling-pieces-of-wood','Dynamic Programming','dynamic-programming'),(2312,'selling-pieces-of-wood','Memoization','memoization'),(2313,'minimum-flips-in-binary-tree-to-get-result','Dynamic Programming','dynamic-programming'),(2313,'minimum-flips-in-binary-tree-to-get-result','Tree','tree'),(2313,'minimum-flips-in-binary-tree-to-get-result','Depth-First Search','depth-first-search'),(2313,'minimum-flips-in-binary-tree-to-get-result','Binary Tree','binary-tree'),(2314,'the-first-day-of-the-maximum-recorded-degree-in-each-city','Database','database'),(2315,'count-asterisks','String','string'),(2316,'count-unreachable-pairs-of-nodes-in-an-undirected-graph','Depth-First Search','depth-first-search'),(2316,'count-unreachable-pairs-of-nodes-in-an-undirected-graph','Breadth-First Search','breadth-first-search'),(2316,'count-unreachable-pairs-of-nodes-in-an-undirected-graph','Union Find','union-find'),(2316,'count-unreachable-pairs-of-nodes-in-an-undirected-graph','Graph','graph'),(2317,'maximum-xor-after-operations','Array','array'),(2317,'maximum-xor-after-operations','Math','math'),(2317,'maximum-xor-after-operations','Bit Manipulation','bit-manipulation'),(2318,'number-of-distinct-roll-sequences','Dynamic Programming','dynamic-programming'),(2318,'number-of-distinct-roll-sequences','Memoization','memoization'),(2319,'check-if-matrix-is-x-matrix','Array','array'),(2319,'check-if-matrix-is-x-matrix','Matrix','matrix'),(2320,'count-number-of-ways-to-place-houses','Dynamic Programming','dynamic-programming'),(2321,'maximum-score-of-spliced-array','Array','array'),(2321,'maximum-score-of-spliced-array','Dynamic Programming','dynamic-programming'),(2322,'minimum-score-after-removals-on-a-tree','Array','array'),(2322,'minimum-score-after-removals-on-a-tree','Bit Manipulation','bit-manipulation'),(2322,'minimum-score-after-removals-on-a-tree','Tree','tree'),(2322,'minimum-score-after-removals-on-a-tree','Depth-First Search','depth-first-search'),(2323,'find-minimum-time-to-finish-all-jobs-ii','Array','array'),(2323,'find-minimum-time-to-finish-all-jobs-ii','Greedy','greedy'),(2323,'find-minimum-time-to-finish-all-jobs-ii','Sorting','sorting'),(2324,'product-sales-analysis-iv','Database','database'),(2325,'decode-the-message','Hash Table','hash-table'),(2325,'decode-the-message','String','string'),(2326,'spiral-matrix-iv','Array','array'),(2326,'spiral-matrix-iv','Linked List','linked-list'),(2326,'spiral-matrix-iv','Matrix','matrix'),(2326,'spiral-matrix-iv','Simulation','simulation'),(2327,'number-of-people-aware-of-a-secret','Dynamic Programming','dynamic-programming'),(2327,'number-of-people-aware-of-a-secret','Queue','queue'),(2327,'number-of-people-aware-of-a-secret','Simulation','simulation'),(2328,'number-of-increasing-paths-in-a-grid','Array','array'),(2328,'number-of-increasing-paths-in-a-grid','Dynamic Programming','dynamic-programming'),(2328,'number-of-increasing-paths-in-a-grid','Depth-First Search','depth-first-search'),(2328,'number-of-increasing-paths-in-a-grid','Breadth-First Search','breadth-first-search'),(2328,'number-of-increasing-paths-in-a-grid','Graph','graph'),(2328,'number-of-increasing-paths-in-a-grid','Topological Sort','topological-sort'),(2328,'number-of-increasing-paths-in-a-grid','Memoization','memoization'),(2328,'number-of-increasing-paths-in-a-grid','Matrix','matrix'),(2329,'product-sales-analysis-v','Database','database'),(2330,'valid-palindrome-iv','Two Pointers','two-pointers'),(2330,'valid-palindrome-iv','String','string'),(2331,'evaluate-boolean-binary-tree','Tree','tree'),(2331,'evaluate-boolean-binary-tree','Depth-First Search','depth-first-search'),(2331,'evaluate-boolean-binary-tree','Binary Tree','binary-tree'),(2332,'the-latest-time-to-catch-a-bus','Array','array'),(2332,'the-latest-time-to-catch-a-bus','Two Pointers','two-pointers'),(2332,'the-latest-time-to-catch-a-bus','Binary Search','binary-search'),(2332,'the-latest-time-to-catch-a-bus','Sorting','sorting'),(2333,'minimum-sum-of-squared-difference','Array','array'),(2333,'minimum-sum-of-squared-difference','Math','math'),(2333,'minimum-sum-of-squared-difference','Sorting','sorting'),(2333,'minimum-sum-of-squared-difference','Heap (Priority Queue)','heap-priority-queue'),(2334,'subarray-with-elements-greater-than-varying-threshold','Array','array'),(2334,'subarray-with-elements-greater-than-varying-threshold','Stack','stack'),(2334,'subarray-with-elements-greater-than-varying-threshold','Union Find','union-find'),(2334,'subarray-with-elements-greater-than-varying-threshold','Monotonic Stack','monotonic-stack'),(2335,'minimum-amount-of-time-to-fill-cups','Array','array'),(2335,'minimum-amount-of-time-to-fill-cups','Greedy','greedy'),(2335,'minimum-amount-of-time-to-fill-cups','Sorting','sorting'),(2335,'minimum-amount-of-time-to-fill-cups','Heap (Priority Queue)','heap-priority-queue'),(2336,'smallest-number-in-infinite-set','Hash Table','hash-table'),(2336,'smallest-number-in-infinite-set','Design','design'),(2336,'smallest-number-in-infinite-set','Heap (Priority Queue)','heap-priority-queue'),(2337,'move-pieces-to-obtain-a-string','Two Pointers','two-pointers'),(2337,'move-pieces-to-obtain-a-string','String','string'),(2338,'count-the-number-of-ideal-arrays','Math','math'),(2338,'count-the-number-of-ideal-arrays','Dynamic Programming','dynamic-programming'),(2338,'count-the-number-of-ideal-arrays','Combinatorics','combinatorics'),(2338,'count-the-number-of-ideal-arrays','Number Theory','number-theory'),(2339,'all-the-matches-of-the-league','Database','database'),(2340,'minimum-adjacent-swaps-to-make-a-valid-array','Array','array'),(2340,'minimum-adjacent-swaps-to-make-a-valid-array','Greedy','greedy'),(2341,'maximum-number-of-pairs-in-array','Array','array'),(2341,'maximum-number-of-pairs-in-array','Hash Table','hash-table'),(2341,'maximum-number-of-pairs-in-array','Counting','counting'),(2342,'max-sum-of-a-pair-with-equal-sum-of-digits','Array','array'),(2342,'max-sum-of-a-pair-with-equal-sum-of-digits','Hash Table','hash-table'),(2342,'max-sum-of-a-pair-with-equal-sum-of-digits','Sorting','sorting'),(2342,'max-sum-of-a-pair-with-equal-sum-of-digits','Heap (Priority Queue)','heap-priority-queue'),(2343,'query-kth-smallest-trimmed-number','Array','array'),(2343,'query-kth-smallest-trimmed-number','String','string'),(2343,'query-kth-smallest-trimmed-number','Divide and Conquer','divide-and-conquer'),(2343,'query-kth-smallest-trimmed-number','Sorting','sorting'),(2343,'query-kth-smallest-trimmed-number','Heap (Priority Queue)','heap-priority-queue'),(2343,'query-kth-smallest-trimmed-number','Radix Sort','radix-sort'),(2343,'query-kth-smallest-trimmed-number','Quickselect','quickselect'),(2344,'minimum-deletions-to-make-array-divisible','Array','array'),(2344,'minimum-deletions-to-make-array-divisible','Math','math'),(2344,'minimum-deletions-to-make-array-divisible','Sorting','sorting'),(2344,'minimum-deletions-to-make-array-divisible','Heap (Priority Queue)','heap-priority-queue'),(2344,'minimum-deletions-to-make-array-divisible','Number Theory','number-theory'),(2345,'finding-the-number-of-visible-mountains','Array','array'),(2345,'finding-the-number-of-visible-mountains','Stack','stack'),(2345,'finding-the-number-of-visible-mountains','Sorting','sorting'),(2345,'finding-the-number-of-visible-mountains','Monotonic Stack','monotonic-stack'),(2346,'compute-the-rank-as-a-percentage','Database','database'),(2347,'best-poker-hand','Array','array'),(2347,'best-poker-hand','Hash Table','hash-table'),(2347,'best-poker-hand','Counting','counting'),(2348,'number-of-zero-filled-subarrays','Array','array'),(2348,'number-of-zero-filled-subarrays','Math','math'),(2349,'design-a-number-container-system','Hash Table','hash-table'),(2349,'design-a-number-container-system','Design','design'),(2349,'design-a-number-container-system','Heap (Priority Queue)','heap-priority-queue'),(2349,'design-a-number-container-system','Ordered Set','ordered-set'),(2350,'shortest-impossible-sequence-of-rolls','Array','array'),(2350,'shortest-impossible-sequence-of-rolls','Hash Table','hash-table'),(2350,'shortest-impossible-sequence-of-rolls','Greedy','greedy'),(2351,'first-letter-to-appear-twice','Hash Table','hash-table'),(2351,'first-letter-to-appear-twice','String','string'),(2351,'first-letter-to-appear-twice','Counting','counting'),(2352,'equal-row-and-column-pairs','Array','array'),(2352,'equal-row-and-column-pairs','Hash Table','hash-table'),(2352,'equal-row-and-column-pairs','Matrix','matrix'),(2352,'equal-row-and-column-pairs','Simulation','simulation'),(2353,'design-a-food-rating-system','Hash Table','hash-table'),(2353,'design-a-food-rating-system','Design','design'),(2353,'design-a-food-rating-system','Heap (Priority Queue)','heap-priority-queue'),(2353,'design-a-food-rating-system','Ordered Set','ordered-set'),(2354,'number-of-excellent-pairs','Array','array'),(2354,'number-of-excellent-pairs','Hash Table','hash-table'),(2354,'number-of-excellent-pairs','Binary Search','binary-search'),(2354,'number-of-excellent-pairs','Bit Manipulation','bit-manipulation'),(2355,'maximum-number-of-books-you-can-take','Array','array'),(2355,'maximum-number-of-books-you-can-take','Dynamic Programming','dynamic-programming'),(2355,'maximum-number-of-books-you-can-take','Stack','stack'),(2355,'maximum-number-of-books-you-can-take','Monotonic Stack','monotonic-stack'),(2356,'number-of-unique-subjects-taught-by-each-teacher','Database','database'),(2357,'make-array-zero-by-subtracting-equal-amounts','Array','array'),(2357,'make-array-zero-by-subtracting-equal-amounts','Hash Table','hash-table'),(2357,'make-array-zero-by-subtracting-equal-amounts','Greedy','greedy'),(2357,'make-array-zero-by-subtracting-equal-amounts','Sorting','sorting'),(2357,'make-array-zero-by-subtracting-equal-amounts','Heap (Priority Queue)','heap-priority-queue'),(2357,'make-array-zero-by-subtracting-equal-amounts','Simulation','simulation'),(2358,'maximum-number-of-groups-entering-a-competition','Array','array'),(2358,'maximum-number-of-groups-entering-a-competition','Math','math'),(2358,'maximum-number-of-groups-entering-a-competition','Binary Search','binary-search'),(2358,'maximum-number-of-groups-entering-a-competition','Greedy','greedy'),(2359,'find-closest-node-to-given-two-nodes','Depth-First Search','depth-first-search'),(2359,'find-closest-node-to-given-two-nodes','Graph','graph'),(2360,'longest-cycle-in-a-graph','Depth-First Search','depth-first-search'),(2360,'longest-cycle-in-a-graph','Graph','graph'),(2360,'longest-cycle-in-a-graph','Topological Sort','topological-sort'),(2361,'minimum-costs-using-the-train-line','Array','array'),(2361,'minimum-costs-using-the-train-line','Dynamic Programming','dynamic-programming'),(2362,'generate-the-invoice','Database','database'),(2363,'merge-similar-items','Array','array'),(2363,'merge-similar-items','Hash Table','hash-table'),(2363,'merge-similar-items','Sorting','sorting'),(2363,'merge-similar-items','Ordered Set','ordered-set'),(2364,'count-number-of-bad-pairs','Array','array'),(2364,'count-number-of-bad-pairs','Hash Table','hash-table'),(2365,'task-scheduler-ii','Array','array'),(2365,'task-scheduler-ii','Hash Table','hash-table'),(2365,'task-scheduler-ii','Simulation','simulation'),(2366,'minimum-replacements-to-sort-the-array','Array','array'),(2366,'minimum-replacements-to-sort-the-array','Math','math'),(2366,'minimum-replacements-to-sort-the-array','Greedy','greedy'),(2367,'number-of-arithmetic-triplets','Array','array'),(2367,'number-of-arithmetic-triplets','Hash Table','hash-table'),(2367,'number-of-arithmetic-triplets','Two Pointers','two-pointers'),(2367,'number-of-arithmetic-triplets','Enumeration','enumeration'),(2368,'reachable-nodes-with-restrictions','Array','array'),(2368,'reachable-nodes-with-restrictions','Hash Table','hash-table'),(2368,'reachable-nodes-with-restrictions','Tree','tree'),(2368,'reachable-nodes-with-restrictions','Depth-First Search','depth-first-search'),(2368,'reachable-nodes-with-restrictions','Breadth-First Search','breadth-first-search'),(2368,'reachable-nodes-with-restrictions','Graph','graph'),(2369,'check-if-there-is-a-valid-partition-for-the-array','Array','array'),(2369,'check-if-there-is-a-valid-partition-for-the-array','Dynamic Programming','dynamic-programming'),(2370,'longest-ideal-subsequence','Hash Table','hash-table'),(2370,'longest-ideal-subsequence','String','string'),(2370,'longest-ideal-subsequence','Dynamic Programming','dynamic-programming'),(2371,'minimize-maximum-value-in-a-grid','Array','array'),(2371,'minimize-maximum-value-in-a-grid','Greedy','greedy'),(2371,'minimize-maximum-value-in-a-grid','Union Find','union-find'),(2371,'minimize-maximum-value-in-a-grid','Graph','graph'),(2371,'minimize-maximum-value-in-a-grid','Topological Sort','topological-sort'),(2371,'minimize-maximum-value-in-a-grid','Sorting','sorting'),(2371,'minimize-maximum-value-in-a-grid','Matrix','matrix'),(2372,'calculate-the-influence-of-each-salesperson','Database','database'),(2373,'largest-local-values-in-a-matrix','Array','array'),(2373,'largest-local-values-in-a-matrix','Matrix','matrix'),(2374,'node-with-highest-edge-score','Hash Table','hash-table'),(2374,'node-with-highest-edge-score','Graph','graph'),(2375,'construct-smallest-number-from-di-string','String','string'),(2375,'construct-smallest-number-from-di-string','Backtracking','backtracking'),(2375,'construct-smallest-number-from-di-string','Stack','stack'),(2375,'construct-smallest-number-from-di-string','Greedy','greedy'),(2376,'count-special-integers','Math','math'),(2376,'count-special-integers','Dynamic Programming','dynamic-programming'),(2377,'sort-the-olympic-table','Database','database'),(2378,'choose-edges-to-maximize-score-in-a-tree','Dynamic Programming','dynamic-programming'),(2378,'choose-edges-to-maximize-score-in-a-tree','Tree','tree'),(2378,'choose-edges-to-maximize-score-in-a-tree','Depth-First Search','depth-first-search'),(2379,'minimum-recolors-to-get-k-consecutive-black-blocks','String','string'),(2379,'minimum-recolors-to-get-k-consecutive-black-blocks','Sliding Window','sliding-window'),(2380,'time-needed-to-rearrange-a-binary-string','String','string'),(2380,'time-needed-to-rearrange-a-binary-string','Dynamic Programming','dynamic-programming'),(2380,'time-needed-to-rearrange-a-binary-string','Simulation','simulation'),(2381,'shifting-letters-ii','Array','array'),(2381,'shifting-letters-ii','String','string'),(2381,'shifting-letters-ii','Prefix Sum','prefix-sum'),(2382,'maximum-segment-sum-after-removals','Array','array'),(2382,'maximum-segment-sum-after-removals','Union Find','union-find'),(2382,'maximum-segment-sum-after-removals','Prefix Sum','prefix-sum'),(2382,'maximum-segment-sum-after-removals','Ordered Set','ordered-set'),(2383,'minimum-hours-of-training-to-win-a-competition','Array','array'),(2383,'minimum-hours-of-training-to-win-a-competition','Greedy','greedy'),(2384,'largest-palindromic-number','Hash Table','hash-table'),(2384,'largest-palindromic-number','String','string'),(2384,'largest-palindromic-number','Greedy','greedy'),(2385,'amount-of-time-for-binary-tree-to-be-infected','Tree','tree'),(2385,'amount-of-time-for-binary-tree-to-be-infected','Depth-First Search','depth-first-search'),(2385,'amount-of-time-for-binary-tree-to-be-infected','Breadth-First Search','breadth-first-search'),(2385,'amount-of-time-for-binary-tree-to-be-infected','Binary Tree','binary-tree'),(2386,'find-the-k-sum-of-an-array','Array','array'),(2386,'find-the-k-sum-of-an-array','Sorting','sorting'),(2386,'find-the-k-sum-of-an-array','Heap (Priority Queue)','heap-priority-queue'),(2387,'median-of-a-row-wise-sorted-matrix','Array','array'),(2387,'median-of-a-row-wise-sorted-matrix','Binary Search','binary-search'),(2387,'median-of-a-row-wise-sorted-matrix','Matrix','matrix'),(2388,'change-null-values-in-a-table-to-the-previous-value','Database','database'),(2389,'longest-subsequence-with-limited-sum','Array','array'),(2389,'longest-subsequence-with-limited-sum','Binary Search','binary-search'),(2389,'longest-subsequence-with-limited-sum','Greedy','greedy'),(2389,'longest-subsequence-with-limited-sum','Sorting','sorting'),(2389,'longest-subsequence-with-limited-sum','Prefix Sum','prefix-sum'),(2390,'removing-stars-from-a-string','String','string'),(2390,'removing-stars-from-a-string','Stack','stack'),(2390,'removing-stars-from-a-string','Simulation','simulation'),(2391,'minimum-amount-of-time-to-collect-garbage','Array','array'),(2391,'minimum-amount-of-time-to-collect-garbage','String','string'),(2391,'minimum-amount-of-time-to-collect-garbage','Prefix Sum','prefix-sum'),(2392,'build-a-matrix-with-conditions','Array','array'),(2392,'build-a-matrix-with-conditions','Graph','graph'),(2392,'build-a-matrix-with-conditions','Topological Sort','topological-sort'),(2392,'build-a-matrix-with-conditions','Matrix','matrix'),(2393,'count-strictly-increasing-subarrays','Array','array'),(2393,'count-strictly-increasing-subarrays','Math','math'),(2393,'count-strictly-increasing-subarrays','Dynamic Programming','dynamic-programming'),(2394,'employees-with-deductions','Database','database'),(2395,'find-subarrays-with-equal-sum','Array','array'),(2395,'find-subarrays-with-equal-sum','Hash Table','hash-table'),(2396,'strictly-palindromic-number','Math','math'),(2396,'strictly-palindromic-number','Two Pointers','two-pointers'),(2396,'strictly-palindromic-number','Brainteaser','brainteaser'),(2397,'maximum-rows-covered-by-columns','Array','array'),(2397,'maximum-rows-covered-by-columns','Backtracking','backtracking'),(2397,'maximum-rows-covered-by-columns','Bit Manipulation','bit-manipulation'),(2397,'maximum-rows-covered-by-columns','Matrix','matrix'),(2397,'maximum-rows-covered-by-columns','Enumeration','enumeration'),(2398,'maximum-number-of-robots-within-budget','Array','array'),(2398,'maximum-number-of-robots-within-budget','Binary Search','binary-search'),(2398,'maximum-number-of-robots-within-budget','Queue','queue'),(2398,'maximum-number-of-robots-within-budget','Sliding Window','sliding-window'),(2398,'maximum-number-of-robots-within-budget','Heap (Priority Queue)','heap-priority-queue'),(2398,'maximum-number-of-robots-within-budget','Prefix Sum','prefix-sum'),(2399,'check-distances-between-same-letters','Array','array'),(2399,'check-distances-between-same-letters','Hash Table','hash-table'),(2399,'check-distances-between-same-letters','String','string'),(2400,'number-of-ways-to-reach-a-position-after-exactly-k-steps','Math','math'),(2400,'number-of-ways-to-reach-a-position-after-exactly-k-steps','Dynamic Programming','dynamic-programming'),(2400,'number-of-ways-to-reach-a-position-after-exactly-k-steps','Combinatorics','combinatorics'),(2401,'longest-nice-subarray','Array','array'),(2401,'longest-nice-subarray','Bit Manipulation','bit-manipulation'),(2401,'longest-nice-subarray','Sliding Window','sliding-window'),(2402,'meeting-rooms-iii','Array','array'),(2402,'meeting-rooms-iii','Sorting','sorting'),(2402,'meeting-rooms-iii','Heap (Priority Queue)','heap-priority-queue'),(2403,'minimum-time-to-kill-all-monsters','Array','array'),(2403,'minimum-time-to-kill-all-monsters','Dynamic Programming','dynamic-programming'),(2403,'minimum-time-to-kill-all-monsters','Bit Manipulation','bit-manipulation'),(2403,'minimum-time-to-kill-all-monsters','Bitmask','bitmask'),(2404,'most-frequent-even-element','Array','array'),(2404,'most-frequent-even-element','Hash Table','hash-table'),(2404,'most-frequent-even-element','Counting','counting'),(2405,'optimal-partition-of-string','Hash Table','hash-table'),(2405,'optimal-partition-of-string','String','string'),(2405,'optimal-partition-of-string','Greedy','greedy'),(2406,'divide-intervals-into-minimum-number-of-groups','Array','array'),(2406,'divide-intervals-into-minimum-number-of-groups','Two Pointers','two-pointers'),(2406,'divide-intervals-into-minimum-number-of-groups','Greedy','greedy'),(2406,'divide-intervals-into-minimum-number-of-groups','Sorting','sorting'),(2406,'divide-intervals-into-minimum-number-of-groups','Heap (Priority Queue)','heap-priority-queue'),(2406,'divide-intervals-into-minimum-number-of-groups','Prefix Sum','prefix-sum'),(2407,'longest-increasing-subsequence-ii','Array','array'),(2407,'longest-increasing-subsequence-ii','Divide and Conquer','divide-and-conquer'),(2407,'longest-increasing-subsequence-ii','Dynamic Programming','dynamic-programming'),(2407,'longest-increasing-subsequence-ii','Binary Indexed Tree','binary-indexed-tree'),(2407,'longest-increasing-subsequence-ii','Segment Tree','segment-tree'),(2407,'longest-increasing-subsequence-ii','Queue','queue'),(2407,'longest-increasing-subsequence-ii','Monotonic Queue','monotonic-queue'),(2408,'design-sql','Array','array'),(2408,'design-sql','Hash Table','hash-table'),(2408,'design-sql','String','string'),(2408,'design-sql','Design','design'),(2409,'count-days-spent-together','Math','math'),(2409,'count-days-spent-together','String','string'),(2410,'maximum-matching-of-players-with-trainers','Array','array'),(2410,'maximum-matching-of-players-with-trainers','Two Pointers','two-pointers'),(2410,'maximum-matching-of-players-with-trainers','Greedy','greedy'),(2410,'maximum-matching-of-players-with-trainers','Sorting','sorting'),(2411,'smallest-subarrays-with-maximum-bitwise-or','Array','array'),(2411,'smallest-subarrays-with-maximum-bitwise-or','Binary Search','binary-search'),(2411,'smallest-subarrays-with-maximum-bitwise-or','Bit Manipulation','bit-manipulation'),(2411,'smallest-subarrays-with-maximum-bitwise-or','Sliding Window','sliding-window'),(2412,'minimum-money-required-before-transactions','Array','array'),(2412,'minimum-money-required-before-transactions','Greedy','greedy'),(2412,'minimum-money-required-before-transactions','Sorting','sorting'),(2413,'smallest-even-multiple','Math','math'),(2413,'smallest-even-multiple','Number Theory','number-theory'),(2414,'length-of-the-longest-alphabetical-continuous-substring','String','string'),(2415,'reverse-odd-levels-of-binary-tree','Tree','tree'),(2415,'reverse-odd-levels-of-binary-tree','Depth-First Search','depth-first-search'),(2415,'reverse-odd-levels-of-binary-tree','Breadth-First Search','breadth-first-search'),(2415,'reverse-odd-levels-of-binary-tree','Binary Tree','binary-tree'),(2416,'sum-of-prefix-scores-of-strings','Array','array'),(2416,'sum-of-prefix-scores-of-strings','String','string'),(2416,'sum-of-prefix-scores-of-strings','Trie','trie'),(2416,'sum-of-prefix-scores-of-strings','Counting','counting'),(2417,'closest-fair-integer','Math','math'),(2417,'closest-fair-integer','Enumeration','enumeration'),(2418,'sort-the-people','Array','array'),(2418,'sort-the-people','Hash Table','hash-table'),(2418,'sort-the-people','String','string'),(2418,'sort-the-people','Sorting','sorting'),(2419,'longest-subarray-with-maximum-bitwise-and','Array','array'),(2419,'longest-subarray-with-maximum-bitwise-and','Bit Manipulation','bit-manipulation'),(2419,'longest-subarray-with-maximum-bitwise-and','Brainteaser','brainteaser'),(2420,'find-all-good-indices','Array','array'),(2420,'find-all-good-indices','Dynamic Programming','dynamic-programming'),(2420,'find-all-good-indices','Prefix Sum','prefix-sum'),(2421,'number-of-good-paths','Array','array'),(2421,'number-of-good-paths','Tree','tree'),(2421,'number-of-good-paths','Union Find','union-find'),(2421,'number-of-good-paths','Graph','graph'),(2422,'merge-operations-to-turn-array-into-a-palindrome','Array','array'),(2422,'merge-operations-to-turn-array-into-a-palindrome','Two Pointers','two-pointers'),(2422,'merge-operations-to-turn-array-into-a-palindrome','Greedy','greedy'),(2423,'remove-letter-to-equalize-frequency','Hash Table','hash-table'),(2423,'remove-letter-to-equalize-frequency','String','string'),(2423,'remove-letter-to-equalize-frequency','Counting','counting'),(2424,'longest-uploaded-prefix','Binary Search','binary-search'),(2424,'longest-uploaded-prefix','Union Find','union-find'),(2424,'longest-uploaded-prefix','Design','design'),(2424,'longest-uploaded-prefix','Binary Indexed Tree','binary-indexed-tree'),(2424,'longest-uploaded-prefix','Segment Tree','segment-tree'),(2424,'longest-uploaded-prefix','Heap (Priority Queue)','heap-priority-queue'),(2424,'longest-uploaded-prefix','Ordered Set','ordered-set'),(2425,'bitwise-xor-of-all-pairings','Array','array'),(2425,'bitwise-xor-of-all-pairings','Bit Manipulation','bit-manipulation'),(2425,'bitwise-xor-of-all-pairings','Brainteaser','brainteaser'),(2426,'number-of-pairs-satisfying-inequality','Array','array'),(2426,'number-of-pairs-satisfying-inequality','Binary Search','binary-search'),(2426,'number-of-pairs-satisfying-inequality','Divide and Conquer','divide-and-conquer'),(2426,'number-of-pairs-satisfying-inequality','Binary Indexed Tree','binary-indexed-tree'),(2426,'number-of-pairs-satisfying-inequality','Segment Tree','segment-tree'),(2426,'number-of-pairs-satisfying-inequality','Merge Sort','merge-sort'),(2426,'number-of-pairs-satisfying-inequality','Ordered Set','ordered-set'),(2427,'number-of-common-factors','Math','math'),(2427,'number-of-common-factors','Enumeration','enumeration'),(2427,'number-of-common-factors','Number Theory','number-theory'),(2428,'maximum-sum-of-an-hourglass','Array','array'),(2428,'maximum-sum-of-an-hourglass','Matrix','matrix'),(2428,'maximum-sum-of-an-hourglass','Prefix Sum','prefix-sum'),(2429,'minimize-xor','Greedy','greedy'),(2429,'minimize-xor','Bit Manipulation','bit-manipulation'),(2430,'maximum-deletions-on-a-string','String','string'),(2430,'maximum-deletions-on-a-string','Dynamic Programming','dynamic-programming'),(2430,'maximum-deletions-on-a-string','Rolling Hash','rolling-hash'),(2430,'maximum-deletions-on-a-string','String Matching','string-matching'),(2430,'maximum-deletions-on-a-string','Hash Function','hash-function'),(2431,'maximize-total-tastiness-of-purchased-fruits','Array','array'),(2431,'maximize-total-tastiness-of-purchased-fruits','Dynamic Programming','dynamic-programming'),(2432,'the-employee-that-worked-on-the-longest-task','Array','array'),(2433,'find-the-original-array-of-prefix-xor','Array','array'),(2433,'find-the-original-array-of-prefix-xor','Bit Manipulation','bit-manipulation'),(2434,'using-a-robot-to-print-the-lexicographically-smallest-string','Hash Table','hash-table'),(2434,'using-a-robot-to-print-the-lexicographically-smallest-string','String','string'),(2434,'using-a-robot-to-print-the-lexicographically-smallest-string','Stack','stack'),(2434,'using-a-robot-to-print-the-lexicographically-smallest-string','Greedy','greedy'),(2435,'paths-in-matrix-whose-sum-is-divisible-by-k','Array','array'),(2435,'paths-in-matrix-whose-sum-is-divisible-by-k','Dynamic Programming','dynamic-programming'),(2435,'paths-in-matrix-whose-sum-is-divisible-by-k','Matrix','matrix'),(2436,'minimum-split-into-subarrays-with-gcd-greater-than-one','Array','array'),(2436,'minimum-split-into-subarrays-with-gcd-greater-than-one','Math','math'),(2436,'minimum-split-into-subarrays-with-gcd-greater-than-one','Dynamic Programming','dynamic-programming'),(2436,'minimum-split-into-subarrays-with-gcd-greater-than-one','Greedy','greedy'),(2436,'minimum-split-into-subarrays-with-gcd-greater-than-one','Number Theory','number-theory'),(2437,'number-of-valid-clock-times','String','string'),(2437,'number-of-valid-clock-times','Enumeration','enumeration'),(2438,'range-product-queries-of-powers','Array','array'),(2438,'range-product-queries-of-powers','Bit Manipulation','bit-manipulation'),(2438,'range-product-queries-of-powers','Prefix Sum','prefix-sum'),(2439,'minimize-maximum-of-array','Array','array'),(2439,'minimize-maximum-of-array','Binary Search','binary-search'),(2439,'minimize-maximum-of-array','Dynamic Programming','dynamic-programming'),(2439,'minimize-maximum-of-array','Greedy','greedy'),(2439,'minimize-maximum-of-array','Prefix Sum','prefix-sum'),(2440,'create-components-with-same-value','Array','array'),(2440,'create-components-with-same-value','Math','math'),(2440,'create-components-with-same-value','Tree','tree'),(2440,'create-components-with-same-value','Depth-First Search','depth-first-search'),(2440,'create-components-with-same-value','Enumeration','enumeration'),(2441,'largest-positive-integer-that-exists-with-its-negative','Array','array'),(2441,'largest-positive-integer-that-exists-with-its-negative','Hash Table','hash-table'),(2442,'count-number-of-distinct-integers-after-reverse-operations','Array','array'),(2442,'count-number-of-distinct-integers-after-reverse-operations','Hash Table','hash-table'),(2442,'count-number-of-distinct-integers-after-reverse-operations','Math','math'),(2443,'sum-of-number-and-its-reverse','Math','math'),(2443,'sum-of-number-and-its-reverse','Enumeration','enumeration'),(2444,'count-subarrays-with-fixed-bounds','Array','array'),(2444,'count-subarrays-with-fixed-bounds','Queue','queue'),(2444,'count-subarrays-with-fixed-bounds','Sliding Window','sliding-window'),(2444,'count-subarrays-with-fixed-bounds','Monotonic Queue','monotonic-queue'),(2445,'number-of-nodes-with-value-one','Tree','tree'),(2445,'number-of-nodes-with-value-one','Depth-First Search','depth-first-search'),(2445,'number-of-nodes-with-value-one','Breadth-First Search','breadth-first-search'),(2445,'number-of-nodes-with-value-one','Binary Tree','binary-tree'),(2446,'determine-if-two-events-have-conflict','Array','array'),(2446,'determine-if-two-events-have-conflict','String','string'),(2447,'number-of-subarrays-with-gcd-equal-to-k','Array','array'),(2447,'number-of-subarrays-with-gcd-equal-to-k','Math','math'),(2447,'number-of-subarrays-with-gcd-equal-to-k','Number Theory','number-theory'),(2448,'minimum-cost-to-make-array-equal','Array','array'),(2448,'minimum-cost-to-make-array-equal','Binary Search','binary-search'),(2448,'minimum-cost-to-make-array-equal','Greedy','greedy'),(2448,'minimum-cost-to-make-array-equal','Sorting','sorting'),(2448,'minimum-cost-to-make-array-equal','Prefix Sum','prefix-sum'),(2449,'minimum-number-of-operations-to-make-arrays-similar','Array','array'),(2449,'minimum-number-of-operations-to-make-arrays-similar','Greedy','greedy'),(2449,'minimum-number-of-operations-to-make-arrays-similar','Sorting','sorting'),(2450,'number-of-distinct-binary-strings-after-applying-operations','Math','math'),(2450,'number-of-distinct-binary-strings-after-applying-operations','String','string'),(2451,'odd-string-difference','Hash Table','hash-table'),(2451,'odd-string-difference','Math','math'),(2451,'odd-string-difference','String','string'),(2452,'words-within-two-edits-of-dictionary','Array','array'),(2452,'words-within-two-edits-of-dictionary','String','string'),(2453,'destroy-sequential-targets','Array','array'),(2453,'destroy-sequential-targets','Hash Table','hash-table'),(2453,'destroy-sequential-targets','Counting','counting'),(2454,'next-greater-element-iv','Array','array'),(2454,'next-greater-element-iv','Binary Search','binary-search'),(2454,'next-greater-element-iv','Stack','stack'),(2454,'next-greater-element-iv','Sorting','sorting'),(2454,'next-greater-element-iv','Heap (Priority Queue)','heap-priority-queue'),(2454,'next-greater-element-iv','Monotonic Stack','monotonic-stack'),(2455,'average-value-of-even-numbers-that-are-divisible-by-three','Array','array'),(2455,'average-value-of-even-numbers-that-are-divisible-by-three','Math','math'),(2456,'most-popular-video-creator','Array','array'),(2456,'most-popular-video-creator','Hash Table','hash-table'),(2456,'most-popular-video-creator','String','string'),(2456,'most-popular-video-creator','Sorting','sorting'),(2456,'most-popular-video-creator','Heap (Priority Queue)','heap-priority-queue'),(2457,'minimum-addition-to-make-integer-beautiful','Math','math'),(2457,'minimum-addition-to-make-integer-beautiful','Greedy','greedy'),(2458,'height-of-binary-tree-after-subtree-removal-queries','Array','array'),(2458,'height-of-binary-tree-after-subtree-removal-queries','Tree','tree'),(2458,'height-of-binary-tree-after-subtree-removal-queries','Depth-First Search','depth-first-search'),(2458,'height-of-binary-tree-after-subtree-removal-queries','Breadth-First Search','breadth-first-search'),(2458,'height-of-binary-tree-after-subtree-removal-queries','Binary Tree','binary-tree'),(2459,'sort-array-by-moving-items-to-empty-space','Array','array'),(2459,'sort-array-by-moving-items-to-empty-space','Greedy','greedy'),(2459,'sort-array-by-moving-items-to-empty-space','Sorting','sorting'),(2460,'apply-operations-to-an-array','Array','array'),(2460,'apply-operations-to-an-array','Simulation','simulation'),(2461,'maximum-sum-of-distinct-subarrays-with-length-k','Array','array'),(2461,'maximum-sum-of-distinct-subarrays-with-length-k','Hash Table','hash-table'),(2461,'maximum-sum-of-distinct-subarrays-with-length-k','Sliding Window','sliding-window'),(2462,'total-cost-to-hire-k-workers','Array','array'),(2462,'total-cost-to-hire-k-workers','Two Pointers','two-pointers'),(2462,'total-cost-to-hire-k-workers','Heap (Priority Queue)','heap-priority-queue'),(2462,'total-cost-to-hire-k-workers','Simulation','simulation'),(2463,'minimum-total-distance-traveled','Array','array'),(2463,'minimum-total-distance-traveled','Dynamic Programming','dynamic-programming'),(2463,'minimum-total-distance-traveled','Sorting','sorting'),(2464,'minimum-subarrays-in-a-valid-split','Array','array'),(2464,'minimum-subarrays-in-a-valid-split','Math','math'),(2464,'minimum-subarrays-in-a-valid-split','Dynamic Programming','dynamic-programming'),(2464,'minimum-subarrays-in-a-valid-split','Number Theory','number-theory'),(2465,'number-of-distinct-averages','Array','array'),(2465,'number-of-distinct-averages','Hash Table','hash-table'),(2465,'number-of-distinct-averages','Two Pointers','two-pointers'),(2465,'number-of-distinct-averages','Sorting','sorting'),(2466,'count-ways-to-build-good-strings','Dynamic Programming','dynamic-programming'),(2467,'most-profitable-path-in-a-tree','Array','array'),(2467,'most-profitable-path-in-a-tree','Tree','tree'),(2467,'most-profitable-path-in-a-tree','Depth-First Search','depth-first-search'),(2467,'most-profitable-path-in-a-tree','Breadth-First Search','breadth-first-search'),(2467,'most-profitable-path-in-a-tree','Graph','graph'),(2468,'split-message-based-on-limit','String','string'),(2468,'split-message-based-on-limit','Binary Search','binary-search'),(2469,'convert-the-temperature','Math','math'),(2470,'number-of-subarrays-with-lcm-equal-to-k','Array','array'),(2470,'number-of-subarrays-with-lcm-equal-to-k','Math','math'),(2470,'number-of-subarrays-with-lcm-equal-to-k','Number Theory','number-theory'),(2471,'minimum-number-of-operations-to-sort-a-binary-tree-by-level','Tree','tree'),(2471,'minimum-number-of-operations-to-sort-a-binary-tree-by-level','Breadth-First Search','breadth-first-search'),(2471,'minimum-number-of-operations-to-sort-a-binary-tree-by-level','Binary Tree','binary-tree'),(2472,'maximum-number-of-non-overlapping-palindrome-substrings','String','string'),(2472,'maximum-number-of-non-overlapping-palindrome-substrings','Dynamic Programming','dynamic-programming'),(2473,'minimum-cost-to-buy-apples','Array','array'),(2473,'minimum-cost-to-buy-apples','Graph','graph'),(2473,'minimum-cost-to-buy-apples','Heap (Priority Queue)','heap-priority-queue'),(2473,'minimum-cost-to-buy-apples','Shortest Path','shortest-path'),(2474,'customers-with-strictly-increasing-purchases','Database','database'),(2475,'number-of-unequal-triplets-in-array','Array','array'),(2475,'number-of-unequal-triplets-in-array','Hash Table','hash-table'),(2476,'closest-nodes-queries-in-a-binary-search-tree','Array','array'),(2476,'closest-nodes-queries-in-a-binary-search-tree','Binary Search','binary-search'),(2476,'closest-nodes-queries-in-a-binary-search-tree','Tree','tree'),(2476,'closest-nodes-queries-in-a-binary-search-tree','Depth-First Search','depth-first-search'),(2476,'closest-nodes-queries-in-a-binary-search-tree','Binary Tree','binary-tree'),(2477,'minimum-fuel-cost-to-report-to-the-capital','Tree','tree'),(2477,'minimum-fuel-cost-to-report-to-the-capital','Depth-First Search','depth-first-search'),(2477,'minimum-fuel-cost-to-report-to-the-capital','Breadth-First Search','breadth-first-search'),(2477,'minimum-fuel-cost-to-report-to-the-capital','Graph','graph'),(2478,'number-of-beautiful-partitions','String','string'),(2478,'number-of-beautiful-partitions','Dynamic Programming','dynamic-programming'),(2479,'maximum-xor-of-two-non-overlapping-subtrees','Tree','tree'),(2479,'maximum-xor-of-two-non-overlapping-subtrees','Depth-First Search','depth-first-search'),(2479,'maximum-xor-of-two-non-overlapping-subtrees','Graph','graph'),(2479,'maximum-xor-of-two-non-overlapping-subtrees','Trie','trie'),(2480,'form-a-chemical-bond','Database','database'),(2481,'minimum-cuts-to-divide-a-circle','Math','math'),(2481,'minimum-cuts-to-divide-a-circle','Geometry','geometry'),(2482,'difference-between-ones-and-zeros-in-row-and-column','Array','array'),(2482,'difference-between-ones-and-zeros-in-row-and-column','Matrix','matrix'),(2482,'difference-between-ones-and-zeros-in-row-and-column','Simulation','simulation'),(2483,'minimum-penalty-for-a-shop','String','string'),(2483,'minimum-penalty-for-a-shop','Prefix Sum','prefix-sum'),(2484,'count-palindromic-subsequences','String','string'),(2484,'count-palindromic-subsequences','Dynamic Programming','dynamic-programming'),(2485,'find-the-pivot-integer','Math','math'),(2485,'find-the-pivot-integer','Prefix Sum','prefix-sum'),(2486,'append-characters-to-string-to-make-subsequence','Two Pointers','two-pointers'),(2486,'append-characters-to-string-to-make-subsequence','String','string'),(2486,'append-characters-to-string-to-make-subsequence','Greedy','greedy'),(2487,'remove-nodes-from-linked-list','Linked List','linked-list'),(2487,'remove-nodes-from-linked-list','Stack','stack'),(2487,'remove-nodes-from-linked-list','Recursion','recursion'),(2487,'remove-nodes-from-linked-list','Monotonic Stack','monotonic-stack'),(2488,'count-subarrays-with-median-k','Array','array'),(2488,'count-subarrays-with-median-k','Hash Table','hash-table'),(2488,'count-subarrays-with-median-k','Prefix Sum','prefix-sum'),(2489,'number-of-substrings-with-fixed-ratio','Hash Table','hash-table'),(2489,'number-of-substrings-with-fixed-ratio','Math','math'),(2489,'number-of-substrings-with-fixed-ratio','String','string'),(2489,'number-of-substrings-with-fixed-ratio','Prefix Sum','prefix-sum'),(2490,'circular-sentence','String','string'),(2491,'divide-players-into-teams-of-equal-skill','Array','array'),(2491,'divide-players-into-teams-of-equal-skill','Hash Table','hash-table'),(2491,'divide-players-into-teams-of-equal-skill','Two Pointers','two-pointers'),(2491,'divide-players-into-teams-of-equal-skill','Sorting','sorting'),(2492,'minimum-score-of-a-path-between-two-cities','Depth-First Search','depth-first-search'),(2492,'minimum-score-of-a-path-between-two-cities','Breadth-First Search','breadth-first-search'),(2492,'minimum-score-of-a-path-between-two-cities','Union Find','union-find'),(2492,'minimum-score-of-a-path-between-two-cities','Graph','graph'),(2493,'divide-nodes-into-the-maximum-number-of-groups','Breadth-First Search','breadth-first-search'),(2493,'divide-nodes-into-the-maximum-number-of-groups','Union Find','union-find'),(2493,'divide-nodes-into-the-maximum-number-of-groups','Graph','graph'),(2494,'merge-overlapping-events-in-the-same-hall','Database','database'),(2495,'number-of-subarrays-having-even-product','Array','array'),(2495,'number-of-subarrays-having-even-product','Math','math'),(2495,'number-of-subarrays-having-even-product','Dynamic Programming','dynamic-programming'),(2496,'maximum-value-of-a-string-in-an-array','Array','array'),(2496,'maximum-value-of-a-string-in-an-array','String','string'),(2497,'maximum-star-sum-of-a-graph','Array','array'),(2497,'maximum-star-sum-of-a-graph','Greedy','greedy'),(2497,'maximum-star-sum-of-a-graph','Graph','graph'),(2497,'maximum-star-sum-of-a-graph','Sorting','sorting'),(2497,'maximum-star-sum-of-a-graph','Heap (Priority Queue)','heap-priority-queue'),(2498,'frog-jump-ii','Array','array'),(2498,'frog-jump-ii','Binary Search','binary-search'),(2498,'frog-jump-ii','Greedy','greedy'),(2499,'minimum-total-cost-to-make-arrays-unequal','Array','array'),(2499,'minimum-total-cost-to-make-arrays-unequal','Hash Table','hash-table'),(2499,'minimum-total-cost-to-make-arrays-unequal','Greedy','greedy'),(2499,'minimum-total-cost-to-make-arrays-unequal','Counting','counting'),(2500,'delete-greatest-value-in-each-row','Array','array'),(2500,'delete-greatest-value-in-each-row','Sorting','sorting'),(2500,'delete-greatest-value-in-each-row','Matrix','matrix'),(2501,'longest-square-streak-in-an-array','Array','array'),(2501,'longest-square-streak-in-an-array','Hash Table','hash-table'),(2501,'longest-square-streak-in-an-array','Binary Search','binary-search'),(2501,'longest-square-streak-in-an-array','Dynamic Programming','dynamic-programming'),(2501,'longest-square-streak-in-an-array','Sorting','sorting'),(2502,'design-memory-allocator','Array','array'),(2502,'design-memory-allocator','Hash Table','hash-table'),(2502,'design-memory-allocator','Design','design'),(2502,'design-memory-allocator','Simulation','simulation'),(2503,'maximum-number-of-points-from-grid-queries','Array','array'),(2503,'maximum-number-of-points-from-grid-queries','Breadth-First Search','breadth-first-search'),(2503,'maximum-number-of-points-from-grid-queries','Union Find','union-find'),(2503,'maximum-number-of-points-from-grid-queries','Sorting','sorting'),(2503,'maximum-number-of-points-from-grid-queries','Heap (Priority Queue)','heap-priority-queue'),(2504,'concatenate-the-name-and-the-profession','Database','database'),(2505,'bitwise-or-of-all-subsequence-sums','Array','array'),(2505,'bitwise-or-of-all-subsequence-sums','Math','math'),(2505,'bitwise-or-of-all-subsequence-sums','Bit Manipulation','bit-manipulation'),(2505,'bitwise-or-of-all-subsequence-sums','Brainteaser','brainteaser'),(2506,'count-pairs-of-similar-strings','Array','array'),(2506,'count-pairs-of-similar-strings','Hash Table','hash-table'),(2506,'count-pairs-of-similar-strings','String','string'),(2507,'smallest-value-after-replacing-with-sum-of-prime-factors','Math','math'),(2507,'smallest-value-after-replacing-with-sum-of-prime-factors','Number Theory','number-theory'),(2508,'add-edges-to-make-degrees-of-all-nodes-even','Hash Table','hash-table'),(2508,'add-edges-to-make-degrees-of-all-nodes-even','Graph','graph'),(2509,'cycle-length-queries-in-a-tree','Tree','tree'),(2509,'cycle-length-queries-in-a-tree','Binary Tree','binary-tree'),(2510,'check-if-there-is-a-path-with-equal-number-of-0s-and-1s','Array','array'),(2510,'check-if-there-is-a-path-with-equal-number-of-0s-and-1s','Dynamic Programming','dynamic-programming'),(2510,'check-if-there-is-a-path-with-equal-number-of-0s-and-1s','Matrix','matrix'),(2511,'maximum-enemy-forts-that-can-be-captured','Array','array'),(2511,'maximum-enemy-forts-that-can-be-captured','Two Pointers','two-pointers'),(2512,'reward-top-k-students','Array','array'),(2512,'reward-top-k-students','Hash Table','hash-table'),(2512,'reward-top-k-students','String','string'),(2512,'reward-top-k-students','Sorting','sorting'),(2512,'reward-top-k-students','Heap (Priority Queue)','heap-priority-queue'),(2513,'minimize-the-maximum-of-two-arrays','Math','math'),(2513,'minimize-the-maximum-of-two-arrays','Binary Search','binary-search'),(2513,'minimize-the-maximum-of-two-arrays','Number Theory','number-theory'),(2514,'count-anagrams','Hash Table','hash-table'),(2514,'count-anagrams','Math','math'),(2514,'count-anagrams','String','string'),(2514,'count-anagrams','Combinatorics','combinatorics'),(2514,'count-anagrams','Counting','counting'),(2515,'shortest-distance-to-target-string-in-a-circular-array','Array','array'),(2515,'shortest-distance-to-target-string-in-a-circular-array','String','string'),(2516,'take-k-of-each-character-from-left-and-right','Hash Table','hash-table'),(2516,'take-k-of-each-character-from-left-and-right','String','string'),(2516,'take-k-of-each-character-from-left-and-right','Sliding Window','sliding-window'),(2517,'maximum-tastiness-of-candy-basket','Array','array'),(2517,'maximum-tastiness-of-candy-basket','Binary Search','binary-search'),(2517,'maximum-tastiness-of-candy-basket','Sorting','sorting'),(2518,'number-of-great-partitions','Array','array'),(2518,'number-of-great-partitions','Dynamic Programming','dynamic-programming'),(2519,'count-the-number-of-k-big-indices','Array','array'),(2519,'count-the-number-of-k-big-indices','Binary Search','binary-search'),(2519,'count-the-number-of-k-big-indices','Divide and Conquer','divide-and-conquer'),(2519,'count-the-number-of-k-big-indices','Binary Indexed Tree','binary-indexed-tree'),(2519,'count-the-number-of-k-big-indices','Segment Tree','segment-tree'),(2519,'count-the-number-of-k-big-indices','Merge Sort','merge-sort'),(2519,'count-the-number-of-k-big-indices','Ordered Set','ordered-set'),(2520,'count-the-digits-that-divide-a-number','Math','math'),(2521,'distinct-prime-factors-of-product-of-array','Array','array'),(2521,'distinct-prime-factors-of-product-of-array','Hash Table','hash-table'),(2521,'distinct-prime-factors-of-product-of-array','Math','math'),(2521,'distinct-prime-factors-of-product-of-array','Number Theory','number-theory'),(2522,'partition-string-into-substrings-with-values-at-most-k','String','string'),(2522,'partition-string-into-substrings-with-values-at-most-k','Dynamic Programming','dynamic-programming'),(2522,'partition-string-into-substrings-with-values-at-most-k','Greedy','greedy'),(2523,'closest-prime-numbers-in-range','Math','math'),(2523,'closest-prime-numbers-in-range','Number Theory','number-theory'),(2524,'maximum-frequency-score-of-a-subarray','Array','array'),(2524,'maximum-frequency-score-of-a-subarray','Hash Table','hash-table'),(2524,'maximum-frequency-score-of-a-subarray','Math','math'),(2524,'maximum-frequency-score-of-a-subarray','Sliding Window','sliding-window'),(2525,'categorize-box-according-to-criteria','Math','math'),(2526,'find-consecutive-integers-from-a-data-stream','Hash Table','hash-table'),(2526,'find-consecutive-integers-from-a-data-stream','Design','design'),(2526,'find-consecutive-integers-from-a-data-stream','Queue','queue'),(2526,'find-consecutive-integers-from-a-data-stream','Counting','counting'),(2526,'find-consecutive-integers-from-a-data-stream','Data Stream','data-stream'),(2527,'find-xor-beauty-of-array','Array','array'),(2527,'find-xor-beauty-of-array','Math','math'),(2527,'find-xor-beauty-of-array','Bit Manipulation','bit-manipulation'),(2528,'maximize-the-minimum-powered-city','Array','array'),(2528,'maximize-the-minimum-powered-city','Binary Search','binary-search'),(2528,'maximize-the-minimum-powered-city','Greedy','greedy'),(2528,'maximize-the-minimum-powered-city','Queue','queue'),(2528,'maximize-the-minimum-powered-city','Sliding Window','sliding-window'),(2528,'maximize-the-minimum-powered-city','Prefix Sum','prefix-sum'),(2529,'maximum-count-of-positive-integer-and-negative-integer','Array','array'),(2529,'maximum-count-of-positive-integer-and-negative-integer','Binary Search','binary-search'),(2529,'maximum-count-of-positive-integer-and-negative-integer','Counting','counting'),(2530,'maximal-score-after-applying-k-operations','Array','array'),(2530,'maximal-score-after-applying-k-operations','Greedy','greedy'),(2530,'maximal-score-after-applying-k-operations','Heap (Priority Queue)','heap-priority-queue'),(2531,'make-number-of-distinct-characters-equal','Hash Table','hash-table'),(2531,'make-number-of-distinct-characters-equal','String','string'),(2531,'make-number-of-distinct-characters-equal','Counting','counting'),(2532,'time-to-cross-a-bridge','Array','array'),(2532,'time-to-cross-a-bridge','Heap (Priority Queue)','heap-priority-queue'),(2532,'time-to-cross-a-bridge','Simulation','simulation'),(2533,'number-of-good-binary-strings','Dynamic Programming','dynamic-programming'),(2534,'time-taken-to-cross-the-door','Array','array'),(2534,'time-taken-to-cross-the-door','Queue','queue'),(2534,'time-taken-to-cross-the-door','Simulation','simulation'),(2535,'difference-between-element-sum-and-digit-sum-of-an-array','Array','array'),(2535,'difference-between-element-sum-and-digit-sum-of-an-array','Math','math'),(2536,'increment-submatrices-by-one','Array','array'),(2536,'increment-submatrices-by-one','Matrix','matrix'),(2536,'increment-submatrices-by-one','Prefix Sum','prefix-sum'),(2537,'count-the-number-of-good-subarrays','Array','array'),(2537,'count-the-number-of-good-subarrays','Hash Table','hash-table'),(2537,'count-the-number-of-good-subarrays','Sliding Window','sliding-window'),(2538,'difference-between-maximum-and-minimum-price-sum','Array','array'),(2538,'difference-between-maximum-and-minimum-price-sum','Dynamic Programming','dynamic-programming'),(2538,'difference-between-maximum-and-minimum-price-sum','Tree','tree'),(2539,'count-the-number-of-good-subsequences','Hash Table','hash-table'),(2539,'count-the-number-of-good-subsequences','Math','math'),(2539,'count-the-number-of-good-subsequences','String','string'),(2539,'count-the-number-of-good-subsequences','Combinatorics','combinatorics'),(2539,'count-the-number-of-good-subsequences','Counting','counting'),(2540,'minimum-common-value','Array','array'),(2540,'minimum-common-value','Hash Table','hash-table'),(2540,'minimum-common-value','Two Pointers','two-pointers'),(2540,'minimum-common-value','Binary Search','binary-search'),(2541,'minimum-operations-to-make-array-equal-ii','Array','array'),(2541,'minimum-operations-to-make-array-equal-ii','Math','math'),(2541,'minimum-operations-to-make-array-equal-ii','Greedy','greedy'),(2542,'maximum-subsequence-score','Array','array'),(2542,'maximum-subsequence-score','Greedy','greedy'),(2542,'maximum-subsequence-score','Sorting','sorting'),(2542,'maximum-subsequence-score','Heap (Priority Queue)','heap-priority-queue'),(2543,'check-if-point-is-reachable','Math','math'),(2543,'check-if-point-is-reachable','Number Theory','number-theory'),(2544,'alternating-digit-sum','Math','math'),(2545,'sort-the-students-by-their-kth-score','Array','array'),(2545,'sort-the-students-by-their-kth-score','Sorting','sorting'),(2545,'sort-the-students-by-their-kth-score','Matrix','matrix'),(2546,'apply-bitwise-operations-to-make-strings-equal','String','string'),(2546,'apply-bitwise-operations-to-make-strings-equal','Bit Manipulation','bit-manipulation'),(2547,'minimum-cost-to-split-an-array','Array','array'),(2547,'minimum-cost-to-split-an-array','Hash Table','hash-table'),(2547,'minimum-cost-to-split-an-array','Dynamic Programming','dynamic-programming'),(2547,'minimum-cost-to-split-an-array','Counting','counting'),(2548,'maximum-price-to-fill-a-bag','Array','array'),(2548,'maximum-price-to-fill-a-bag','Greedy','greedy'),(2548,'maximum-price-to-fill-a-bag','Sorting','sorting'),(2549,'count-distinct-numbers-on-board','Array','array'),(2549,'count-distinct-numbers-on-board','Hash Table','hash-table'),(2549,'count-distinct-numbers-on-board','Math','math'),(2549,'count-distinct-numbers-on-board','Simulation','simulation'),(2550,'count-collisions-of-monkeys-on-a-polygon','Math','math'),(2550,'count-collisions-of-monkeys-on-a-polygon','Recursion','recursion'),(2551,'put-marbles-in-bags','Array','array'),(2551,'put-marbles-in-bags','Greedy','greedy'),(2551,'put-marbles-in-bags','Sorting','sorting'),(2551,'put-marbles-in-bags','Heap (Priority Queue)','heap-priority-queue'),(2552,'count-increasing-quadruplets','Array','array'),(2552,'count-increasing-quadruplets','Dynamic Programming','dynamic-programming'),(2552,'count-increasing-quadruplets','Binary Indexed Tree','binary-indexed-tree'),(2552,'count-increasing-quadruplets','Enumeration','enumeration'),(2552,'count-increasing-quadruplets','Prefix Sum','prefix-sum'),(2553,'separate-the-digits-in-an-array','Array','array'),(2553,'separate-the-digits-in-an-array','Simulation','simulation'),(2554,'maximum-number-of-integers-to-choose-from-a-range-i','Array','array'),(2554,'maximum-number-of-integers-to-choose-from-a-range-i','Hash Table','hash-table'),(2554,'maximum-number-of-integers-to-choose-from-a-range-i','Binary Search','binary-search'),(2554,'maximum-number-of-integers-to-choose-from-a-range-i','Greedy','greedy'),(2554,'maximum-number-of-integers-to-choose-from-a-range-i','Sorting','sorting'),(2555,'maximize-win-from-two-segments','Array','array'),(2555,'maximize-win-from-two-segments','Binary Search','binary-search'),(2555,'maximize-win-from-two-segments','Sliding Window','sliding-window'),(2556,'disconnect-path-in-a-binary-matrix-by-at-most-one-flip','Array','array'),(2556,'disconnect-path-in-a-binary-matrix-by-at-most-one-flip','Dynamic Programming','dynamic-programming'),(2556,'disconnect-path-in-a-binary-matrix-by-at-most-one-flip','Depth-First Search','depth-first-search'),(2556,'disconnect-path-in-a-binary-matrix-by-at-most-one-flip','Breadth-First Search','breadth-first-search'),(2556,'disconnect-path-in-a-binary-matrix-by-at-most-one-flip','Matrix','matrix'),(2557,'maximum-number-of-integers-to-choose-from-a-range-ii','Array','array'),(2557,'maximum-number-of-integers-to-choose-from-a-range-ii','Binary Search','binary-search'),(2557,'maximum-number-of-integers-to-choose-from-a-range-ii','Greedy','greedy'),(2557,'maximum-number-of-integers-to-choose-from-a-range-ii','Sorting','sorting'),(2558,'take-gifts-from-the-richest-pile','Array','array'),(2558,'take-gifts-from-the-richest-pile','Heap (Priority Queue)','heap-priority-queue'),(2558,'take-gifts-from-the-richest-pile','Simulation','simulation'),(2559,'count-vowel-strings-in-ranges','Array','array'),(2559,'count-vowel-strings-in-ranges','String','string'),(2559,'count-vowel-strings-in-ranges','Prefix Sum','prefix-sum'),(2560,'house-robber-iv','Array','array'),(2560,'house-robber-iv','Binary Search','binary-search'),(2561,'rearranging-fruits','Array','array'),(2561,'rearranging-fruits','Hash Table','hash-table'),(2561,'rearranging-fruits','Greedy','greedy'),(2562,'find-the-array-concatenation-value','Array','array'),(2562,'find-the-array-concatenation-value','Two Pointers','two-pointers'),(2562,'find-the-array-concatenation-value','Simulation','simulation'),(2563,'count-the-number-of-fair-pairs','Array','array'),(2563,'count-the-number-of-fair-pairs','Two Pointers','two-pointers'),(2563,'count-the-number-of-fair-pairs','Binary Search','binary-search'),(2563,'count-the-number-of-fair-pairs','Sorting','sorting'),(2564,'substring-xor-queries','Array','array'),(2564,'substring-xor-queries','Hash Table','hash-table'),(2564,'substring-xor-queries','String','string'),(2564,'substring-xor-queries','Bit Manipulation','bit-manipulation'),(2565,'subsequence-with-the-minimum-score','Two Pointers','two-pointers'),(2565,'subsequence-with-the-minimum-score','String','string'),(2565,'subsequence-with-the-minimum-score','Binary Search','binary-search'),(2574,'left-and-right-sum-differences','Array','array'),(2574,'left-and-right-sum-differences','Prefix Sum','prefix-sum'),(2575,'find-the-divisibility-array-of-a-string','Array','array'),(2575,'find-the-divisibility-array-of-a-string','Math','math'),(2575,'find-the-divisibility-array-of-a-string','String','string'),(2576,'find-the-maximum-number-of-marked-indices','Array','array'),(2576,'find-the-maximum-number-of-marked-indices','Two Pointers','two-pointers'),(2576,'find-the-maximum-number-of-marked-indices','Binary Search','binary-search'),(2576,'find-the-maximum-number-of-marked-indices','Greedy','greedy'),(2576,'find-the-maximum-number-of-marked-indices','Sorting','sorting'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Array','array'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Breadth-First Search','breadth-first-search'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Graph','graph'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Heap (Priority Queue)','heap-priority-queue'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Matrix','matrix'),(2577,'minimum-time-to-visit-a-cell-in-a-grid','Shortest Path','shortest-path');
/*!40000 ALTER TABLE `leetcode_topic` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2023-03-10 22:51:56
